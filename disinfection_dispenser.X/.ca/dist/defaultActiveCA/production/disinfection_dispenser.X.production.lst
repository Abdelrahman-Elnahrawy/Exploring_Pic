

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 21:07:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x5E,2
    30  0000                     
    31                           ; Generated 17/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F675 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0004                     fsr             equ	4
    66  0004                     fsr0            equ	4
    67  0000                     indf            equ	0
    68  0000                     indf0           equ	0
    69  0002                     pc              equ	2
    70  0002                     pcl             equ	2
    71  000A                     pclath          equ	10
    72  0003                     status          equ	3
    73  0000                     INDF            equ	0	;# 
    74  0001                     TMR0            equ	1	;# 
    75  0002                     PCL             equ	2	;# 
    76  0003                     STATUS          equ	3	;# 
    77  0004                     FSR             equ	4	;# 
    78  0005                     GPIO            equ	5	;# 
    79  000A                     PCLATH          equ	10	;# 
    80  000B                     INTCON          equ	11	;# 
    81  000C                     PIR1            equ	12	;# 
    82  000E                     TMR1            equ	14	;# 
    83  000E                     TMR1L           equ	14	;# 
    84  000F                     TMR1H           equ	15	;# 
    85  0010                     T1CON           equ	16	;# 
    86  0019                     CMCON           equ	25	;# 
    87  001E                     ADRESH          equ	30	;# 
    88  001F                     ADCON0          equ	31	;# 
    89  0081                     OPTION_REG      equ	129	;# 
    90  0085                     TRISIO          equ	133	;# 
    91  008C                     PIE1            equ	140	;# 
    92  008E                     PCON            equ	142	;# 
    93  0090                     OSCCAL          equ	144	;# 
    94  0095                     WPU             equ	149	;# 
    95  0096                     IOC             equ	150	;# 
    96  0096                     IOCB            equ	150	;# 
    97  0099                     VRCON           equ	153	;# 
    98  009A                     EEDATA          equ	154	;# 
    99  009A                     EEDAT           equ	154	;# 
   100  009B                     EEADR           equ	155	;# 
   101  009C                     EECON1          equ	156	;# 
   102  009D                     EECON2          equ	157	;# 
   103  009E                     ADRESL          equ	158	;# 
   104  009F                     ANSEL           equ	159	;# 
   105  0000                     INDF            equ	0	;# 
   106  0001                     TMR0            equ	1	;# 
   107  0002                     PCL             equ	2	;# 
   108  0003                     STATUS          equ	3	;# 
   109  0004                     FSR             equ	4	;# 
   110  0005                     GPIO            equ	5	;# 
   111  000A                     PCLATH          equ	10	;# 
   112  000B                     INTCON          equ	11	;# 
   113  000C                     PIR1            equ	12	;# 
   114  000E                     TMR1            equ	14	;# 
   115  000E                     TMR1L           equ	14	;# 
   116  000F                     TMR1H           equ	15	;# 
   117  0010                     T1CON           equ	16	;# 
   118  0019                     CMCON           equ	25	;# 
   119  001E                     ADRESH          equ	30	;# 
   120  001F                     ADCON0          equ	31	;# 
   121  0081                     OPTION_REG      equ	129	;# 
   122  0085                     TRISIO          equ	133	;# 
   123  008C                     PIE1            equ	140	;# 
   124  008E                     PCON            equ	142	;# 
   125  0090                     OSCCAL          equ	144	;# 
   126  0095                     WPU             equ	149	;# 
   127  0096                     IOC             equ	150	;# 
   128  0096                     IOCB            equ	150	;# 
   129  0099                     VRCON           equ	153	;# 
   130  009A                     EEDATA          equ	154	;# 
   131  009A                     EEDAT           equ	154	;# 
   132  009B                     EEADR           equ	155	;# 
   133  009C                     EECON1          equ	156	;# 
   134  009D                     EECON2          equ	157	;# 
   135  009E                     ADRESL          equ	158	;# 
   136  009F                     ANSEL           equ	159	;# 
   137  0000                     INDF            equ	0	;# 
   138  0001                     TMR0            equ	1	;# 
   139  0002                     PCL             equ	2	;# 
   140  0003                     STATUS          equ	3	;# 
   141  0004                     FSR             equ	4	;# 
   142  0005                     GPIO            equ	5	;# 
   143  000A                     PCLATH          equ	10	;# 
   144  000B                     INTCON          equ	11	;# 
   145  000C                     PIR1            equ	12	;# 
   146  000E                     TMR1            equ	14	;# 
   147  000E                     TMR1L           equ	14	;# 
   148  000F                     TMR1H           equ	15	;# 
   149  0010                     T1CON           equ	16	;# 
   150  0019                     CMCON           equ	25	;# 
   151  001E                     ADRESH          equ	30	;# 
   152  001F                     ADCON0          equ	31	;# 
   153  0081                     OPTION_REG      equ	129	;# 
   154  0085                     TRISIO          equ	133	;# 
   155  008C                     PIE1            equ	140	;# 
   156  008E                     PCON            equ	142	;# 
   157  0090                     OSCCAL          equ	144	;# 
   158  0095                     WPU             equ	149	;# 
   159  0096                     IOC             equ	150	;# 
   160  0096                     IOCB            equ	150	;# 
   161  0099                     VRCON           equ	153	;# 
   162  009A                     EEDATA          equ	154	;# 
   163  009A                     EEDAT           equ	154	;# 
   164  009B                     EEADR           equ	155	;# 
   165  009C                     EECON1          equ	156	;# 
   166  009D                     EECON2          equ	157	;# 
   167  009E                     ADRESL          equ	158	;# 
   168  009F                     ANSEL           equ	159	;# 
   169  0000                     INDF            equ	0	;# 
   170  0001                     TMR0            equ	1	;# 
   171  0002                     PCL             equ	2	;# 
   172  0003                     STATUS          equ	3	;# 
   173  0004                     FSR             equ	4	;# 
   174  0005                     GPIO            equ	5	;# 
   175  000A                     PCLATH          equ	10	;# 
   176  000B                     INTCON          equ	11	;# 
   177  000C                     PIR1            equ	12	;# 
   178  000E                     TMR1            equ	14	;# 
   179  000E                     TMR1L           equ	14	;# 
   180  000F                     TMR1H           equ	15	;# 
   181  0010                     T1CON           equ	16	;# 
   182  0019                     CMCON           equ	25	;# 
   183  001E                     ADRESH          equ	30	;# 
   184  001F                     ADCON0          equ	31	;# 
   185  0081                     OPTION_REG      equ	129	;# 
   186  0085                     TRISIO          equ	133	;# 
   187  008C                     PIE1            equ	140	;# 
   188  008E                     PCON            equ	142	;# 
   189  0090                     OSCCAL          equ	144	;# 
   190  0095                     WPU             equ	149	;# 
   191  0096                     IOC             equ	150	;# 
   192  0096                     IOCB            equ	150	;# 
   193  0099                     VRCON           equ	153	;# 
   194  009A                     EEDATA          equ	154	;# 
   195  009A                     EEDAT           equ	154	;# 
   196  009B                     EEADR           equ	155	;# 
   197  009C                     EECON1          equ	156	;# 
   198  009D                     EECON2          equ	157	;# 
   199  009E                     ADRESL          equ	158	;# 
   200  009F                     ANSEL           equ	159	;# 
   201  0000                     INDF            equ	0	;# 
   202  0001                     TMR0            equ	1	;# 
   203  0002                     PCL             equ	2	;# 
   204  0003                     STATUS          equ	3	;# 
   205  0004                     FSR             equ	4	;# 
   206  0005                     GPIO            equ	5	;# 
   207  000A                     PCLATH          equ	10	;# 
   208  000B                     INTCON          equ	11	;# 
   209  000C                     PIR1            equ	12	;# 
   210  000E                     TMR1            equ	14	;# 
   211  000E                     TMR1L           equ	14	;# 
   212  000F                     TMR1H           equ	15	;# 
   213  0010                     T1CON           equ	16	;# 
   214  0019                     CMCON           equ	25	;# 
   215  001E                     ADRESH          equ	30	;# 
   216  001F                     ADCON0          equ	31	;# 
   217  0081                     OPTION_REG      equ	129	;# 
   218  0085                     TRISIO          equ	133	;# 
   219  008C                     PIE1            equ	140	;# 
   220  008E                     PCON            equ	142	;# 
   221  0090                     OSCCAL          equ	144	;# 
   222  0095                     WPU             equ	149	;# 
   223  0096                     IOC             equ	150	;# 
   224  0096                     IOCB            equ	150	;# 
   225  0099                     VRCON           equ	153	;# 
   226  009A                     EEDATA          equ	154	;# 
   227  009A                     EEDAT           equ	154	;# 
   228  009B                     EEADR           equ	155	;# 
   229  009C                     EECON1          equ	156	;# 
   230  009D                     EECON2          equ	157	;# 
   231  009E                     ADRESL          equ	158	;# 
   232  009F                     ANSEL           equ	159	;# 
   233  0000                     INDF            equ	0	;# 
   234  0001                     TMR0            equ	1	;# 
   235  0002                     PCL             equ	2	;# 
   236  0003                     STATUS          equ	3	;# 
   237  0004                     FSR             equ	4	;# 
   238  0005                     GPIO            equ	5	;# 
   239  000A                     PCLATH          equ	10	;# 
   240  000B                     INTCON          equ	11	;# 
   241  000C                     PIR1            equ	12	;# 
   242  000E                     TMR1            equ	14	;# 
   243  000E                     TMR1L           equ	14	;# 
   244  000F                     TMR1H           equ	15	;# 
   245  0010                     T1CON           equ	16	;# 
   246  0019                     CMCON           equ	25	;# 
   247  001E                     ADRESH          equ	30	;# 
   248  001F                     ADCON0          equ	31	;# 
   249  0081                     OPTION_REG      equ	129	;# 
   250  0085                     TRISIO          equ	133	;# 
   251  008C                     PIE1            equ	140	;# 
   252  008E                     PCON            equ	142	;# 
   253  0090                     OSCCAL          equ	144	;# 
   254  0095                     WPU             equ	149	;# 
   255  0096                     IOC             equ	150	;# 
   256  0096                     IOCB            equ	150	;# 
   257  0099                     VRCON           equ	153	;# 
   258  009A                     EEDATA          equ	154	;# 
   259  009A                     EEDAT           equ	154	;# 
   260  009B                     EEADR           equ	155	;# 
   261  009C                     EECON1          equ	156	;# 
   262  009D                     EECON2          equ	157	;# 
   263  009E                     ADRESL          equ	158	;# 
   264  009F                     ANSEL           equ	159	;# 
   265  0000                     INDF            equ	0	;# 
   266  0001                     TMR0            equ	1	;# 
   267  0002                     PCL             equ	2	;# 
   268  0003                     STATUS          equ	3	;# 
   269  0004                     FSR             equ	4	;# 
   270  0005                     GPIO            equ	5	;# 
   271  000A                     PCLATH          equ	10	;# 
   272  000B                     INTCON          equ	11	;# 
   273  000C                     PIR1            equ	12	;# 
   274  000E                     TMR1            equ	14	;# 
   275  000E                     TMR1L           equ	14	;# 
   276  000F                     TMR1H           equ	15	;# 
   277  0010                     T1CON           equ	16	;# 
   278  0019                     CMCON           equ	25	;# 
   279  001E                     ADRESH          equ	30	;# 
   280  001F                     ADCON0          equ	31	;# 
   281  0081                     OPTION_REG      equ	129	;# 
   282  0085                     TRISIO          equ	133	;# 
   283  008C                     PIE1            equ	140	;# 
   284  008E                     PCON            equ	142	;# 
   285  0090                     OSCCAL          equ	144	;# 
   286  0095                     WPU             equ	149	;# 
   287  0096                     IOC             equ	150	;# 
   288  0096                     IOCB            equ	150	;# 
   289  0099                     VRCON           equ	153	;# 
   290  009A                     EEDATA          equ	154	;# 
   291  009A                     EEDAT           equ	154	;# 
   292  009B                     EEADR           equ	155	;# 
   293  009C                     EECON1          equ	156	;# 
   294  009D                     EECON2          equ	157	;# 
   295  009E                     ADRESL          equ	158	;# 
   296  009F                     ANSEL           equ	159	;# 
   297                           
   298                           	psect	strings
   299  0000'                    __pstrings:
   300  0000'                    stringtab:
   301  0000'                    __stringtab:
   302  0000'                    stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305  0000'                    stringdir:
   306  0000' 3000'              	movlw	high stringdir
   307  0001' 008A               	movwf	10
   308  0002' 0804               	movf	4,w
   309  0003' 0A84               	incf	4,f
   310  0004' 0782               	addwf	2,f
   311  0005'                    __stringbase:
   312  0005' 3400               	retlw	0
   313  0006'                    __end_of__stringtab:
   314  0006'                    _MAX7219_No_Table:
   315  0006' 347E               	retlw	126
   316  0007' 3430               	retlw	48
   317  0008' 346D               	retlw	109
   318  0009' 3479               	retlw	121
   319  000A' 3433               	retlw	51
   320  000B' 345B               	retlw	91
   321  000C' 345F               	retlw	95
   322  000D' 3470               	retlw	112
   323  000E' 347F               	retlw	127
   324  000F' 347B               	retlw	123
   325  0010'                    __end_of_MAX7219_No_Table:
   326  000B                     _INTCONbits     set	11
   327  0005                     _GPIO           set	5
   328  001E                     _ADRESH         set	30
   329  001F                     _ADCON0         set	31
   330  0096                     _IOCB           set	150
   331  0095                     _WPU            set	149
   332  0081                     _OPTION_REG     set	129
   333  0085                     _TRISIO         set	133
   334  009E                     _ADRESL         set	158
   335  009F                     _ANSEL          set	159
   336                           
   337                           	psect	cinit
   338  0000'                    start_initialization:	
   339                           ; #config settings
   340                           
   341  0000'                    __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   345  0001' 0180'              	clrf	__pbssBANK0& (0+127)
   346  0002' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
   347  0003' 0180'              	clrf	(__pbssBANK0+2)& (0+127)
   348  0004' 0180'              	clrf	(__pbssBANK0+3)& (0+127)
   349  0005' 0180'              	clrf	(__pbssBANK0+4)& (0+127)
   350  0006'                    end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  0006'                    __end_of__initialization:
   354  0006' 0183               	clrf	3
   355  0007' 2800'              	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358  0000'                    __pbssBANK0:
   359  0000'                    _Counter:
   360  0000'                    	ds	2
   361  0002'                    _DispenserOn:
   362  0002'                    	ds	1
   363  0003'                    _DIO_State:
   364  0003'                    	ds	1
   365  0004'                    _BCD_Enabled:
   366  0004'                    	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369  0000'                    __pcstackCOMMON:
   370  0000'                    ??_MAX7219_Init:
   371  0000'                    ??_Adc_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0000'                    ??_Dio_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0000'                    ??_Gpio_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0000'                    ??_SPI_Init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0000'                    ??___lwdiv:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0000'                    ??___lwmod:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           	psect	cstackBANK0
   391  0000'                    __pcstackBANK0:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0000'                    ?_MAX7219_Init:
   395  0000'                    ?_MAX7219_ClearDisplay:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0000'                    ?_Adc_Init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0000'                    ?_Adc_StartConversion:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0000'                    ?_Dio_Pin_Read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0000'                    ?_Dio_init:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0000'                    ?_Gpio_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0000'                    ?_SPI_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0000'                    ?_ISR:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0000'                    ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0000'                    ??_Dio_Pin_Read:	
   423                           ; 2 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427  0000'                    	ds	1
   428  0001'                    Dio_Pin_Read@pinNumber:
   429                           
   430                           ; 1 bytes @ 0x1
   431  0001'                    	ds	1
   432  0002'                    ??_ISR:
   433                           
   434                           ; 1 bytes @ 0x2
   435  0002'                    	ds	3
   436  0005'                    ISR@i:
   437                           
   438                           ; 2 bytes @ 0x5
   439  0005'                    	ds	2
   440  0007'                    ?_Dio_Pin_Write:
   441  0007'                    ?_Dio_Config:	
   442                           ; 1 bytes @ 0x7
   443                           
   444  0007'                    ?_Adc_ReadResult:	
   445                           ; 1 bytes @ 0x7
   446                           
   447  0007'                    ?___lwdiv:	
   448                           ; 2 bytes @ 0x7
   449                           
   450  0007'                    Dio_Pin_Write@state:	
   451                           ; 2 bytes @ 0x7
   452                           
   453  0007'                    Dio_Config@direction:	
   454                           ; 1 bytes @ 0x7
   455                           
   456  0007'                    ___lwdiv@divisor:	
   457                           ; 1 bytes @ 0x7
   458                           
   459  0007'                    ??_Adc_StartConversion:	
   460                           ; 2 bytes @ 0x7
   461                           
   462                           
   463                           ; 1 bytes @ 0x7
   464  0007'                    	ds	1
   465  0008'                    Adc_StartConversion@channel:
   466  0008'                    Dio_Config@state:	
   467                           ; 1 bytes @ 0x8
   468                           
   469  0008'                    ??_Dio_Pin_Write:	
   470                           ; 1 bytes @ 0x8
   471                           
   472                           
   473                           ; 1 bytes @ 0x8
   474  0008'                    	ds	1
   475  0009'                    Dio_Pin_Write@pinNumber:
   476  0009'                    Dio_Config@pullType:	
   477                           ; 1 bytes @ 0x9
   478                           
   479  0009'                    ___lwdiv@dividend:	
   480                           ; 1 bytes @ 0x9
   481                           
   482  0009'                    ??_Adc_ReadResult:	
   483                           ; 2 bytes @ 0x9
   484                           
   485                           
   486                           ; 1 bytes @ 0x9
   487  0009'                    	ds	1
   488  000A'                    ?_SPI_Send_16bit:
   489  000A'                    SPI_Send_16bit@data:	
   490                           ; 1 bytes @ 0xA
   491                           
   492  000A'                    ??_Dio_Config:	
   493                           ; 2 bytes @ 0xA
   494                           
   495                           
   496                           ; 1 bytes @ 0xA
   497  000A'                    	ds	1
   498  000B'                    ___lwdiv@quotient:
   499                           
   500                           ; 2 bytes @ 0xB
   501  000B'                    	ds	1
   502  000C'                    ??_SPI_Send_16bit:
   503                           
   504                           ; 1 bytes @ 0xC
   505  000C'                    	ds	1
   506  000D'                    ___lwdiv@counter:
   507                           
   508                           ; 1 bytes @ 0xD
   509  000D'                    	ds	1
   510  000E'                    ?___lwmod:
   511  000E'                    _Dio_Config$71:	
   512                           ; 2 bytes @ 0xE
   513                           
   514  000E'                    ___lwmod@divisor:	
   515                           ; 2 bytes @ 0xE
   516                           
   517                           
   518                           ; 2 bytes @ 0xE
   519  000E'                    	ds	2
   520  0010'                    ?___lmul:
   521  0010'                    Dio_Config@pinNumber:	
   522                           ; 4 bytes @ 0x10
   523                           
   524  0010'                    ___lwmod@dividend:	
   525                           ; 1 bytes @ 0x10
   526                           
   527  0010'                    ___lmul@multiplier:	
   528                           ; 2 bytes @ 0x10
   529                           
   530                           
   531                           ; 4 bytes @ 0x10
   532  0010'                    	ds	1
   533  0011'                    SPI_Send_16bit@bit:
   534                           
   535                           ; 2 bytes @ 0x11
   536  0011'                    	ds	1
   537  0012'                    ___lwmod@counter:
   538                           
   539                           ; 1 bytes @ 0x12
   540  0012'                    	ds	1
   541  0013'                    ?_MAX7219_DisplayData:
   542  0013'                    MAX7219_DisplayData@character:	
   543                           ; 1 bytes @ 0x13
   544                           
   545  0013'                    ??_MAX7219_ClearDisplay:	
   546                           ; 1 bytes @ 0x13
   547                           
   548                           
   549                           ; 1 bytes @ 0x13
   550  0013'                    	ds	1
   551  0014'                    ___lmul@multiplicand:
   552  0014'                    ??_MAX7219_DisplayData:	
   553                           ; 4 bytes @ 0x14
   554                           
   555                           
   556                           ; 1 bytes @ 0x14
   557  0014'                    	ds	1
   558  0015'                    MAX7219_ClearDisplay@i:
   559                           
   560                           ; 1 bytes @ 0x15
   561  0015'                    	ds	3
   562  0018'                    MAX7219_DisplayData@digit:
   563  0018'                    ??___lmul:	
   564                           ; 1 bytes @ 0x18
   565                           
   566                           
   567                           ; 1 bytes @ 0x18
   568  0018'                    	ds	1
   569  0019'                    ___lmul@product:
   570                           
   571                           ; 4 bytes @ 0x19
   572  0019'                    	ds	4
   573  001D'                    ??_main:
   574                           
   575                           ; 1 bytes @ 0x1D
   576  001D'                    	ds	8
   577  0025'                    _main$776:
   578                           
   579                           ; 2 bytes @ 0x25
   580  0025'                    	ds	2
   581  0027'                    main@i:
   582                           
   583                           ; 1 bytes @ 0x27
   584  0027'                    	ds	1
   585                           
   586                           	psect	maintext
   587  0000'                    __pmaintext:	
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 29 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               1   39[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2  162[None  ] int 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : B00/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0
   607 ;;      Params:         0       0
   608 ;;      Locals:         0       3
   609 ;;      Temps:          0       8
   610 ;;      Totals:         0      11
   611 ;;Total ram usage:       11 bytes
   612 ;; Hardware stack levels required when called: 5
   613 ;; This function calls:
   614 ;;		_Adc_Init
   615 ;;		_Adc_ReadResult
   616 ;;		_Adc_StartConversion
   617 ;;		_Dio_Pin_Write
   618 ;;		_Dio_init
   619 ;;		_Gpio_Init
   620 ;;		_MAX7219_ClearDisplay
   621 ;;		_MAX7219_DisplayData
   622 ;;		_MAX7219_Init
   623 ;;		_SPI_Init
   624 ;;		___lmul
   625 ;;		___lwdiv
   626 ;;		___lwmod
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632  0000'                    _main:	
   633                           ;psect for function _main
   634                           
   635  0000'                    l1229:	
   636                           ;incstack = 0
   637                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   638                           
   639                           
   640                           ;main.c: 30:         Gpio_Init();
   641  0000' 2000'              	fcall	_Gpio_Init
   642  0001'                    l1231:
   643                           
   644                           ;main.c: 31:         Dio_init();
   645  0001' 2000'              	fcall	_Dio_init
   646  0002'                    l1233:
   647                           
   648                           ;main.c: 32:         Adc_Init();
   649  0002' 2000'              	fcall	_Adc_Init
   650                           
   651                           ;main.c: 33:         SPI_Init();
   652  0003' 2000'              	fcall	_SPI_Init
   653                           
   654                           ;main.c: 34:       MAX7219_Init();
   655  0004' 2000'              	fcall	_MAX7219_Init
   656  0005'                    l1235:
   657                           
   658                           ;main.c: 35:    IOCB |= (1 << 3);
   659  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   660  0006' 1596               	bsf	22,3	;volatile
   661  0007'                    l1237:
   662                           
   663                           ;main.c: 37:     INTCONbits.GIE = 1;
   664  0007' 178B               	bsf	11,7	;volatile
   665  0008'                    l1239:
   666                           
   667                           ;main.c: 38:     INTCONbits.PEIE = 1;
   668  0008' 170B               	bsf	11,6	;volatile
   669  0009'                    l1241:
   670                           
   671                           ;main.c: 39:     INTCONbits.GPIE = 1;
   672  0009' 158B               	bsf	11,3	;volatile
   673  000A' 2909'              	goto	l1297
   674  000B'                    l1243:
   675                           
   676                           ;main.c: 58:             Adc_StartConversion(ADC_CHANNEL_AN0);
   677  000B' 3000               	movlw	0
   678  000C' 2000'              	fcall	_Adc_StartConversion
   679  000D'                    l1245:
   680                           
   681                           ;main.c: 59:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x04,0x1D); MAX7219
      +                          _DisplayData(0x03,0x15);;
   682  000D' 2000'              	fcall	_MAX7219_ClearDisplay
   683  000E'                    l1247:
   684  000E' 301D               	movlw	29
   685  000F' 1283               	bcf	3,5	;RP0=0, select bank0
   686  0010' 0093'              	movwf	MAX7219_DisplayData@character
   687  0011' 3004               	movlw	4
   688  0012' 2000'              	fcall	_MAX7219_DisplayData
   689  0013'                    l1249:
   690  0013' 3015               	movlw	21
   691  0014' 1283               	bcf	3,5	;RP0=0, select bank0
   692  0015' 0093'              	movwf	MAX7219_DisplayData@character
   693  0016' 3003               	movlw	3
   694  0017' 2000'              	fcall	_MAX7219_DisplayData
   695  0018'                    l1251:
   696                           
   697                           ;main.c: 60:             for(uint8 i=0; (i<100)&&DispenserOn;i++ )
   698  0018' 1283               	bcf	3,5	;RP0=0, select bank0
   699  0019' 01A7'              	clrf	main@i
   700  001A' 2827'              	goto	l1257
   701  001B'                    l1253:
   702                           
   703                           ;main.c: 61:                 {_delay((unsigned long)((10)*(4000000/4000.0)));}
   704  001B' 300D               	movlw	13
   705  001C' 009E'              	movwf	??_main+1
   706  001D' 30FB               	movlw	251
   707  001E' 009D'              	movwf	??_main
   708  001F'                    u1097:
   709  001F' 0B9D'              	decfsz	??_main,f
   710  0020' 281F'              	goto	u1097
   711  0021' 0B9E'              	decfsz	??_main+1,f
   712  0022' 281F'              	goto	u1097
   713  0023' 2824'              	nop2
   714  0024'                    l1255:
   715  0024' 3001               	movlw	1
   716  0025' 1283               	bcf	3,5	;RP0=0, select bank0
   717  0026' 07A7'              	addwf	main@i,f
   718  0027'                    l1257:
   719  0027' 3064               	movlw	100
   720  0028' 0227'              	subwf	main@i,w
   721  0029' 1803               	skipnc
   722  002A' 282C'              	goto	u981
   723  002B' 282D'              	goto	u980
   724  002C'                    u981:
   725  002C' 2832'              	goto	l1261
   726  002D'                    u980:
   727  002D'                    l1259:
   728  002D' 0802'              	movf	_DispenserOn,w
   729  002E' 1D03               	btfss	3,2
   730  002F' 2831'              	goto	u991
   731  0030' 2832'              	goto	u990
   732  0031'                    u991:
   733  0031' 281B'              	goto	l1253
   734  0032'                    u990:
   735  0032'                    l1261:
   736                           
   737                           ;main.c: 62:             MAX7219_ClearDisplay();
   738  0032' 2000'              	fcall	_MAX7219_ClearDisplay
   739  0033'                    l1263:
   740                           
   741                           ;main.c: 63:             Dio_Pin_Write (4,1);
   742  0033' 1283               	bcf	3,5	;RP0=0, select bank0
   743  0034' 0187'              	clrf	Dio_Pin_Write@state
   744  0035' 0A87'              	incf	Dio_Pin_Write@state,f
   745  0036' 3004               	movlw	4
   746  0037' 2000'              	fcall	_Dio_Pin_Write
   747  0038'                    l1265:
   748                           
   749                           ;main.c: 64:             Counter = 1 + ((uint32)89*Adc_ReadResult()/1024);
   750  0038' 2000'              	fcall	_Adc_ReadResult
   751  0039' 1283               	bcf	3,5	;RP0=0, select bank0
   752  003A' 0807'              	movf	?_Adc_ReadResult,w
   753  003B' 009D'              	movwf	??_main
   754  003C' 0808'              	movf	?_Adc_ReadResult+1,w
   755  003D' 009E'              	movwf	??_main+1
   756  003E' 019F'              	clrf	??_main+2
   757  003F' 01A0'              	clrf	??_main+3
   758  0040' 0820'              	movf	??_main+3,w
   759  0041' 0093'              	movwf	___lmul@multiplier+3
   760  0042' 081F'              	movf	??_main+2,w
   761  0043' 0092'              	movwf	___lmul@multiplier+2
   762  0044' 081E'              	movf	??_main+1,w
   763  0045' 0091'              	movwf	___lmul@multiplier+1
   764  0046' 081D'              	movf	??_main,w
   765  0047' 0090'              	movwf	___lmul@multiplier
   766  0048' 3000               	movlw	0
   767  0049' 0097'              	movwf	___lmul@multiplicand+3
   768  004A' 3000               	movlw	0
   769  004B' 0096'              	movwf	___lmul@multiplicand+2
   770  004C' 3000               	movlw	0
   771  004D' 0095'              	movwf	___lmul@multiplicand+1
   772  004E' 3059               	movlw	89
   773  004F' 0094'              	movwf	___lmul@multiplicand
   774  0050' 2000'              	fcall	___lmul
   775  0051' 1283               	bcf	3,5	;RP0=0, select bank0
   776  0052' 0810'              	movf	?___lmul,w
   777  0053' 00A1'              	movwf	??_main+4
   778  0054' 0811'              	movf	?___lmul+1,w
   779  0055' 00A2'              	movwf	??_main+5
   780  0056' 0812'              	movf	?___lmul+2,w
   781  0057' 00A3'              	movwf	??_main+6
   782  0058' 0813'              	movf	?___lmul+3,w
   783  0059' 00A4'              	movwf	??_main+7
   784  005A' 300A               	movlw	10
   785  005B'                    u1005:
   786  005B' 1003               	clrc
   787  005C' 0CA4'              	rrf	??_main+7,f
   788  005D' 0CA3'              	rrf	??_main+6,f
   789  005E' 0CA2'              	rrf	??_main+5,f
   790  005F' 0CA1'              	rrf	??_main+4,f
   791  0060'                    u1000:
   792  0060' 3EFF               	addlw	-1
   793  0061' 1D03               	skipz
   794  0062' 285B'              	goto	u1005
   795  0063' 0821'              	movf	??_main+4,w
   796  0064' 3E01               	addlw	1
   797  0065' 0080'              	movwf	_Counter
   798  0066' 0822'              	movf	??_main+5,w
   799  0067' 1803               	skipnc
   800  0068' 3E01               	addlw	1
   801  0069' 3E00               	addlw	0
   802  006A' 0081'              	movwf	_Counter+1
   803                           
   804                           ;main.c: 65:             for(;(Counter>0)&&DispenserOn;Counter--){
   805  006B' 28E9'              	goto	l1281
   806  006C'                    l1267:
   807                           
   808                           ;main.c: 66:                 _delay((unsigned long)((800)*(4000000/4000.0)));
   809  006C' 3005               	movlw	5
   810  006D' 009F'              	movwf	??_main+2
   811  006E' 300F               	movlw	15
   812  006F' 009E'              	movwf	??_main+1
   813  0070' 30F1               	movlw	241
   814  0071' 009D'              	movwf	??_main
   815  0072'                    u1107:
   816  0072' 0B9D'              	decfsz	??_main,f
   817  0073' 2872'              	goto	u1107
   818  0074' 0B9E'              	decfsz	??_main+1,f
   819  0075' 2872'              	goto	u1107
   820  0076' 0B9F'              	decfsz	??_main+2,f
   821  0077' 2872'              	goto	u1107
   822  0078'                    l1269:
   823                           
   824                           ;main.c: 67:                 MAX7219_DisplayData(0x04, MAX7219_No_Table[Counter/600]);
   825  0078' 3058               	movlw	88
   826  0079' 1283               	bcf	3,5	;RP0=0, select bank0
   827  007A' 0087'              	movwf	___lwdiv@divisor
   828  007B' 3002               	movlw	2
   829  007C' 0088'              	movwf	___lwdiv@divisor+1
   830  007D' 0801'              	movf	_Counter+1,w
   831  007E' 008A'              	movwf	___lwdiv@dividend+1
   832  007F' 0800'              	movf	_Counter,w
   833  0080' 0089'              	movwf	___lwdiv@dividend
   834  0081' 2000'              	fcall	___lwdiv
   835  0082' 1283               	bcf	3,5	;RP0=0, select bank0
   836  0083' 0807'              	movf	?___lwdiv,w
   837  0084' 3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   838  0085' 0084               	movwf	4
   839  0086' 2000'              	fcall	stringdir
   840  0087' 0093'              	movwf	MAX7219_DisplayData@character
   841  0088' 3004               	movlw	4
   842  0089' 2000'              	fcall	_MAX7219_DisplayData
   843  008A'                    l1271:
   844                           
   845                           ;main.c: 68:                 MAX7219_DisplayData(0x03, MAX7219_No_Table[(Counter/60)%10]
      +                          );
   846  008A' 300A               	movlw	10
   847  008B' 1283               	bcf	3,5	;RP0=0, select bank0
   848  008C' 008E'              	movwf	___lwmod@divisor
   849  008D' 3000               	movlw	0
   850  008E' 008F'              	movwf	___lwmod@divisor+1
   851  008F' 303C               	movlw	60
   852  0090' 0087'              	movwf	___lwdiv@divisor
   853  0091' 3000               	movlw	0
   854  0092' 0088'              	movwf	___lwdiv@divisor+1
   855  0093' 0801'              	movf	_Counter+1,w
   856  0094' 008A'              	movwf	___lwdiv@dividend+1
   857  0095' 0800'              	movf	_Counter,w
   858  0096' 0089'              	movwf	___lwdiv@dividend
   859  0097' 2000'              	fcall	___lwdiv
   860  0098' 1283               	bcf	3,5	;RP0=0, select bank0
   861  0099' 0808'              	movf	?___lwdiv+1,w
   862  009A' 0091'              	movwf	___lwmod@dividend+1
   863  009B' 0807'              	movf	?___lwdiv,w
   864  009C' 0090'              	movwf	___lwmod@dividend
   865  009D' 2000'              	fcall	___lwmod
   866  009E' 1283               	bcf	3,5	;RP0=0, select bank0
   867  009F' 080E'              	movf	?___lwmod,w
   868  00A0' 3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   869  00A1' 0084               	movwf	4
   870  00A2' 2000'              	fcall	stringdir
   871  00A3' 0093'              	movwf	MAX7219_DisplayData@character
   872  00A4' 3003               	movlw	3
   873  00A5' 2000'              	fcall	_MAX7219_DisplayData
   874  00A6'                    l1273:
   875                           
   876                           ;main.c: 69:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[(Counter%60)/10]
      +                          );
   877  00A6' 300A               	movlw	10
   878  00A7' 1283               	bcf	3,5	;RP0=0, select bank0
   879  00A8' 0087'              	movwf	___lwdiv@divisor
   880  00A9' 3000               	movlw	0
   881  00AA' 0088'              	movwf	___lwdiv@divisor+1
   882  00AB' 0801'              	movf	_Counter+1,w
   883  00AC' 0091'              	movwf	___lwmod@dividend+1
   884  00AD' 0800'              	movf	_Counter,w
   885  00AE' 0090'              	movwf	___lwmod@dividend
   886  00AF' 303C               	movlw	60
   887  00B0' 008E'              	movwf	___lwmod@divisor
   888  00B1' 3000               	movlw	0
   889  00B2' 008F'              	movwf	___lwmod@divisor+1
   890  00B3' 2000'              	fcall	___lwmod
   891  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
   892  00B5' 080F'              	movf	?___lwmod+1,w
   893  00B6' 008A'              	movwf	___lwdiv@dividend+1
   894  00B7' 080E'              	movf	?___lwmod,w
   895  00B8' 0089'              	movwf	___lwdiv@dividend
   896  00B9' 2000'              	fcall	___lwdiv
   897  00BA' 1283               	bcf	3,5	;RP0=0, select bank0
   898  00BB' 0807'              	movf	?___lwdiv,w
   899  00BC' 3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   900  00BD' 0084               	movwf	4
   901  00BE' 2000'              	fcall	stringdir
   902  00BF' 0093'              	movwf	MAX7219_DisplayData@character
   903  00C0' 3002               	movlw	2
   904  00C1' 2000'              	fcall	_MAX7219_DisplayData
   905  00C2'                    l1275:
   906                           
   907                           ;main.c: 70:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   908  00C2' 1283               	bcf	3,5	;RP0=0, select bank0
   909  00C3' 0801'              	movf	_Counter+1,w
   910  00C4' 0091'              	movwf	___lwmod@dividend+1
   911  00C5' 0800'              	movf	_Counter,w
   912  00C6' 0090'              	movwf	___lwmod@dividend
   913  00C7' 303C               	movlw	60
   914  00C8' 008E'              	movwf	___lwmod@divisor
   915  00C9' 3000               	movlw	0
   916  00CA' 008F'              	movwf	___lwmod@divisor+1
   917  00CB' 2000'              	fcall	___lwmod
   918  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
   919  00CD' 080F'              	movf	?___lwmod+1,w
   920  00CE' 00A6'              	movwf	_main$776+1
   921  00CF' 080E'              	movf	?___lwmod,w
   922  00D0' 00A5'              	movwf	_main$776
   923  00D1'                    l1277:
   924                           
   925                           ;main.c: 70:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   926  00D1' 300A               	movlw	10
   927  00D2' 008E'              	movwf	___lwmod@divisor
   928  00D3' 3000               	movlw	0
   929  00D4' 008F'              	movwf	___lwmod@divisor+1
   930  00D5' 0826'              	movf	_main$776+1,w
   931  00D6' 0091'              	movwf	___lwmod@dividend+1
   932  00D7' 0825'              	movf	_main$776,w
   933  00D8' 0090'              	movwf	___lwmod@dividend
   934  00D9' 2000'              	fcall	___lwmod
   935  00DA' 1283               	bcf	3,5	;RP0=0, select bank0
   936  00DB' 080E'              	movf	?___lwmod,w
   937  00DC' 3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   938  00DD' 0084               	movwf	4
   939  00DE' 2000'              	fcall	stringdir
   940  00DF' 0093'              	movwf	MAX7219_DisplayData@character
   941  00E0' 3001               	movlw	1
   942  00E1' 2000'              	fcall	_MAX7219_DisplayData
   943  00E2'                    l1279:
   944                           
   945                           ;main.c: 71:             }
   946  00E2' 3001               	movlw	1
   947  00E3' 1283               	bcf	3,5	;RP0=0, select bank0
   948  00E4' 0280'              	subwf	_Counter,f
   949  00E5' 3000               	movlw	0
   950  00E6' 1C03               	skipc
   951  00E7' 0381'              	decf	_Counter+1,f
   952  00E8' 0281'              	subwf	_Counter+1,f
   953  00E9'                    l1281:
   954  00E9' 0800'              	movf	_Counter,w
   955  00EA' 0401'              	iorwf	_Counter+1,w
   956  00EB' 1903               	btfsc	3,2
   957  00EC' 28EE'              	goto	u1011
   958  00ED' 28EF'              	goto	u1010
   959  00EE'                    u1011:
   960  00EE' 28F4'              	goto	l1285
   961  00EF'                    u1010:
   962  00EF'                    l1283:
   963  00EF' 0802'              	movf	_DispenserOn,w
   964  00F0' 1D03               	btfss	3,2
   965  00F1' 28F3'              	goto	u1021
   966  00F2' 28F4'              	goto	u1020
   967  00F3'                    u1021:
   968  00F3' 286C'              	goto	l1267
   969  00F4'                    u1020:
   970  00F4'                    l1285:
   971                           
   972                           ;main.c: 72:             Dio_Pin_Write (4, 0);
   973  00F4' 0187'              	clrf	Dio_Pin_Write@state
   974  00F5' 3004               	movlw	4
   975  00F6' 2000'              	fcall	_Dio_Pin_Write
   976  00F7'                    l1287:
   977                           
   978                           ;main.c: 73:             DispenserOn=0;
   979  00F7' 1283               	bcf	3,5	;RP0=0, select bank0
   980  00F8' 0182'              	clrf	_DispenserOn
   981  00F9'                    l1289:
   982                           
   983                           ;main.c: 74:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x05,0x1D); MAX7219
      +                          _DisplayData(0x04,0x47); MAX7219_DisplayData(0x03,0x47);;
   984  00F9' 2000'              	fcall	_MAX7219_ClearDisplay
   985  00FA'                    l1291:
   986  00FA' 301D               	movlw	29
   987  00FB' 1283               	bcf	3,5	;RP0=0, select bank0
   988  00FC' 0093'              	movwf	MAX7219_DisplayData@character
   989  00FD' 3005               	movlw	5
   990  00FE' 2000'              	fcall	_MAX7219_DisplayData
   991  00FF'                    l1293:
   992  00FF' 3047               	movlw	71
   993  0100' 1283               	bcf	3,5	;RP0=0, select bank0
   994  0101' 0093'              	movwf	MAX7219_DisplayData@character
   995  0102' 3004               	movlw	4
   996  0103' 2000'              	fcall	_MAX7219_DisplayData
   997  0104'                    l1295:
   998  0104' 3047               	movlw	71
   999  0105' 1283               	bcf	3,5	;RP0=0, select bank0
  1000  0106' 0093'              	movwf	MAX7219_DisplayData@character
  1001  0107' 3003               	movlw	3
  1002  0108' 2000'              	fcall	_MAX7219_DisplayData
  1003  0109'                    l1297:
  1004                           
  1005                           ;main.c: 57:         while(DispenserOn){
  1006  0109' 1283               	bcf	3,5	;RP0=0, select bank0
  1007  010A' 0802'              	movf	_DispenserOn,w
  1008  010B' 1D03               	btfss	3,2
  1009  010C' 290E'              	goto	u1031
  1010  010D' 290F'              	goto	u1030
  1011  010E'                    u1031:
  1012  010E' 280B'              	goto	l1243
  1013  010F'                    u1030:
  1014  010F' 2909'              	goto	l1297
  1015  0110' 2800'              	ljmp	start
  1016  0111'                    __end_of_main:
  1017                           
  1018                           	psect	text1
  1019  0000'                    __ptext1:	
  1020 ;; *************** function ___lwmod *****************
  1021 ;; Defined at:
  1022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  divisor         2   14[BANK0 ] unsigned int 
  1025 ;;  dividend        2   16[BANK0 ] unsigned int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  counter         1   18[BANK0 ] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2   14[BANK0 ] unsigned int 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0
  1037 ;;      Params:         0       4
  1038 ;;      Locals:         0       1
  1039 ;;      Temps:          0       0
  1040 ;;      Totals:         0       5
  1041 ;;Total ram usage:        5 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 2
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051  0000'                    ___lwmod:	
  1052                           ;psect for function ___lwmod
  1053                           
  1054  0000'                    l1205:	
  1055                           ;incstack = 0
  1056                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1057                           
  1058  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1059  0001' 080E'              	movf	___lwmod@divisor,w
  1060  0002' 040F'              	iorwf	___lwmod@divisor+1,w
  1061  0003' 1903               	btfsc	3,2
  1062  0004' 2806'              	goto	u901
  1063  0005' 2807'              	goto	u900
  1064  0006'                    u901:
  1065  0006' 2834'              	goto	l1223
  1066  0007'                    u900:
  1067  0007'                    l1207:
  1068  0007' 3001               	movlw	1
  1069  0008' 0092'              	movwf	___lwmod@counter
  1070  0009' 2813'              	goto	l1213
  1071  000A'                    l1209:
  1072  000A' 3001               	movlw	1
  1073  000B'                    u915:
  1074  000B' 1003               	clrc
  1075  000C' 0D8E'              	rlf	___lwmod@divisor,f
  1076  000D' 0D8F'              	rlf	___lwmod@divisor+1,f
  1077  000E' 3EFF               	addlw	-1
  1078  000F' 1D03               	skipz
  1079  0010' 280B'              	goto	u915
  1080  0011'                    l1211:
  1081  0011' 3001               	movlw	1
  1082  0012' 0792'              	addwf	___lwmod@counter,f
  1083  0013'                    l1213:
  1084  0013' 1F8F'              	btfss	___lwmod@divisor+1,7
  1085  0014' 2816'              	goto	u921
  1086  0015' 2817'              	goto	u920
  1087  0016'                    u921:
  1088  0016' 280A'              	goto	l1209
  1089  0017'                    u920:
  1090  0017'                    l1215:
  1091  0017' 080F'              	movf	___lwmod@divisor+1,w
  1092  0018' 0211'              	subwf	___lwmod@dividend+1,w
  1093  0019' 1D03               	skipz
  1094  001A' 281D'              	goto	u935
  1095  001B' 080E'              	movf	___lwmod@divisor,w
  1096  001C' 0210'              	subwf	___lwmod@dividend,w
  1097  001D'                    u935:
  1098  001D' 1C03               	skipc
  1099  001E' 2820'              	goto	u931
  1100  001F' 2821'              	goto	u930
  1101  0020'                    u931:
  1102  0020' 2827'              	goto	l1219
  1103  0021'                    u930:
  1104  0021'                    l1217:
  1105  0021' 080E'              	movf	___lwmod@divisor,w
  1106  0022' 0290'              	subwf	___lwmod@dividend,f
  1107  0023' 080F'              	movf	___lwmod@divisor+1,w
  1108  0024' 1C03               	skipc
  1109  0025' 0391'              	decf	___lwmod@dividend+1,f
  1110  0026' 0291'              	subwf	___lwmod@dividend+1,f
  1111  0027'                    l1219:
  1112  0027' 3001               	movlw	1
  1113  0028'                    u945:
  1114  0028' 1003               	clrc
  1115  0029' 0C8F'              	rrf	___lwmod@divisor+1,f
  1116  002A' 0C8E'              	rrf	___lwmod@divisor,f
  1117  002B' 3EFF               	addlw	-1
  1118  002C' 1D03               	skipz
  1119  002D' 2828'              	goto	u945
  1120  002E'                    l1221:
  1121  002E' 3001               	movlw	1
  1122  002F' 0292'              	subwf	___lwmod@counter,f
  1123  0030' 1D03               	btfss	3,2
  1124  0031' 2833'              	goto	u951
  1125  0032' 2834'              	goto	u950
  1126  0033'                    u951:
  1127  0033' 2817'              	goto	l1215
  1128  0034'                    u950:
  1129  0034'                    l1223:
  1130  0034' 0811'              	movf	___lwmod@dividend+1,w
  1131  0035' 008F'              	movwf	?___lwmod+1
  1132  0036' 0810'              	movf	___lwmod@dividend,w
  1133  0037' 008E'              	movwf	?___lwmod
  1134  0038'                    l565:
  1135  0038' 0008               	return
  1136  0039'                    __end_of___lwmod:
  1137                           
  1138                           	psect	text2
  1139  0000'                    __ptext2:	
  1140 ;; *************** function ___lwdiv *****************
  1141 ;; Defined at:
  1142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  divisor         2    7[BANK0 ] unsigned int 
  1145 ;;  dividend        2    9[BANK0 ] unsigned int 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  quotient        2   11[BANK0 ] unsigned int 
  1148 ;;  counter         1   13[BANK0 ] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2    7[BANK0 ] unsigned int 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0
  1158 ;;      Params:         0       4
  1159 ;;      Locals:         0       3
  1160 ;;      Temps:          0       0
  1161 ;;      Totals:         0       7
  1162 ;;Total ram usage:        7 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 2
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172  0000'                    ___lwdiv:	
  1173                           ;psect for function ___lwdiv
  1174                           
  1175  0000'                    l1179:	
  1176                           ;incstack = 0
  1177                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1178                           
  1179  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1180  0001' 018B'              	clrf	___lwdiv@quotient
  1181  0002' 018C'              	clrf	___lwdiv@quotient+1
  1182  0003'                    l1181:
  1183  0003' 0807'              	movf	___lwdiv@divisor,w
  1184  0004' 0408'              	iorwf	___lwdiv@divisor+1,w
  1185  0005' 1903               	btfsc	3,2
  1186  0006' 2808'              	goto	u831
  1187  0007' 2809'              	goto	u830
  1188  0008'                    u831:
  1189  0008' 283E'              	goto	l1201
  1190  0009'                    u830:
  1191  0009'                    l1183:
  1192  0009' 3001               	movlw	1
  1193  000A' 008D'              	movwf	___lwdiv@counter
  1194  000B' 2815'              	goto	l1189
  1195  000C'                    l1185:
  1196  000C' 3001               	movlw	1
  1197  000D'                    u845:
  1198  000D' 1003               	clrc
  1199  000E' 0D87'              	rlf	___lwdiv@divisor,f
  1200  000F' 0D88'              	rlf	___lwdiv@divisor+1,f
  1201  0010' 3EFF               	addlw	-1
  1202  0011' 1D03               	skipz
  1203  0012' 280D'              	goto	u845
  1204  0013'                    l1187:
  1205  0013' 3001               	movlw	1
  1206  0014' 078D'              	addwf	___lwdiv@counter,f
  1207  0015'                    l1189:
  1208  0015' 1F88'              	btfss	___lwdiv@divisor+1,7
  1209  0016' 2818'              	goto	u851
  1210  0017' 2819'              	goto	u850
  1211  0018'                    u851:
  1212  0018' 280C'              	goto	l1185
  1213  0019'                    u850:
  1214  0019'                    l1191:
  1215  0019' 3001               	movlw	1
  1216  001A'                    u865:
  1217  001A' 1003               	clrc
  1218  001B' 0D8B'              	rlf	___lwdiv@quotient,f
  1219  001C' 0D8C'              	rlf	___lwdiv@quotient+1,f
  1220  001D' 3EFF               	addlw	-1
  1221  001E' 1D03               	skipz
  1222  001F' 281A'              	goto	u865
  1223  0020' 0808'              	movf	___lwdiv@divisor+1,w
  1224  0021' 020A'              	subwf	___lwdiv@dividend+1,w
  1225  0022' 1D03               	skipz
  1226  0023' 2826'              	goto	u875
  1227  0024' 0807'              	movf	___lwdiv@divisor,w
  1228  0025' 0209'              	subwf	___lwdiv@dividend,w
  1229  0026'                    u875:
  1230  0026' 1C03               	skipc
  1231  0027' 2829'              	goto	u871
  1232  0028' 282A'              	goto	u870
  1233  0029'                    u871:
  1234  0029' 2831'              	goto	l1197
  1235  002A'                    u870:
  1236  002A'                    l1193:
  1237  002A' 0807'              	movf	___lwdiv@divisor,w
  1238  002B' 0289'              	subwf	___lwdiv@dividend,f
  1239  002C' 0808'              	movf	___lwdiv@divisor+1,w
  1240  002D' 1C03               	skipc
  1241  002E' 038A'              	decf	___lwdiv@dividend+1,f
  1242  002F' 028A'              	subwf	___lwdiv@dividend+1,f
  1243  0030'                    l1195:
  1244  0030' 140B'              	bsf	___lwdiv@quotient,0
  1245  0031'                    l1197:
  1246  0031' 3001               	movlw	1
  1247  0032'                    u885:
  1248  0032' 1003               	clrc
  1249  0033' 0C88'              	rrf	___lwdiv@divisor+1,f
  1250  0034' 0C87'              	rrf	___lwdiv@divisor,f
  1251  0035' 3EFF               	addlw	-1
  1252  0036' 1D03               	skipz
  1253  0037' 2832'              	goto	u885
  1254  0038'                    l1199:
  1255  0038' 3001               	movlw	1
  1256  0039' 028D'              	subwf	___lwdiv@counter,f
  1257  003A' 1D03               	btfss	3,2
  1258  003B' 283D'              	goto	u891
  1259  003C' 283E'              	goto	u890
  1260  003D'                    u891:
  1261  003D' 2819'              	goto	l1191
  1262  003E'                    u890:
  1263  003E'                    l1201:
  1264  003E' 080C'              	movf	___lwdiv@quotient+1,w
  1265  003F' 0088'              	movwf	?___lwdiv+1
  1266  0040' 080B'              	movf	___lwdiv@quotient,w
  1267  0041' 0087'              	movwf	?___lwdiv
  1268  0042'                    l555:
  1269  0042' 0008               	return
  1270  0043'                    __end_of___lwdiv:
  1271                           
  1272                           	psect	text3
  1273  0000'                    __ptext3:	
  1274 ;; *************** function ___lmul *****************
  1275 ;; Defined at:
  1276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  multiplier      4   16[BANK0 ] unsigned long 
  1279 ;;  multiplicand    4   20[BANK0 ] unsigned long 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  product         4   25[BANK0 ] unsigned long 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  4   16[BANK0 ] unsigned long 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0
  1291 ;;      Params:         0       8
  1292 ;;      Locals:         0       4
  1293 ;;      Temps:          0       1
  1294 ;;      Totals:         0      13
  1295 ;;Total ram usage:       13 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 2
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305  0000'                    ___lmul:	
  1306                           ;psect for function ___lmul
  1307                           
  1308  0000'                    l1165:	
  1309                           ;incstack = 0
  1310                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1311                           
  1312  0000' 3000               	movlw	0
  1313  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1314  0002' 009C'              	movwf	___lmul@product+3
  1315  0003' 3000               	movlw	0
  1316  0004' 009B'              	movwf	___lmul@product+2
  1317  0005' 3000               	movlw	0
  1318  0006' 009A'              	movwf	___lmul@product+1
  1319  0007' 3000               	movlw	0
  1320  0008' 0099'              	movwf	___lmul@product
  1321  0009'                    l1167:
  1322  0009' 1C10'              	btfss	___lmul@multiplier,0
  1323  000A' 280C'              	goto	u781
  1324  000B' 280D'              	goto	u780
  1325  000C'                    u781:
  1326  000C' 2824'              	goto	l1171
  1327  000D'                    u780:
  1328  000D'                    l1169:
  1329  000D' 0814'              	movf	___lmul@multiplicand,w
  1330  000E' 0799'              	addwf	___lmul@product,f
  1331  000F' 0815'              	movf	___lmul@multiplicand+1,w
  1332  0010' 1103               	clrz
  1333  0011' 1803               	skipnc
  1334  0012' 3E01               	addlw	1
  1335  0013' 1903               	skipnz
  1336  0014' 2816'              	goto	u791
  1337  0015' 079A'              	addwf	___lmul@product+1,f
  1338  0016'                    u791:
  1339  0016' 0816'              	movf	___lmul@multiplicand+2,w
  1340  0017' 1103               	clrz
  1341  0018' 1803               	skipnc
  1342  0019' 3E01               	addlw	1
  1343  001A' 1903               	skipnz
  1344  001B' 281D'              	goto	u792
  1345  001C' 079B'              	addwf	___lmul@product+2,f
  1346  001D'                    u792:
  1347  001D' 0817'              	movf	___lmul@multiplicand+3,w
  1348  001E' 1103               	clrz
  1349  001F' 1803               	skipnc
  1350  0020' 3E01               	addlw	1
  1351  0021' 1903               	skipnz
  1352  0022' 2824'              	goto	u793
  1353  0023' 079C'              	addwf	___lmul@product+3,f
  1354  0024'                    u793:
  1355  0024'                    l1171:
  1356  0024' 3001               	movlw	1
  1357  0025' 0098'              	movwf	??___lmul
  1358  0026'                    u805:
  1359  0026' 1003               	clrc
  1360  0027' 0D94'              	rlf	___lmul@multiplicand,f
  1361  0028' 0D95'              	rlf	___lmul@multiplicand+1,f
  1362  0029' 0D96'              	rlf	___lmul@multiplicand+2,f
  1363  002A' 0D97'              	rlf	___lmul@multiplicand+3,f
  1364  002B' 0B98'              	decfsz	??___lmul,f
  1365  002C' 2826'              	goto	u805
  1366  002D'                    l1173:
  1367  002D' 3001               	movlw	1
  1368  002E'                    u815:
  1369  002E' 1003               	clrc
  1370  002F' 0C93'              	rrf	___lmul@multiplier+3,f
  1371  0030' 0C92'              	rrf	___lmul@multiplier+2,f
  1372  0031' 0C91'              	rrf	___lmul@multiplier+1,f
  1373  0032' 0C90'              	rrf	___lmul@multiplier,f
  1374  0033' 3EFF               	addlw	-1
  1375  0034' 1D03               	skipz
  1376  0035' 282E'              	goto	u815
  1377  0036' 0813'              	movf	___lmul@multiplier+3,w
  1378  0037' 0412'              	iorwf	___lmul@multiplier+2,w
  1379  0038' 0411'              	iorwf	___lmul@multiplier+1,w
  1380  0039' 0410'              	iorwf	___lmul@multiplier,w
  1381  003A' 1D03               	skipz
  1382  003B' 283D'              	goto	u821
  1383  003C' 283E'              	goto	u820
  1384  003D'                    u821:
  1385  003D' 2809'              	goto	l1167
  1386  003E'                    u820:
  1387  003E'                    l1175:
  1388  003E' 081C'              	movf	___lmul@product+3,w
  1389  003F' 0093'              	movwf	?___lmul+3
  1390  0040' 081B'              	movf	___lmul@product+2,w
  1391  0041' 0092'              	movwf	?___lmul+2
  1392  0042' 081A'              	movf	___lmul@product+1,w
  1393  0043' 0091'              	movwf	?___lmul+1
  1394  0044' 0819'              	movf	___lmul@product,w
  1395  0045' 0090'              	movwf	?___lmul
  1396  0046'                    l289:
  1397  0046' 0008               	return
  1398  0047'                    __end_of___lmul:
  1399                           
  1400                           	psect	text4
  1401  0000'                    __ptext4:	
  1402 ;; *************** function _SPI_Init *****************
  1403 ;; Defined at:
  1404 ;;		line 12 in file "SERVICE/scr/Spi.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0
  1418 ;;      Params:         0       0
  1419 ;;      Locals:         0       0
  1420 ;;      Temps:          0       0
  1421 ;;      Totals:         0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 3
  1425 ;; This function calls:
  1426 ;;		_Dio_Config
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432  0000'                    _SPI_Init:	
  1433                           ;psect for function _SPI_Init
  1434                           
  1435  0000'                    l1163:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1438                           
  1439                           
  1440                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
  1441  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1442  0001' 0187'              	clrf	Dio_Config@direction
  1443  0002' 0A87'              	incf	Dio_Config@direction,f
  1444  0003' 0188'              	clrf	Dio_Config@state
  1445  0004' 0A88'              	incf	Dio_Config@state,f
  1446  0005' 0189'              	clrf	Dio_Config@pullType
  1447  0006' 3001               	movlw	1
  1448  0007' 2000'              	fcall	_Dio_Config
  1449                           
  1450                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
  1451  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  1452  0009' 0187'              	clrf	Dio_Config@direction
  1453  000A' 0A87'              	incf	Dio_Config@direction,f
  1454  000B' 0188'              	clrf	Dio_Config@state
  1455  000C' 0189'              	clrf	Dio_Config@pullType
  1456  000D' 3002               	movlw	2
  1457  000E' 2000'              	fcall	_Dio_Config
  1458                           
  1459                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
  1460  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  1461  0010' 0187'              	clrf	Dio_Config@direction
  1462  0011' 0A87'              	incf	Dio_Config@direction,f
  1463  0012' 0188'              	clrf	Dio_Config@state
  1464  0013' 0A88'              	incf	Dio_Config@state,f
  1465  0014' 0189'              	clrf	Dio_Config@pullType
  1466  0015' 3005               	movlw	5
  1467  0016' 2000'              	fcall	_Dio_Config
  1468  0017'                    l117:
  1469  0017' 0008               	return
  1470  0018'                    __end_of_SPI_Init:
  1471                           
  1472                           	psect	text5
  1473  0000'                    __ptext5:	
  1474 ;; *************** function _MAX7219_Init *****************
  1475 ;; Defined at:
  1476 ;;		line 8 in file "HAL/scr/max7219.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0
  1490 ;;      Params:         0       0
  1491 ;;      Locals:         0       0
  1492 ;;      Temps:          0       0
  1493 ;;      Totals:         0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 4
  1497 ;; This function calls:
  1498 ;;		_SPI_Send_16bit
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504  0000'                    _MAX7219_Init:	
  1505                           ;psect for function _MAX7219_Init
  1506                           
  1507  0000'                    l1079:	
  1508                           ;incstack = 0
  1509                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1510                           
  1511                           
  1512                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
  1513  0000' 3000               	movlw	0
  1514  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1515  0002' 008A'              	movwf	SPI_Send_16bit@data
  1516  0003' 3009               	movlw	9
  1517  0004' 008B'              	movwf	SPI_Send_16bit@data+1
  1518  0005' 2000'              	fcall	_SPI_Send_16bit
  1519                           
  1520                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
  1521  0006' 300F               	movlw	15
  1522  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  1523  0008' 008A'              	movwf	SPI_Send_16bit@data
  1524  0009' 300A               	movlw	10
  1525  000A' 008B'              	movwf	SPI_Send_16bit@data+1
  1526  000B' 2000'              	fcall	_SPI_Send_16bit
  1527                           
  1528                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
  1529  000C' 30F7               	movlw	247
  1530  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  1531  000E' 008A'              	movwf	SPI_Send_16bit@data
  1532  000F' 30FB               	movlw	251
  1533  0010' 008B'              	movwf	SPI_Send_16bit@data+1
  1534  0011' 2000'              	fcall	_SPI_Send_16bit
  1535                           
  1536                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
  1537  0012' 3001               	movlw	1
  1538  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  1539  0014' 008A'              	movwf	SPI_Send_16bit@data
  1540  0015' 300C               	movlw	12
  1541  0016' 008B'              	movwf	SPI_Send_16bit@data+1
  1542  0017' 2000'              	fcall	_SPI_Send_16bit
  1543                           
  1544                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
  1545  0018' 3000               	movlw	0
  1546  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  1547  001A' 008A'              	movwf	SPI_Send_16bit@data
  1548  001B' 300F               	movlw	15
  1549  001C' 008B'              	movwf	SPI_Send_16bit@data+1
  1550  001D' 2000'              	fcall	_SPI_Send_16bit
  1551  001E'                    l9:
  1552  001E' 0008               	return
  1553  001F'                    __end_of_MAX7219_Init:
  1554                           
  1555                           	psect	text6
  1556  0000'                    __ptext6:	
  1557 ;; *************** function _MAX7219_DisplayData *****************
  1558 ;; Defined at:
  1559 ;;		line 26 in file "HAL/scr/max7219.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  digit           1    wreg     unsigned char 
  1562 ;;  character       1   19[BANK0 ] unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  digit           1   24[BANK0 ] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0
  1574 ;;      Params:         0       1
  1575 ;;      Locals:         0       1
  1576 ;;      Temps:          0       4
  1577 ;;      Totals:         0       6
  1578 ;;Total ram usage:        6 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 4
  1581 ;; This function calls:
  1582 ;;		_SPI_Send_16bit
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588  0000'                    _MAX7219_DisplayData:	
  1589                           ;psect for function _MAX7219_DisplayData
  1590                           
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1594                           ;MAX7219_DisplayData@digit stored from wreg
  1595  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1596  0001' 0098'              	movwf	MAX7219_DisplayData@digit
  1597  0002'                    l1093:
  1598                           
  1599                           ;HAL/scr/max7219.c: 27:     SPI_Send_16bit((digit) << 8 | character);
  1600  0002' 0813'              	movf	MAX7219_DisplayData@character,w
  1601  0003' 0094'              	movwf	??_MAX7219_DisplayData
  1602  0004' 0195'              	clrf	??_MAX7219_DisplayData+1
  1603  0005' 0818'              	movf	MAX7219_DisplayData@digit,w
  1604  0006' 0096'              	movwf	??_MAX7219_DisplayData+2
  1605  0007' 0197'              	clrf	??_MAX7219_DisplayData+3
  1606  0008' 0816'              	movf	??_MAX7219_DisplayData+2,w
  1607  0009' 0097'              	movwf	??_MAX7219_DisplayData+3
  1608  000A' 0196'              	clrf	??_MAX7219_DisplayData+2
  1609  000B' 0814'              	movf	??_MAX7219_DisplayData,w
  1610  000C' 0416'              	iorwf	??_MAX7219_DisplayData+2,w
  1611  000D' 008A'              	movwf	SPI_Send_16bit@data
  1612  000E' 0815'              	movf	??_MAX7219_DisplayData+1,w
  1613  000F' 0417'              	iorwf	??_MAX7219_DisplayData+3,w
  1614  0010' 008B'              	movwf	SPI_Send_16bit@data+1
  1615  0011' 2000'              	fcall	_SPI_Send_16bit
  1616  0012'                    l17:
  1617  0012' 0008               	return
  1618  0013'                    __end_of_MAX7219_DisplayData:
  1619                           
  1620                           	psect	text7
  1621  0000'                    __ptext7:	
  1622 ;; *************** function _MAX7219_ClearDisplay *****************
  1623 ;; Defined at:
  1624 ;;		line 19 in file "HAL/scr/max7219.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  i               1   21[BANK0 ] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0
  1638 ;;      Params:         0       0
  1639 ;;      Locals:         0       1
  1640 ;;      Temps:          0       2
  1641 ;;      Totals:         0       3
  1642 ;;Total ram usage:        3 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 4
  1645 ;; This function calls:
  1646 ;;		_SPI_Send_16bit
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652  0000'                    _MAX7219_ClearDisplay:	
  1653                           ;psect for function _MAX7219_ClearDisplay
  1654                           
  1655  0000'                    l1081:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _MAX7219_ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1658                           
  1659                           
  1660                           ;HAL/scr/max7219.c: 20:     for (uint8_t i = 0x01; i <= 0x08; i++) {
  1661  0000' 3001               	movlw	1
  1662  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1663  0002' 0095'              	movwf	MAX7219_ClearDisplay@i
  1664  0003'                    l1087:
  1665                           
  1666                           ;HAL/scr/max7219.c: 21:         SPI_Send_16bit((i << 8) );
  1667  0003' 0815'              	movf	MAX7219_ClearDisplay@i,w
  1668  0004' 0093'              	movwf	??_MAX7219_ClearDisplay
  1669  0005' 0194'              	clrf	??_MAX7219_ClearDisplay+1
  1670  0006' 0813'              	movf	??_MAX7219_ClearDisplay,w
  1671  0007' 0094'              	movwf	??_MAX7219_ClearDisplay+1
  1672  0008' 0193'              	clrf	??_MAX7219_ClearDisplay
  1673  0009' 0813'              	movf	??_MAX7219_ClearDisplay,w
  1674  000A' 008A'              	movwf	SPI_Send_16bit@data
  1675  000B' 0814'              	movf	??_MAX7219_ClearDisplay+1,w
  1676  000C' 008B'              	movwf	SPI_Send_16bit@data+1
  1677  000D' 2000'              	fcall	_SPI_Send_16bit
  1678  000E'                    l1089:
  1679                           
  1680                           ;HAL/scr/max7219.c: 22:     }
  1681  000E' 3001               	movlw	1
  1682  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  1683  0010' 0795'              	addwf	MAX7219_ClearDisplay@i,f
  1684  0011'                    l1091:
  1685  0011' 3009               	movlw	9
  1686  0012' 0215'              	subwf	MAX7219_ClearDisplay@i,w
  1687  0013' 1C03               	skipc
  1688  0014' 2816'              	goto	u711
  1689  0015' 2817'              	goto	u710
  1690  0016'                    u711:
  1691  0016' 2803'              	goto	l1087
  1692  0017'                    u710:
  1693  0017'                    l14:
  1694  0017' 0008               	return
  1695  0018'                    __end_of_MAX7219_ClearDisplay:
  1696                           
  1697                           	psect	text8
  1698  0000'                    __ptext8:	
  1699 ;; *************** function _SPI_Send_16bit *****************
  1700 ;; Defined at:
  1701 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  data            2   10[BANK0 ] unsigned short 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  bit             2   17[BANK0 ] int 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0
  1715 ;;      Params:         0       2
  1716 ;;      Locals:         0       2
  1717 ;;      Temps:          0       5
  1718 ;;      Totals:         0       9
  1719 ;;Total ram usage:        9 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 3
  1722 ;; This function calls:
  1723 ;;		_Dio_Pin_Write
  1724 ;; This function is called by:
  1725 ;;		_MAX7219_Init
  1726 ;;		_MAX7219_ClearDisplay
  1727 ;;		_MAX7219_DisplayData
  1728 ;;		_MAX7219_Shutdown
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732  0000'                    _SPI_Send_16bit:	
  1733                           ;psect for function _SPI_Send_16bit
  1734                           
  1735  0000'                    l1029:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1738                           
  1739                           
  1740                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
  1741  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1742  0001' 0187'              	clrf	Dio_Pin_Write@state
  1743  0002' 3005               	movlw	5
  1744  0003' 2000'              	fcall	_Dio_Pin_Write
  1745  0004'                    l1031:
  1746                           
  1747                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
  1748  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  1749  0005' 0191'              	clrf	SPI_Send_16bit@bit
  1750  0006' 0192'              	clrf	SPI_Send_16bit@bit+1
  1751  0007'                    l1037:
  1752                           
  1753                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
  1754  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  1755  0008' 0811'              	movf	SPI_Send_16bit@bit,w
  1756  0009' 3C0F               	sublw	15
  1757  000A' 008C'              	movwf	??_SPI_Send_16bit
  1758  000B' 0A8C'              	incf	??_SPI_Send_16bit,f
  1759  000C' 3001               	movlw	1
  1760  000D' 008D'              	movwf	??_SPI_Send_16bit+1
  1761  000E' 3000               	movlw	0
  1762  000F' 008E'              	movwf	??_SPI_Send_16bit+2
  1763  0010' 2814'              	goto	u584
  1764  0011'                    u585:
  1765  0011' 1003               	clrc
  1766  0012' 0D8D'              	rlf	??_SPI_Send_16bit+1,f
  1767  0013' 0D8E'              	rlf	??_SPI_Send_16bit+2,f
  1768  0014'                    u584:
  1769  0014' 0B8C'              	decfsz	??_SPI_Send_16bit,f
  1770  0015' 2811'              	goto	u585
  1771  0016' 080A'              	movf	SPI_Send_16bit@data,w
  1772  0017' 050D'              	andwf	??_SPI_Send_16bit+1,w
  1773  0018' 008F'              	movwf	??_SPI_Send_16bit+3
  1774  0019' 080B'              	movf	SPI_Send_16bit@data+1,w
  1775  001A' 050E'              	andwf	??_SPI_Send_16bit+2,w
  1776  001B' 0090'              	movwf	??_SPI_Send_16bit+4
  1777  001C' 080F'              	movf	??_SPI_Send_16bit+3,w
  1778  001D' 0410'              	iorwf	??_SPI_Send_16bit+4,w
  1779  001E' 1903               	btfsc	3,2
  1780  001F' 2821'              	goto	u591
  1781  0020' 2822'              	goto	u590
  1782  0021'                    u591:
  1783  0021' 2827'              	goto	l1041
  1784  0022'                    u590:
  1785  0022'                    l1039:
  1786                           
  1787                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
  1788  0022' 0187'              	clrf	Dio_Pin_Write@state
  1789  0023' 0A87'              	incf	Dio_Pin_Write@state,f
  1790  0024' 3001               	movlw	1
  1791  0025' 2000'              	fcall	_Dio_Pin_Write
  1792                           
  1793                           ;SERVICE/scr/Spi.c: 45:         } else {
  1794  0026' 282A'              	goto	l1043
  1795  0027'                    l1041:
  1796                           
  1797                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
  1798  0027' 0187'              	clrf	Dio_Pin_Write@state
  1799  0028' 3001               	movlw	1
  1800  0029' 2000'              	fcall	_Dio_Pin_Write
  1801  002A'                    l1043:
  1802                           
  1803                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
  1804  002A' 3010               	movlw	16
  1805  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  1806  002C' 008C'              	movwf	??_SPI_Send_16bit
  1807  002D'                    u1117:
  1808  002D' 0B8C'              	decfsz	??_SPI_Send_16bit,f
  1809  002E' 282D'              	goto	u1117
  1810  002F' 0000               	nop
  1811  0030'                    l1045:
  1812  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  1813  0031' 0187'              	clrf	Dio_Pin_Write@state
  1814  0032' 0A87'              	incf	Dio_Pin_Write@state,f
  1815  0033' 3002               	movlw	2
  1816  0034' 2000'              	fcall	_Dio_Pin_Write
  1817  0035' 3010               	movlw	16
  1818  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  1819  0037' 008C'              	movwf	??_SPI_Send_16bit
  1820  0038'                    u1127:
  1821  0038' 0B8C'              	decfsz	??_SPI_Send_16bit,f
  1822  0039' 2838'              	goto	u1127
  1823  003A' 0000               	nop
  1824  003B'                    l1047:
  1825  003B' 1283               	bcf	3,5	;RP0=0, select bank0
  1826  003C' 0187'              	clrf	Dio_Pin_Write@state
  1827  003D' 3002               	movlw	2
  1828  003E' 2000'              	fcall	_Dio_Pin_Write
  1829  003F'                    l1049:
  1830                           
  1831                           ;SERVICE/scr/Spi.c: 50:     }
  1832  003F' 3001               	movlw	1
  1833  0040' 1283               	bcf	3,5	;RP0=0, select bank0
  1834  0041' 0791'              	addwf	SPI_Send_16bit@bit,f
  1835  0042' 1803               	skipnc
  1836  0043' 0A92'              	incf	SPI_Send_16bit@bit+1,f
  1837  0044' 3000               	movlw	0
  1838  0045' 0792'              	addwf	SPI_Send_16bit@bit+1,f
  1839  0046'                    l1051:
  1840  0046' 0812'              	movf	SPI_Send_16bit@bit+1,w
  1841  0047' 3A80               	xorlw	128
  1842  0048' 00DF               	movwf	btemp+1
  1843  0049' 3080               	movlw	128
  1844  004A' 025F               	subwf	btemp+1,w
  1845  004B' 1D03               	skipz
  1846  004C' 284F'              	goto	u605
  1847  004D' 3010               	movlw	16
  1848  004E' 0211'              	subwf	SPI_Send_16bit@bit,w
  1849  004F'                    u605:
  1850  004F' 1C03               	skipc
  1851  0050' 2852'              	goto	u601
  1852  0051' 2853'              	goto	u600
  1853  0052'                    u601:
  1854  0052' 2807'              	goto	l1037
  1855  0053'                    u600:
  1856  0053'                    l1053:
  1857                           
  1858                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
  1859  0053' 1283               	bcf	3,5	;RP0=0, select bank0
  1860  0054' 0187'              	clrf	Dio_Pin_Write@state
  1861  0055' 0A87'              	incf	Dio_Pin_Write@state,f
  1862  0056' 3005               	movlw	5
  1863  0057' 2000'              	fcall	_Dio_Pin_Write
  1864  0058'                    l124:
  1865  0058' 0008               	return
  1866  0059'                    __end_of_SPI_Send_16bit:
  1867                           
  1868                           	psect	text9
  1869  0000'                    __ptext9:	
  1870 ;; *************** function _Dio_Pin_Write *****************
  1871 ;; Defined at:
  1872 ;;		line 30 in file "MCAL/scr/Dio.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  pinNumber       1    wreg     unsigned char 
  1875 ;;  state           1    7[BANK0 ] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  pinNumber       1    9[BANK0 ] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0
  1887 ;;      Params:         0       1
  1888 ;;      Locals:         0       1
  1889 ;;      Temps:          0       1
  1890 ;;      Totals:         0       3
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 2
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_SPI_Send_16bit
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902  0000'                    _Dio_Pin_Write:	
  1903                           ;psect for function _Dio_Pin_Write
  1904                           
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
  1908                           ;Dio_Pin_Write@pinNumber stored from wreg
  1909  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1910  0001' 0089'              	movwf	Dio_Pin_Write@pinNumber
  1911  0002'                    l1021:
  1912                           
  1913                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1914  0002' 0307'              	decf	Dio_Pin_Write@state,w
  1915  0003' 1D03               	btfss	3,2
  1916  0004' 2806'              	goto	u551
  1917  0005' 2807'              	goto	u550
  1918  0006'                    u551:
  1919  0006' 2813'              	goto	l1025
  1920  0007'                    u550:
  1921  0007'                    l1023:
  1922                           
  1923                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1924  0007' 3001               	movlw	1
  1925  0008' 0088'              	movwf	??_Dio_Pin_Write
  1926  0009' 0A09'              	incf	Dio_Pin_Write@pinNumber,w
  1927  000A' 280D'              	goto	u564
  1928  000B'                    u565:
  1929  000B' 1003               	clrc
  1930  000C' 0D88'              	rlf	??_Dio_Pin_Write,f
  1931  000D'                    u564:
  1932  000D' 3EFF               	addlw	-1
  1933  000E' 1D03               	skipz
  1934  000F' 280B'              	goto	u565
  1935  0010' 0808'              	movf	??_Dio_Pin_Write,w
  1936  0011' 0483'              	iorwf	_DIO_State,f
  1937                           
  1938                           ;MCAL/scr/Dio.c: 34:     }
  1939  0012' 281F'              	goto	l1027
  1940  0013'                    l1025:
  1941                           
  1942                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1943  0013' 3001               	movlw	1
  1944  0014' 0088'              	movwf	??_Dio_Pin_Write
  1945  0015' 0A09'              	incf	Dio_Pin_Write@pinNumber,w
  1946  0016' 2819'              	goto	u574
  1947  0017'                    u575:
  1948  0017' 1003               	clrc
  1949  0018' 0D88'              	rlf	??_Dio_Pin_Write,f
  1950  0019'                    u574:
  1951  0019' 3EFF               	addlw	-1
  1952  001A' 1D03               	skipz
  1953  001B' 2817'              	goto	u575
  1954  001C' 0808'              	movf	??_Dio_Pin_Write,w
  1955  001D' 3AFF               	xorlw	255
  1956  001E' 0583'              	andwf	_DIO_State,f
  1957  001F'                    l1027:
  1958                           
  1959                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1960  001F' 0803'              	movf	_DIO_State,w
  1961  0020' 0085               	movwf	5	;volatile
  1962  0021'                    l86:
  1963  0021' 0008               	return
  1964  0022'                    __end_of_Dio_Pin_Write:
  1965                           
  1966                           	psect	text10
  1967  0000'                    __ptext10:	
  1968 ;; *************** function _Gpio_Init *****************
  1969 ;; Defined at:
  1970 ;;		line 23 in file "MCAL/scr/gpio.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0
  1984 ;;      Params:         0       0
  1985 ;;      Locals:         0       0
  1986 ;;      Temps:          0       0
  1987 ;;      Totals:         0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 2
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998  0000'                    _Gpio_Init:	
  1999                           ;psect for function _Gpio_Init
  2000                           
  2001  0000'                    l1157:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  2004                           
  2005                           
  2006                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  2007  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2008  0001' 141F               	bsf	31,0	;volatile
  2009                           
  2010                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  2011  0002' 1405               	bsf	5,0	;volatile
  2012  0003'                    l1159:
  2013                           
  2014                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  2015  0003' 30FD               	movlw	253
  2016  0004' 059F               	andwf	31,f	;volatile
  2017                           
  2018                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  2019  0005' 30FD               	movlw	253
  2020  0006' 0585               	andwf	5,f	;volatile
  2021                           
  2022                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  2023  0007' 30FB               	movlw	251
  2024  0008' 059F               	andwf	31,f	;volatile
  2025                           
  2026                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  2027  0009' 30FB               	movlw	251
  2028  000A' 0585               	andwf	5,f	;volatile
  2029  000B'                    l1161:
  2030                           
  2031                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  2032  000B' 1585               	bsf	5,3	;volatile
  2033                           
  2034                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  2035  000C' 30F7               	movlw	247
  2036  000D' 059F               	andwf	31,f	;volatile
  2037                           
  2038                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  2039  000E' 30EF               	movlw	239
  2040  000F' 0585               	andwf	5,f	;volatile
  2041                           
  2042                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  2043  0010' 30DF               	movlw	223
  2044  0011' 0585               	andwf	5,f	;volatile
  2045  0012'                    l108:
  2046  0012' 0008               	return
  2047  0013'                    __end_of_Gpio_Init:
  2048                           
  2049                           	psect	text11
  2050  0000'                    __ptext11:	
  2051 ;; *************** function _Dio_init *****************
  2052 ;; Defined at:
  2053 ;;		line 60 in file "MCAL/scr/Dio.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0
  2067 ;;      Params:         0       0
  2068 ;;      Locals:         0       0
  2069 ;;      Temps:          0       0
  2070 ;;      Totals:         0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 3
  2074 ;; This function calls:
  2075 ;;		_Dio_Config
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081  0000'                    _Dio_init:	
  2082                           ;psect for function _Dio_init
  2083                           
  2084  0000'                    l1155:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2087                           
  2088                           
  2089                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  2090  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2091  0001' 0187'              	clrf	Dio_Config@direction
  2092  0002' 0188'              	clrf	Dio_Config@state
  2093  0003' 0189'              	clrf	Dio_Config@pullType
  2094  0004' 0A89'              	incf	Dio_Config@pullType,f
  2095  0005' 3003               	movlw	3
  2096  0006' 2000'              	fcall	_Dio_Config
  2097                           
  2098                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  2099  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  2100  0008' 0187'              	clrf	Dio_Config@direction
  2101  0009' 0A87'              	incf	Dio_Config@direction,f
  2102  000A' 0188'              	clrf	Dio_Config@state
  2103  000B' 0189'              	clrf	Dio_Config@pullType
  2104  000C' 3004               	movlw	4
  2105  000D' 2000'              	fcall	_Dio_Config
  2106  000E'                    l101:
  2107  000E' 0008               	return
  2108  000F'                    __end_of_Dio_init:
  2109                           
  2110                           	psect	text12
  2111  0000'                    __ptext12:	
  2112 ;; *************** function _Dio_Config *****************
  2113 ;; Defined at:
  2114 ;;		line 41 in file "MCAL/scr/Dio.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  pinNumber       1    wreg     unsigned char 
  2117 ;;  direction       1    7[BANK0 ] unsigned char 
  2118 ;;  state           1    8[BANK0 ] unsigned char 
  2119 ;;  pullType        1    9[BANK0 ] unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  pinNumber       1   16[BANK0 ] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, btemp+1
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0
  2131 ;;      Params:         0       3
  2132 ;;      Locals:         0       3
  2133 ;;      Temps:          0       4
  2134 ;;      Totals:         0      10
  2135 ;;Total ram usage:       10 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_Dio_init
  2142 ;;		_SPI_Init
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146  0000'                    _Dio_Config:	
  2147                           ;psect for function _Dio_Config
  2148                           
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  2152                           ;Dio_Config@pinNumber stored from wreg
  2153  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2154  0001' 0090'              	movwf	Dio_Config@pinNumber
  2155  0002'                    l1055:
  2156                           
  2157                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  2158  0002' 0807'              	movf	Dio_Config@direction,w
  2159  0003' 1903               	btfsc	3,2
  2160  0004' 2806'              	goto	u611
  2161  0005' 2807'              	goto	u610
  2162  0006'                    u611:
  2163  0006' 281C'              	goto	l1059
  2164  0007'                    u610:
  2165  0007'                    l1057:
  2166  0007' 3001               	movlw	1
  2167  0008' 008A'              	movwf	??_Dio_Config
  2168  0009' 0A10'              	incf	Dio_Config@pinNumber,w
  2169  000A' 280D'              	goto	u624
  2170  000B'                    u625:
  2171  000B' 1003               	clrc
  2172  000C' 0D8A'              	rlf	??_Dio_Config,f
  2173  000D'                    u624:
  2174  000D' 3EFF               	addlw	-1
  2175  000E' 1D03               	skipz
  2176  000F' 280B'              	goto	u625
  2177  0010' 080A'              	movf	??_Dio_Config,w
  2178  0011' 3AFF               	xorlw	255
  2179  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  2180  0013' 0505               	andwf	5,w	;volatile
  2181  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  2182  0015' 008B'              	movwf	??_Dio_Config+1
  2183  0016' 018C'              	clrf	??_Dio_Config+2
  2184  0017' 080B'              	movf	??_Dio_Config+1,w
  2185  0018' 008E'              	movwf	_Dio_Config$71
  2186  0019' 080C'              	movf	??_Dio_Config+2,w
  2187  001A' 008F'              	movwf	_Dio_Config$71+1
  2188  001B' 2833'              	goto	l1061
  2189  001C'                    l1059:
  2190  001C' 0A10'              	incf	Dio_Config@pinNumber,w
  2191  001D' 00DF               	movwf	btemp+1
  2192  001E' 3001               	movlw	1
  2193  001F' 008A'              	movwf	??_Dio_Config
  2194  0020' 3000               	movlw	0
  2195  0021' 008B'              	movwf	??_Dio_Config+1
  2196  0022' 2826'              	goto	u634
  2197  0023'                    u635:
  2198  0023' 1003               	clrc
  2199  0024' 0D8A'              	rlf	??_Dio_Config,f
  2200  0025' 0D8B'              	rlf	??_Dio_Config+1,f
  2201  0026'                    u634:
  2202  0026' 0BDF               	decfsz	btemp+1,f
  2203  0027' 2823'              	goto	u635
  2204  0028' 080A'              	movf	??_Dio_Config,w
  2205  0029' 1683               	bsf	3,5	;RP0=1, select bank1
  2206  002A' 0405               	iorwf	5,w	;volatile
  2207  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  2208  002C' 008C'              	movwf	??_Dio_Config+2
  2209  002D' 080B'              	movf	??_Dio_Config+1,w
  2210  002E' 008D'              	movwf	??_Dio_Config+3
  2211  002F' 080C'              	movf	??_Dio_Config+2,w
  2212  0030' 008E'              	movwf	_Dio_Config$71
  2213  0031' 080D'              	movf	??_Dio_Config+3,w
  2214  0032' 008F'              	movwf	_Dio_Config$71+1
  2215  0033'                    l1061:
  2216  0033' 080E'              	movf	_Dio_Config$71,w
  2217  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  2218  0035' 0085               	movwf	5	;volatile
  2219  0036'                    l1063:
  2220                           
  2221                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  2222  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  2223  0037' 0307'              	decf	Dio_Config@direction,w
  2224  0038' 1D03               	btfss	3,2
  2225  0039' 283B'              	goto	u641
  2226  003A' 283C'              	goto	u640
  2227  003B'                    u641:
  2228  003B' 285B'              	goto	l1073
  2229  003C'                    u640:
  2230  003C'                    l1065:
  2231                           
  2232                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  2233  003C' 0308'              	decf	Dio_Config@state,w
  2234  003D' 1D03               	btfss	3,2
  2235  003E' 2840'              	goto	u651
  2236  003F' 2841'              	goto	u650
  2237  0040'                    u651:
  2238  0040' 284D'              	goto	l1069
  2239  0041'                    u650:
  2240  0041'                    l1067:
  2241                           
  2242                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  2243  0041' 3001               	movlw	1
  2244  0042' 008A'              	movwf	??_Dio_Config
  2245  0043' 0A10'              	incf	Dio_Config@pinNumber,w
  2246  0044' 2847'              	goto	u664
  2247  0045'                    u665:
  2248  0045' 1003               	clrc
  2249  0046' 0D8A'              	rlf	??_Dio_Config,f
  2250  0047'                    u664:
  2251  0047' 3EFF               	addlw	-1
  2252  0048' 1D03               	skipz
  2253  0049' 2845'              	goto	u665
  2254  004A' 080A'              	movf	??_Dio_Config,w
  2255  004B' 0483'              	iorwf	_DIO_State,f
  2256                           
  2257                           ;MCAL/scr/Dio.c: 48:         } else {
  2258  004C' 2859'              	goto	l1071
  2259  004D'                    l1069:
  2260                           
  2261                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  2262  004D' 3001               	movlw	1
  2263  004E' 008A'              	movwf	??_Dio_Config
  2264  004F' 0A10'              	incf	Dio_Config@pinNumber,w
  2265  0050' 2853'              	goto	u674
  2266  0051'                    u675:
  2267  0051' 1003               	clrc
  2268  0052' 0D8A'              	rlf	??_Dio_Config,f
  2269  0053'                    u674:
  2270  0053' 3EFF               	addlw	-1
  2271  0054' 1D03               	skipz
  2272  0055' 2851'              	goto	u675
  2273  0056' 080A'              	movf	??_Dio_Config,w
  2274  0057' 3AFF               	xorlw	255
  2275  0058' 0583'              	andwf	_DIO_State,f
  2276  0059'                    l1071:
  2277                           
  2278                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  2279  0059' 0803'              	movf	_DIO_State,w
  2280  005A' 0085               	movwf	5	;volatile
  2281  005B'                    l1073:
  2282                           
  2283                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  2284  005B' 0309'              	decf	Dio_Config@pullType,w
  2285  005C' 1D03               	btfss	3,2
  2286  005D' 285F'              	goto	u681
  2287  005E' 2860'              	goto	u680
  2288  005F'                    u681:
  2289  005F' 2871'              	goto	l1077
  2290  0060'                    u680:
  2291  0060'                    l1075:
  2292                           
  2293                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  2294  0060' 307F               	movlw	127
  2295  0061' 1683               	bsf	3,5	;RP0=1, select bank1
  2296  0062' 0581               	andwf	1,f	;volatile
  2297                           
  2298                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  2299  0063' 3001               	movlw	1
  2300  0064' 1283               	bcf	3,5	;RP0=0, select bank0
  2301  0065' 008A'              	movwf	??_Dio_Config
  2302  0066' 0A10'              	incf	Dio_Config@pinNumber,w
  2303  0067' 286A'              	goto	u694
  2304  0068'                    u695:
  2305  0068' 1003               	clrc
  2306  0069' 0D8A'              	rlf	??_Dio_Config,f
  2307  006A'                    u694:
  2308  006A' 3EFF               	addlw	-1
  2309  006B' 1D03               	skipz
  2310  006C' 2868'              	goto	u695
  2311  006D' 080A'              	movf	??_Dio_Config,w
  2312  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  2313  006F' 0495               	iorwf	21,f	;volatile
  2314                           
  2315                           ;MCAL/scr/Dio.c: 56:     } else {
  2316  0070' 287E'              	goto	l98
  2317  0071'                    l1077:
  2318                           
  2319                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  2320  0071' 3001               	movlw	1
  2321  0072' 008A'              	movwf	??_Dio_Config
  2322  0073' 0A10'              	incf	Dio_Config@pinNumber,w
  2323  0074' 2877'              	goto	u704
  2324  0075'                    u705:
  2325  0075' 1003               	clrc
  2326  0076' 0D8A'              	rlf	??_Dio_Config,f
  2327  0077'                    u704:
  2328  0077' 3EFF               	addlw	-1
  2329  0078' 1D03               	skipz
  2330  0079' 2875'              	goto	u705
  2331  007A' 080A'              	movf	??_Dio_Config,w
  2332  007B' 3AFF               	xorlw	255
  2333  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  2334  007D' 0595               	andwf	21,f	;volatile
  2335  007E'                    l98:
  2336  007E' 0008               	return
  2337  007F'                    __end_of_Dio_Config:
  2338                           
  2339                           	psect	text13
  2340  0000'                    __ptext13:	
  2341 ;; *************** function _Adc_StartConversion *****************
  2342 ;; Defined at:
  2343 ;;		line 87 in file "MCAL/scr/Adc.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  channel         1    wreg     enum E11
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  channel         1    8[BANK0 ] enum E11
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0
  2357 ;;      Params:         0       0
  2358 ;;      Locals:         0       1
  2359 ;;      Temps:          0       1
  2360 ;;      Totals:         0       2
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 2
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371  0000'                    _Adc_StartConversion:	
  2372                           ;psect for function _Adc_StartConversion
  2373                           
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _Adc_StartConversion: [wreg+status,2+status,0]
  2377                           ;Adc_StartConversion@channel stored from wreg
  2378  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2379  0001' 0088'              	movwf	Adc_StartConversion@channel
  2380  0002'                    l1127:
  2381                           
  2382                           ;MCAL/scr/Adc.c: 90:     ADCON0 &= ~( 0b11 << 2);
  2383  0002' 30F3               	movlw	243
  2384  0003' 059F               	andwf	31,f	;volatile
  2385                           
  2386                           ;MCAL/scr/Adc.c: 91:     ADCON0 |= (channel << 2);
  2387  0004' 0808'              	movf	Adc_StartConversion@channel,w	;volatile
  2388  0005' 0087'              	movwf	??_Adc_StartConversion
  2389  0006' 3001               	movlw	1
  2390  0007'                    u725:
  2391  0007' 1003               	clrc
  2392  0008' 0D87'              	rlf	??_Adc_StartConversion,f
  2393  0009' 3EFF               	addlw	-1
  2394  000A' 1D03               	skipz
  2395  000B' 2807'              	goto	u725
  2396  000C' 1003               	clrc
  2397  000D' 0D07'              	rlf	??_Adc_StartConversion,w
  2398  000E' 049F               	iorwf	31,f	;volatile
  2399  000F'                    l1129:
  2400                           
  2401                           ;MCAL/scr/Adc.c: 92:     ADCON0 |= (1 << 1);
  2402  000F' 149F               	bsf	31,1	;volatile
  2403  0010'                    l58:
  2404  0010' 0008               	return
  2405  0011'                    __end_of_Adc_StartConversion:
  2406                           
  2407                           	psect	text14
  2408  0000'                    __ptext14:	
  2409 ;; *************** function _Adc_ReadResult *****************
  2410 ;; Defined at:
  2411 ;;		line 96 in file "MCAL/scr/Adc.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    7[BANK0 ] unsigned short 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0
  2425 ;;      Params:         0       2
  2426 ;;      Locals:         0       0
  2427 ;;      Temps:          0       7
  2428 ;;      Totals:         0       9
  2429 ;;Total ram usage:        9 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 2
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439  0000'                    _Adc_ReadResult:	
  2440                           ;psect for function _Adc_ReadResult
  2441                           
  2442  0000'                    l1131:	
  2443                           ;incstack = 0
  2444                           ; Regs used in _Adc_ReadResult: [wreg+status,2+status,0]
  2445                           
  2446  0000'                    l61:	
  2447                           ;MCAL/scr/Adc.c: 97:     while (ADCON0 & (1 << 1));
  2448                           
  2449  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2450  0001' 189F               	btfsc	31,1	;volatile
  2451  0002' 2804'              	goto	u731
  2452  0003' 2805'              	goto	u730
  2453  0004'                    u731:
  2454  0004' 2800'              	goto	l61
  2455  0005'                    u730:
  2456  0005'                    l63:
  2457                           
  2458                           ;MCAL/scr/Adc.c: 100:     if (ADCON0 & (1 << 7)) {
  2459  0005' 1F9F               	btfss	31,7	;volatile
  2460  0006' 2808'              	goto	u741
  2461  0007' 2809'              	goto	u740
  2462  0008'                    u741:
  2463  0008' 2810'              	goto	l1139
  2464  0009'                    u740:
  2465  0009'                    l1133:
  2466                           
  2467                           ;MCAL/scr/Adc.c: 102:         return (uint16)((ADRESH << 8) | ADRESL);
  2468  0009' 081E               	movf	30,w	;volatile
  2469  000A' 0088'              	movwf	?_Adc_ReadResult+1
  2470  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  2471  000C' 081E               	movf	30,w	;volatile
  2472  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  2473  000E' 0087'              	movwf	?_Adc_ReadResult
  2474  000F' 2830'              	goto	l65
  2475  0010'                    l1139:
  2476                           
  2477                           ;MCAL/scr/Adc.c: 105:         return (uint16)((ADRESH << 2) | (ADRESL >> 6));
  2478  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  2479  0011' 081E               	movf	30,w	;volatile
  2480  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  2481  0013' 0089'              	movwf	??_Adc_ReadResult
  2482  0014' 3006               	movlw	6
  2483  0015'                    u755:
  2484  0015' 1003               	clrc
  2485  0016' 0C89'              	rrf	??_Adc_ReadResult,f
  2486  0017' 3EFF               	addlw	-1
  2487  0018' 1D03               	skipz
  2488  0019' 2815'              	goto	u755
  2489  001A' 0809'              	movf	??_Adc_ReadResult,w
  2490  001B' 008A'              	movwf	??_Adc_ReadResult+1
  2491  001C' 018B'              	clrf	??_Adc_ReadResult+2
  2492  001D' 081E               	movf	30,w	;volatile
  2493  001E' 008C'              	movwf	??_Adc_ReadResult+3
  2494  001F' 018D'              	clrf	??_Adc_ReadResult+4
  2495  0020' 1003               	clrc
  2496  0021' 0D8C'              	rlf	??_Adc_ReadResult+3,f
  2497  0022' 0D8D'              	rlf	??_Adc_ReadResult+4,f
  2498  0023' 1003               	clrc
  2499  0024' 0D8C'              	rlf	??_Adc_ReadResult+3,f
  2500  0025' 0D8D'              	rlf	??_Adc_ReadResult+4,f
  2501  0026' 080A'              	movf	??_Adc_ReadResult+1,w
  2502  0027' 040C'              	iorwf	??_Adc_ReadResult+3,w
  2503  0028' 008E'              	movwf	??_Adc_ReadResult+5
  2504  0029' 080B'              	movf	??_Adc_ReadResult+2,w
  2505  002A' 040D'              	iorwf	??_Adc_ReadResult+4,w
  2506  002B' 008F'              	movwf	??_Adc_ReadResult+6
  2507  002C' 080E'              	movf	??_Adc_ReadResult+5,w
  2508  002D' 0087'              	movwf	?_Adc_ReadResult
  2509  002E' 080F'              	movf	??_Adc_ReadResult+6,w
  2510  002F' 0088'              	movwf	?_Adc_ReadResult+1
  2511  0030'                    l65:
  2512  0030' 0008               	return
  2513  0031'                    __end_of_Adc_ReadResult:
  2514                           
  2515                           	psect	text15
  2516  0000'                    __ptext15:	
  2517 ;; *************** function _Adc_Init *****************
  2518 ;; Defined at:
  2519 ;;		line 53 in file "MCAL/scr/Adc.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0
  2533 ;;      Params:         0       0
  2534 ;;      Locals:         0       0
  2535 ;;      Temps:          0       0
  2536 ;;      Totals:         0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547  0000'                    _Adc_Init:	
  2548                           ;psect for function _Adc_Init
  2549                           
  2550  0000'                    l1095:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  2553                           
  2554                           
  2555                           ;MCAL/scr/Adc.c: 54: ADCON0 |= (1 << 0);
  2556  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2557  0001' 141F               	bsf	31,0	;volatile
  2558  0002'                    l1097:
  2559                           
  2560                           ;MCAL/scr/Adc.c: 59:     (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  2561  0002' 30BF               	movlw	191
  2562  0003' 059F               	andwf	31,f	;volatile
  2563  0004'                    l1099:
  2564  0004' 081F               	movf	31,w	;volatile
  2565  0005'                    l1101:
  2566                           
  2567                           ;MCAL/scr/Adc.c: 62:     (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/
      +                          1000 )) >= 1600) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 /
      +                           ((4000000)/1000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 
      +                          : ((32000000 / ((4000000)/1000 )) >= 1600) ? 0b010 : ((64000000 / ((4000000)/1000 )) >= 
      +                          1600) ? 0b110 : 0b110) << 4) );
  2568  0005' 308F               	movlw	143
  2569  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  2570  0007' 059F               	andwf	31,f	;volatile
  2571  0008'                    l1117:
  2572  0008'                    l42:
  2573  0008'                    l38:
  2574  0008'                    l1123:
  2575  0008' 161F               	bsf	31,4	;volatile
  2576  0009'                    l1125:
  2577                           
  2578                           ;MCAL/scr/Adc.c: 82:         ADCON0 &= ~(1 << 7);
  2579  0009' 307F               	movlw	127
  2580  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  2581  000B' 059F               	andwf	31,f	;volatile
  2582  000C'                    l55:
  2583  000C' 0008               	return
  2584  000D'                    __end_of_Adc_Init:
  2585                           
  2586                           	psect	text16
  2587  0000'                    __ptext16:	
  2588 ;; *************** function _ISR *****************
  2589 ;; Defined at:
  2590 ;;		line 80 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  i               2    5[BANK0 ] unsigned short 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0
  2604 ;;      Params:         0       0
  2605 ;;      Locals:         0       2
  2606 ;;      Temps:          0       3
  2607 ;;      Totals:         0       5
  2608 ;;Total ram usage:        5 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 1
  2611 ;; This function calls:
  2612 ;;		_Dio_Pin_Read
  2613 ;; This function is called by:
  2614 ;;		Interrupt level 1
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618  0000'                    _ISR:	
  2619                           ;psect for function _ISR
  2620                           
  2621  0000'                    i1l1299:
  2622                           
  2623                           ;main.c: 82:     if (INTCONbits.GPIF) {
  2624  0000' 1C0B               	btfss	11,0	;volatile
  2625  0001' 2803'              	goto	u104_21
  2626  0002' 2804'              	goto	u104_20
  2627  0003'                    u104_21:
  2628  0003' 282D'              	goto	i1l189
  2629  0004'                    u104_20:
  2630  0004'                    i1l1301:
  2631                           
  2632                           ;main.c: 84:         uint16 i = 0 ;
  2633  0004' 0185'              	clrf	ISR@i
  2634  0005' 0186'              	clrf	ISR@i+1
  2635                           
  2636                           ;main.c: 85:               while(!Dio_Pin_Read(3)){
  2637  0006' 2825'              	goto	i1l1307
  2638  0007'                    i1l1303:
  2639                           
  2640                           ;main.c: 86:                   i++;
  2641  0007' 3001               	movlw	1
  2642  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  2643  0009' 0785'              	addwf	ISR@i,f
  2644  000A' 1803               	skipnc
  2645  000B' 0A86'              	incf	ISR@i+1,f
  2646  000C' 3000               	movlw	0
  2647  000D' 0786'              	addwf	ISR@i+1,f
  2648                           
  2649                           ;main.c: 87:                   _delay((unsigned long)(((100))*(4000000/4000000.0)));
  2650  000E' 3021               	movlw	33
  2651  000F' 0082'              	movwf	??_ISR
  2652  0010'                    u113_27:
  2653  0010' 0B82'              	decfsz	??_ISR,f
  2654  0011' 2810'              	goto	u113_27
  2655                           
  2656                           ;main.c: 88:                   if(i>3000){
  2657  0012' 300B               	movlw	11
  2658  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  2659  0014' 0206'              	subwf	ISR@i+1,w
  2660  0015' 30B9               	movlw	185
  2661  0016' 1903               	skipnz
  2662  0017' 0205'              	subwf	ISR@i,w
  2663  0018' 1C03               	skipc
  2664  0019' 281B'              	goto	u105_21
  2665  001A' 281C'              	goto	u105_20
  2666  001B'                    u105_21:
  2667  001B' 2825'              	goto	i1l1307
  2668  001C'                    u105_20:
  2669  001C'                    i1l1305:
  2670                           
  2671                           ;main.c: 89:                       DispenserOn = !DispenserOn;
  2672  001C' 0802'              	movf	_DispenserOn,w
  2673  001D' 1903               	btfsc	3,2
  2674  001E' 2820'              	goto	u106_21
  2675  001F' 2822'              	goto	u106_20
  2676  0020'                    u106_21:
  2677  0020' 3001               	movlw	1
  2678  0021' 2823'              	goto	u107_20
  2679  0022'                    u106_20:
  2680  0022' 3000               	movlw	0
  2681  0023'                    u107_20:
  2682  0023' 0082'              	movwf	_DispenserOn
  2683                           
  2684                           ;main.c: 90:                       break;}
  2685  0024' 282C'              	goto	i1l188
  2686  0025'                    i1l1307:
  2687                           
  2688                           ;main.c: 85:               while(!Dio_Pin_Read(3)){
  2689  0025' 3003               	movlw	3
  2690  0026' 2000'              	fcall	_Dio_Pin_Read
  2691  0027' 3A00               	xorlw	0
  2692  0028' 1903               	skipnz
  2693  0029' 282B'              	goto	u108_21
  2694  002A' 282C'              	goto	u108_20
  2695  002B'                    u108_21:
  2696  002B' 2807'              	goto	i1l1303
  2697  002C'                    u108_20:
  2698  002C'                    i1l188:
  2699                           
  2700                           ;main.c: 94:         INTCONbits.GPIF = 0;
  2701  002C' 100B               	bcf	11,0	;volatile
  2702  002D'                    i1l189:
  2703  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2704  002E' 0804'              	movf	??_ISR+2,w
  2705  002F' 008A               	movwf	10
  2706  0030' 0E03'              	swapf	??_ISR+1,w
  2707  0031' 0083               	movwf	3
  2708  0032' 0EDE               	swapf	btemp,f
  2709  0033' 0E5E               	swapf	btemp,w
  2710  0034' 0009               	retfie
  2711  0035'                    __end_of_ISR:
  2712                           
  2713                           	psect	intentry
  2714  0000'                    __pintentry:	
  2715                           ;incstack = 0
  2716                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2717                           
  2718  0000'                    interrupt_function:
  2719  005E                     saved_w         set	btemp
  2720  0000' 00DE               	movwf	btemp
  2721  0001' 0E03               	swapf	3,w
  2722  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2723  0003' 0083'              	movwf	??_ISR+1
  2724  0004' 080A               	movf	10,w
  2725  0005' 0084'              	movwf	??_ISR+2
  2726  0006' 2800'              	ljmp	_ISR
  2727                           
  2728                           	psect	text17
  2729  0000'                    __ptext17:	
  2730 ;; *************** function _Dio_Pin_Read *****************
  2731 ;; Defined at:
  2732 ;;		line 19 in file "MCAL/scr/Dio.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  pinNumber       1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  pinNumber       1    1[BANK0 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0
  2746 ;;      Params:         0       0
  2747 ;;      Locals:         0       1
  2748 ;;      Temps:          0       1
  2749 ;;      Totals:         0       2
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_ISR
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759  0000'                    _Dio_Pin_Read:	
  2760                           ;psect for function _Dio_Pin_Read
  2761                           
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _Dio_Pin_Read: [wreg+status,2+status,0]
  2765                           ;Dio_Pin_Read@pinNumber stored from wreg
  2766  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2767  0001' 0081'              	movwf	Dio_Pin_Read@pinNumber
  2768  0002'                    i1l1143:
  2769                           
  2770                           ;MCAL/scr/Dio.c: 20:         if (GPIO & (1 << pinNumber)) {
  2771  0002' 3001               	movlw	1
  2772  0003' 0080'              	movwf	??_Dio_Pin_Read
  2773  0004' 0A01'              	incf	Dio_Pin_Read@pinNumber,w
  2774  0005' 2808'              	goto	u76_24
  2775  0006'                    u76_25:
  2776  0006' 1003               	clrc
  2777  0007' 0D80'              	rlf	??_Dio_Pin_Read,f
  2778  0008'                    u76_24:
  2779  0008' 3EFF               	addlw	-1
  2780  0009' 1D03               	skipz
  2781  000A' 2806'              	goto	u76_25
  2782  000B' 0800'              	movf	??_Dio_Pin_Read,w
  2783  000C' 0505               	andwf	5,w	;volatile
  2784  000D' 1903               	btfsc	3,2
  2785  000E' 2810'              	goto	u77_21
  2786  000F' 2811'              	goto	u77_20
  2787  0010'                    u77_21:
  2788  0010' 2813'              	goto	i1l1151
  2789  0011'                    u77_20:
  2790  0011'                    i1l1145:
  2791                           
  2792                           ;MCAL/scr/Dio.c: 21:             return 1;
  2793  0011' 3001               	movlw	1
  2794  0012' 2814'              	goto	i1l80
  2795  0013'                    i1l1151:
  2796                           
  2797                           ;MCAL/scr/Dio.c: 23:             return 0;
  2798  0013' 3000               	movlw	0
  2799  0014'                    i1l80:
  2800  0014' 0008               	return
  2801  0015'                    __end_of_Dio_Pin_Read:
  2802  0000                     ___latbits      equ	0
  2803  005E                     btemp           set	94	;btemp
  2804  005E                     wtemp0          set	94
  2805                           
  2806                           	psect	config
  2807                           
  2808                           ;Config register CONFIG @ 0x2007
  2809                           ;	Oscillator Selection bits
  2810                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2811                           ;	Watchdog Timer Enable bit
  2812                           ;	WDTE = OFF, WDT disabled
  2813                           ;	Power-Up Timer Enable bit
  2814                           ;	PWRTE = OFF, PWRT disabled
  2815                           ;	GP3/MCLR pin function select
  2816                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2817                           ;	Brown-out Detect Enable bit
  2818                           ;	BOREN = OFF, BOD disabled
  2819                           ;	Code Protection bit
  2820                           ;	CP = OFF, Program Memory code protection is disabled
  2821                           ;	Data Code Protection bit
  2822                           ;	CPD = OFF, Data memory code protection is disabled
  2823  2007                     	org	8199
  2824  2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     40      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lmul
    ___lwmod->___lwdiv
    ___lmul->_Adc_ReadResult
    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _MAX7219_DisplayData->_SPI_Send_16bit
    _MAX7219_DisplayData->___lwmod
    _MAX7219_ClearDisplay->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_Dio_Pin_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2025
                                             29 BANK0     11    11      0
                           _Adc_Init
                     _Adc_ReadResult
                _Adc_StartConversion
                      _Dio_Pin_Write
                           _Dio_init
                          _Gpio_Init
               _MAX7219_ClearDisplay
                _MAX7219_DisplayData
                       _MAX7219_Init
                           _SPI_Init
                             ___lmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                             14 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                             16 BANK0     13     5      8
                     _Adc_ReadResult (ARG)
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     186
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (1) _MAX7219_DisplayData                                  6     5      1     246
                                             19 BANK0      6     5      1
                     _SPI_Send_16bit
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _MAX7219_ClearDisplay                                 3     3      0     254
                                             19 BANK0      3     3      0
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     186
                                             10 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      88
                                              7 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              7 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_StartConversion                                  2     2      0      29
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Adc_ReadResult                                       9     7      2       0
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0      53
                                              2 BANK0      5     5      0
                       _Dio_Pin_Read
 ---------------------------------------------------------------------------------
 (5) _Dio_Pin_Read                                         2     2      0      29
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_ReadResult
   _Adc_StartConversion
   _Dio_Pin_Write
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_ClearDisplay
     _SPI_Send_16bit
       _Dio_Pin_Write
   _MAX7219_DisplayData
     _SPI_Send_16bit
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   _MAX7219_Init
     _SPI_Send_16bit
   _SPI_Init
     _Dio_Config
   ___lmul
     _Adc_ReadResult (ARG)
   ___lwdiv
   ___lwmod

 _ISR (ROOT)
   _Dio_Pin_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     40      45     72.6%
STACK                0      0       0      0.0%
DATA                 0      0      45      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 21:07:49 2024

        __end_of_Dio_Pin_Read 0015                             l9 001E                             pc 0002  
                          l14 0017                            l17 0012                            l42 0008  
                          l61 0000                            l38 0008                            l55 000C  
                          l63 0005                            l65 0030                            l58 0010  
                          l86 0021                            l98 007E                            fsr 0004  
       __end_of_Dio_Pin_Write 0022                _SPI_Send_16bit 0000                           l101 000E  
                         l108 0012                           l124 0058                           l117 0017  
                         l289 0046                           l555 0042                           l565 0038  
                         u600 0053                           u601 0052                           u610 0007  
                         u611 0006                           _ISR 0000                           u605 004F  
                         u550 0007                           u710 0017                           u551 0006  
                         u711 0016                           u704 0077                           u640 003C  
                         u624 000D                           u705 0075                           u641 003B  
                         u625 000B                           u730 0005                           u650 0041  
                         u634 0026                           u731 0004                           u651 0040  
                         u635 0023                           u740 0009                           u564 000D  
                         u820 003E                           u900 0007                           u741 0008  
                         u725 0007                           u565 000B                           u821 003D  
                         u805 0026                           u901 0006                           u574 0019  
                         u590 0022                           u830 0009                           u575 0017  
                         u591 0021                           u815 002E                           u831 0008  
                         u680 0060                           u664 0047                           u584 0014  
                         u920 0017                           u681 005F                           u665 0045  
                         u585 0011                           u921 0016                           u674 0053  
                         u850 0019                           u930 0021                           u755 0015  
                         u675 0051                           u851 0018                           u931 0020  
                         u915 000B                           u780 000D                           u781 000C  
                         u845 000D                           u694 006A                           u870 002A  
                         u950 0034                           u695 0068                           u791 0016  
                         u871 0029                           u951 0033                           u935 001D  
                         u792 001D                           u793 0024                           u865 001A  
                         u945 0028                           u890 003E                           u891 003D  
                         u875 0026                           u980 002D                           u885 0032  
                         u981 002C                           u990 0032                           u991 0031  
                         _WPU 0095                           fsr0 0004                          ?_ISR 0000  
                        ISR@i 0005                          l1101 0005                          l1021 0002  
                        l1023 0007                          l1031 0004                          l1025 0013  
                        l1041 0027                          l1201 003E                          l1123 0008  
                        l1131 0000                          l1027 001F                          l1051 0046  
                        l1043 002A                          l1211 0011                          l1125 0009  
                        l1117 0008                          l1133 0009                          l1061 0033  
                        l1053 0053                          l1045 0030                          l1037 0007  
                        l1029 0000                          l1221 002E                          l1213 0013  
                        l1205 0000                          l1127 0002                          l1071 0059  
                        l1063 0036                          l1055 0002                          l1047 003B  
                        l1039 0022                          l1215 0017                          l1207 0007  
                        l1223 0034                          l1231 0001                          l1129 000F  
                        l1065 003C                          l1073 005B                          l1057 0007  
                        l1161 000B                          l1049 003F                          l1081 0000  
                        l1217 0021                          l1209 000A                          l1241 0009  
                        l1233 0002                          l1139 0010                          l1075 0060  
                        l1067 0041                          l1059 001C                          l1155 0000  
                        l1091 0011                          l1163 0000                          l1171 0024  
                        l1219 0027                          l1251 0018                          l1243 000B  
                        l1235 0005                          l1077 0071                          l1069 004D  
                        l1157 0000                          l1093 0002                          l1173 002D  
                        l1165 0000                          l1181 0003                          l1261 0032  
                        l1253 001B                          l1245 000D                          l1237 0007  
                        l1229 0000                          l1095 0000                          l1159 0003  
                        l1087 0003                          l1079 0000                          l1175 003E  
                        l1167 0009                          l1191 0019                          l1183 0009  
                        l1271 008A                          l1263 0033                          l1255 0024  
                        l1247 000E                          l1239 0008                          l1097 0002  
                        l1089 000E                          l1169 000D                          l1193 002A  
                        l1185 000C                          l1273 00A6                          l1281 00E9  
                        l1265 0038                          l1257 0027                          l1249 0013  
                        l1099 0004                          l1195 0030                          l1187 0013  
                        l1179 0000                          l1291 00FA                          l1283 00EF  
                        l1275 00C2                          l1267 006C                          l1259 002D  
                        l1197 0031                          l1189 0015                          l1293 00FF  
                        l1285 00F4                          l1277 00D1                          l1269 0078  
                        l1199 0038                          l1295 0104                          l1287 00F7  
                        l1279 00E2                          l1289 00F9                          l1297 0109  
                        u1000 0060                          u1010 00EF                          u1011 00EE  
                        u1020 00F4                          u1021 00F3                          u1005 005B  
                        u1030 010F                          u1031 010E                          u1107 0072  
                        u1117 002D                          u1127 0038                          _IOCB 0096  
                        u1097 001F                          _GPIO 0005                          i1l80 0014  
                        _main 0000                          btemp 005E                    _Dio_Config 0000  
                        start 0000*                        ??_ISR 0002        __end_of_SPI_Send_16bit 0059  
                       ?_main 0000                         _ANSEL 009F               __end_of___lwdiv 0043  
             __end_of___lwmod 0039                         i1l188 002C                         i1l189 002D  
                       u76_24 0008                         u76_25 0006                         u77_20 0011  
                       u77_21 0010           ___lmul@multiplicand 0014              __end_of_Adc_Init 000D  
                       main@i 0027              __end_of_SPI_Init 0018                         pclath 000A  
        __end_of_MAX7219_Init 001F                         status 0003                         wtemp0 005E  
__end_of_MAX7219_ClearDisplay 0018              __end_of_Dio_init 000F               __initialization 0000  
                __end_of_main 0111               ?_SPI_Send_16bit 000A                        ??_main 001D  
                      _ADCON0 001F              ??_Adc_ReadResult 0009                        _ADRESH 001E  
                      _ADRESL 009E                        i1l1301 0004                        i1l1151 0013  
                      i1l1143 0002                        i1l1303 0007                        i1l1145 0011  
                      i1l1305 001C                        i1l1307 0025                        u104_20 0004  
                      u104_21 0003                        u105_20 001C                        u105_21 001B  
                      i1l1299 0000                        u113_27 0010                        u106_20 0022  
                      u106_21 0020                        u107_20 0023                        u108_20 002C  
                      u108_21 002B                        _TRISIO 0085                   ?_Dio_Config 0007  
                 _DispenserOn 0002                        ___lmul 0000                     ??___lwdiv 0000  
                   ??___lwmod 0000            SPI_Send_16bit@data 000A                        saved_w 005E  
         _MAX7219_DisplayData 0000                  _Dio_Pin_Read 0000       __end_of__initialization 0006  
    MAX7219_DisplayData@digit 0018          ?_MAX7219_DisplayData 0013                __pcstackCOMMON 0000  
                   ?_Adc_Init 0000             __end_of_Gpio_Init 0013                     ?_SPI_Init 0000  
        _MAX7219_ClearDisplay 0000                     ?_Dio_init 0000                    __pbssBANK0 0000  
       MAX7219_ClearDisplay@i 0015         ??_MAX7219_DisplayData 0014                    __pmaintext 0000  
                     ?___lmul 0010        Dio_Pin_Write@pinNumber 0009                    __pintentry 0000  
                  ??_Adc_Init 0000                ___lmul@product 0019                    ??_SPI_Init 0000  
                _MAX7219_Init 0000         ?_MAX7219_ClearDisplay 0000            Dio_Config@pullType 0009  
                  ??_Dio_init 0000                    __stringtab 0000                       _Counter 0000  
            ??_SPI_Send_16bit 000C                       ___lwdiv 0000                       ___lwmod 0000  
                     __ptext1 0000                       __ptext2 0000                       __ptext3 0000  
                     __ptext4 0000                       __ptext5 0000                       __ptext6 0000  
                     __ptext7 0000                       __ptext8 0000                       __ptext9 0000  
                   _DIO_State 0003          end_of_initialization 0006                 _Dio_Config$71 000E  
                ??_Dio_Config 000A                 _Dio_Pin_Write 0000        ??_MAX7219_ClearDisplay 0013  
          __end_of_Dio_Config 007F           _Adc_StartConversion 0000          ?_Adc_StartConversion 0000  
              __end_of___lmul 0047                ?_Dio_Pin_Write 0007                     _Gpio_Init 0000  
         start_initialization 0000  MAX7219_DisplayData@character 0013                   __end_of_ISR 0035  
                 _BCD_Enabled 0004         ??_Adc_StartConversion 0007                      ??___lmul 0018  
           SPI_Send_16bit@bit 0011                    ?_Gpio_Init 0000                     ___latbits 0000  
               __pcstackBANK0 0000   __end_of_MAX7219_DisplayData 0013              _MAX7219_No_Table 0006  
         Dio_Config@direction 0007              ___lwdiv@dividend 0009               Dio_Config@state 0008  
             ??_Dio_Pin_Write 0008                      ?___lwdiv 0007                      ?___lwmod 000E  
                   __pstrings 0000           Dio_Config@pinNumber 0010              ___lwdiv@quotient 000B  
           interrupt_function 0000                      _Adc_Init 0000                      _SPI_Init 0000  
                 __stringbase 0005                   ??_Gpio_Init 0000                      _Dio_init 0000  
               ?_Dio_Pin_Read 0000            Dio_Pin_Write@state 0007             ___lmul@multiplier 0010  
              _Adc_ReadResult 0000            __end_of__stringtab 0006                      _main$776 0025  
             ___lwdiv@divisor 0007                ??_Dio_Pin_Read 0000               ___lwdiv@counter 000D  
                    __ptext10 0000                      __ptext11 0000                      __ptext12 0000  
                    __ptext13 0000                      __ptext14 0000                      __ptext15 0000  
                    __ptext16 0000                      __ptext17 0000        __end_of_Adc_ReadResult 0031  
               ?_MAX7219_Init 0000                    _INTCONbits 000B      __end_of_MAX7219_No_Table 0010  
                    intlevel1 0000*             ___lwmod@dividend 0010   __end_of_Adc_StartConversion 0011  
             ?_Adc_ReadResult 0007                     stringcode 0000    Adc_StartConversion@channel 0008  
       Dio_Pin_Read@pinNumber 0001                ??_MAX7219_Init 0000                    _OPTION_REG 0081  
             ___lwmod@divisor 000E               ___lwmod@counter 0012                      stringdir 0000  
                    stringtab 0000  
