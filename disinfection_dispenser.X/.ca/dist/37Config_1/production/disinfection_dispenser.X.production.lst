

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 21:07:52 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x5E,2
    30     0000                     
    31                           ; Generated 17/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F675 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     GPIO            equ	5	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0019                     CMCON           equ	25	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISIO          equ	133	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008E                     PCON            equ	142	;# 
    93     0090                     OSCCAL          equ	144	;# 
    94     0095                     WPU             equ	149	;# 
    95     0096                     IOC             equ	150	;# 
    96     0096                     IOCB            equ	150	;# 
    97     0099                     VRCON           equ	153	;# 
    98     009A                     EEDATA          equ	154	;# 
    99     009A                     EEDAT           equ	154	;# 
   100     009B                     EEADR           equ	155	;# 
   101     009C                     EECON1          equ	156	;# 
   102     009D                     EECON2          equ	157	;# 
   103     009E                     ADRESL          equ	158	;# 
   104     009F                     ANSEL           equ	159	;# 
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     GPIO            equ	5	;# 
   111     000A                     PCLATH          equ	10	;# 
   112     000B                     INTCON          equ	11	;# 
   113     000C                     PIR1            equ	12	;# 
   114     000E                     TMR1            equ	14	;# 
   115     000E                     TMR1L           equ	14	;# 
   116     000F                     TMR1H           equ	15	;# 
   117     0010                     T1CON           equ	16	;# 
   118     0019                     CMCON           equ	25	;# 
   119     001E                     ADRESH          equ	30	;# 
   120     001F                     ADCON0          equ	31	;# 
   121     0081                     OPTION_REG      equ	129	;# 
   122     0085                     TRISIO          equ	133	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008E                     PCON            equ	142	;# 
   125     0090                     OSCCAL          equ	144	;# 
   126     0095                     WPU             equ	149	;# 
   127     0096                     IOC             equ	150	;# 
   128     0096                     IOCB            equ	150	;# 
   129     0099                     VRCON           equ	153	;# 
   130     009A                     EEDATA          equ	154	;# 
   131     009A                     EEDAT           equ	154	;# 
   132     009B                     EEADR           equ	155	;# 
   133     009C                     EECON1          equ	156	;# 
   134     009D                     EECON2          equ	157	;# 
   135     009E                     ADRESL          equ	158	;# 
   136     009F                     ANSEL           equ	159	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     GPIO            equ	5	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0019                     CMCON           equ	25	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISIO          equ	133	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008E                     PCON            equ	142	;# 
   157     0090                     OSCCAL          equ	144	;# 
   158     0095                     WPU             equ	149	;# 
   159     0096                     IOC             equ	150	;# 
   160     0096                     IOCB            equ	150	;# 
   161     0099                     VRCON           equ	153	;# 
   162     009A                     EEDATA          equ	154	;# 
   163     009A                     EEDAT           equ	154	;# 
   164     009B                     EEADR           equ	155	;# 
   165     009C                     EECON1          equ	156	;# 
   166     009D                     EECON2          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ANSEL           equ	159	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     GPIO            equ	5	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0019                     CMCON           equ	25	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISIO          equ	133	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008E                     PCON            equ	142	;# 
   189     0090                     OSCCAL          equ	144	;# 
   190     0095                     WPU             equ	149	;# 
   191     0096                     IOC             equ	150	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0099                     VRCON           equ	153	;# 
   194     009A                     EEDATA          equ	154	;# 
   195     009A                     EEDAT           equ	154	;# 
   196     009B                     EEADR           equ	155	;# 
   197     009C                     EECON1          equ	156	;# 
   198     009D                     EECON2          equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ANSEL           equ	159	;# 
   201     0000                     INDF            equ	0	;# 
   202     0001                     TMR0            equ	1	;# 
   203     0002                     PCL             equ	2	;# 
   204     0003                     STATUS          equ	3	;# 
   205     0004                     FSR             equ	4	;# 
   206     0005                     GPIO            equ	5	;# 
   207     000A                     PCLATH          equ	10	;# 
   208     000B                     INTCON          equ	11	;# 
   209     000C                     PIR1            equ	12	;# 
   210     000E                     TMR1            equ	14	;# 
   211     000E                     TMR1L           equ	14	;# 
   212     000F                     TMR1H           equ	15	;# 
   213     0010                     T1CON           equ	16	;# 
   214     0019                     CMCON           equ	25	;# 
   215     001E                     ADRESH          equ	30	;# 
   216     001F                     ADCON0          equ	31	;# 
   217     0081                     OPTION_REG      equ	129	;# 
   218     0085                     TRISIO          equ	133	;# 
   219     008C                     PIE1            equ	140	;# 
   220     008E                     PCON            equ	142	;# 
   221     0090                     OSCCAL          equ	144	;# 
   222     0095                     WPU             equ	149	;# 
   223     0096                     IOC             equ	150	;# 
   224     0096                     IOCB            equ	150	;# 
   225     0099                     VRCON           equ	153	;# 
   226     009A                     EEDATA          equ	154	;# 
   227     009A                     EEDAT           equ	154	;# 
   228     009B                     EEADR           equ	155	;# 
   229     009C                     EECON1          equ	156	;# 
   230     009D                     EECON2          equ	157	;# 
   231     009E                     ADRESL          equ	158	;# 
   232     009F                     ANSEL           equ	159	;# 
   233     0000                     INDF            equ	0	;# 
   234     0001                     TMR0            equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR             equ	4	;# 
   238     0005                     GPIO            equ	5	;# 
   239     000A                     PCLATH          equ	10	;# 
   240     000B                     INTCON          equ	11	;# 
   241     000C                     PIR1            equ	12	;# 
   242     000E                     TMR1            equ	14	;# 
   243     000E                     TMR1L           equ	14	;# 
   244     000F                     TMR1H           equ	15	;# 
   245     0010                     T1CON           equ	16	;# 
   246     0019                     CMCON           equ	25	;# 
   247     001E                     ADRESH          equ	30	;# 
   248     001F                     ADCON0          equ	31	;# 
   249     0081                     OPTION_REG      equ	129	;# 
   250     0085                     TRISIO          equ	133	;# 
   251     008C                     PIE1            equ	140	;# 
   252     008E                     PCON            equ	142	;# 
   253     0090                     OSCCAL          equ	144	;# 
   254     0095                     WPU             equ	149	;# 
   255     0096                     IOC             equ	150	;# 
   256     0096                     IOCB            equ	150	;# 
   257     0099                     VRCON           equ	153	;# 
   258     009A                     EEDATA          equ	154	;# 
   259     009A                     EEDAT           equ	154	;# 
   260     009B                     EEADR           equ	155	;# 
   261     009C                     EECON1          equ	156	;# 
   262     009D                     EECON2          equ	157	;# 
   263     009E                     ADRESL          equ	158	;# 
   264     009F                     ANSEL           equ	159	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     GPIO            equ	5	;# 
   271     000A                     PCLATH          equ	10	;# 
   272     000B                     INTCON          equ	11	;# 
   273     000C                     PIR1            equ	12	;# 
   274     000E                     TMR1            equ	14	;# 
   275     000E                     TMR1L           equ	14	;# 
   276     000F                     TMR1H           equ	15	;# 
   277     0010                     T1CON           equ	16	;# 
   278     0019                     CMCON           equ	25	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISIO          equ	133	;# 
   283     008C                     PIE1            equ	140	;# 
   284     008E                     PCON            equ	142	;# 
   285     0090                     OSCCAL          equ	144	;# 
   286     0095                     WPU             equ	149	;# 
   287     0096                     IOC             equ	150	;# 
   288     0096                     IOCB            equ	150	;# 
   289     0099                     VRCON           equ	153	;# 
   290     009A                     EEDATA          equ	154	;# 
   291     009A                     EEDAT           equ	154	;# 
   292     009B                     EEADR           equ	155	;# 
   293     009C                     EECON1          equ	156	;# 
   294     009D                     EECON2          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ANSEL           equ	159	;# 
   297                           
   298                           	psect	strings
   299     039E                     __pstrings:
   300     039E                     stringtab:
   301     039E                     __stringtab:
   302     039E                     stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305     039E                     stringdir:
   306     039E  3003               	movlw	high stringdir
   307     039F  008A               	movwf	10
   308     03A0  0804               	movf	4,w
   309     03A1  0A84               	incf	4,f
   310     03A2  0782               	addwf	2,f
   311     03A3                     __stringbase:
   312     03A3  3400               	retlw	0
   313     03A4                     __end_of__stringtab:
   314     03A4                     _MAX7219_No_Table:
   315     03A4  347E               	retlw	126
   316     03A5  3430               	retlw	48
   317     03A6  346D               	retlw	109
   318     03A7  3479               	retlw	121
   319     03A8  3433               	retlw	51
   320     03A9  345B               	retlw	91
   321     03AA  345F               	retlw	95
   322     03AB  3470               	retlw	112
   323     03AC  347F               	retlw	127
   324     03AD  347B               	retlw	123
   325     03AE                     __end_of_MAX7219_No_Table:
   326     000B                     _INTCONbits     set	11
   327     0005                     _GPIO           set	5
   328     001E                     _ADRESH         set	30
   329     001F                     _ADCON0         set	31
   330     0096                     _IOCB           set	150
   331     0095                     _WPU            set	149
   332     0081                     _OPTION_REG     set	129
   333     0085                     _TRISIO         set	133
   334     009E                     _ADRESL         set	158
   335     009F                     _ANSEL          set	159
   336                           
   337                           	psect	cinit
   338     000C                     start_initialization:	
   339                           ; #config settings
   340                           
   341     000C                     __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344     000C  1283               	bcf	3,5	;RP0=0, select bank0
   345     000D  01C8               	clrf	__pbssBANK0& (0+127)
   346     000E  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   347     000F  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   348     0010  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   349     0011  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   350     0012                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353     0012                     __end_of__initialization:
   354     0012  0183               	clrf	3
   355     0013  2814               	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358     0048                     __pbssBANK0:
   359     0048                     _Counter:
   360     0048                     	ds	2
   361     004A                     _DispenserOn:
   362     004A                     	ds	1
   363     004B                     _DIO_State:
   364     004B                     	ds	1
   365     004C                     _BCD_Enabled:
   366     004C                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0000                     __pcstackCOMMON:
   370     0000                     ??_MAX7219_Init:
   371     0000                     ??_Adc_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0000                     ??_Dio_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0000                     ??_Gpio_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0000                     ??_SPI_Init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0000                     ??___lwdiv:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0000                     ??___lwmod:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           	psect	cstackBANK0
   391     0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0020                     ?_MAX7219_Init:
   395     0020                     ?_MAX7219_ClearDisplay:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0020                     ?_Adc_Init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0020                     ?_Adc_StartConversion:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     ?_Dio_Pin_Read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0020                     ?_Dio_init:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0020                     ?_Gpio_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ?_SPI_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     ?_ISR:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0020                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0020                     ??_Dio_Pin_Read:	
   423                           ; 2 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427     0020                     	ds	1
   428     0021                     Dio_Pin_Read@pinNumber:
   429                           
   430                           ; 1 bytes @ 0x1
   431     0021                     	ds	1
   432     0022                     ??_ISR:
   433                           
   434                           ; 1 bytes @ 0x2
   435     0022                     	ds	3
   436     0025                     ISR@i:
   437                           
   438                           ; 2 bytes @ 0x5
   439     0025                     	ds	2
   440     0027                     ?_Dio_Pin_Write:
   441     0027                     ?_Dio_Config:	
   442                           ; 1 bytes @ 0x7
   443                           
   444     0027                     ?_Adc_ReadResult:	
   445                           ; 1 bytes @ 0x7
   446                           
   447     0027                     ?___lwdiv:	
   448                           ; 2 bytes @ 0x7
   449                           
   450     0027                     Dio_Pin_Write@state:	
   451                           ; 2 bytes @ 0x7
   452                           
   453     0027                     Dio_Config@direction:	
   454                           ; 1 bytes @ 0x7
   455                           
   456     0027                     ___lwdiv@divisor:	
   457                           ; 1 bytes @ 0x7
   458                           
   459     0027                     ??_Adc_StartConversion:	
   460                           ; 2 bytes @ 0x7
   461                           
   462                           
   463                           ; 1 bytes @ 0x7
   464     0027                     	ds	1
   465     0028                     Adc_StartConversion@channel:
   466     0028                     Dio_Config@state:	
   467                           ; 1 bytes @ 0x8
   468                           
   469     0028                     ??_Dio_Pin_Write:	
   470                           ; 1 bytes @ 0x8
   471                           
   472                           
   473                           ; 1 bytes @ 0x8
   474     0028                     	ds	1
   475     0029                     Dio_Pin_Write@pinNumber:
   476     0029                     Dio_Config@pullType:	
   477                           ; 1 bytes @ 0x9
   478                           
   479     0029                     ___lwdiv@dividend:	
   480                           ; 1 bytes @ 0x9
   481                           
   482     0029                     ??_Adc_ReadResult:	
   483                           ; 2 bytes @ 0x9
   484                           
   485                           
   486                           ; 1 bytes @ 0x9
   487     0029                     	ds	1
   488     002A                     ?_SPI_Send_16bit:
   489     002A                     SPI_Send_16bit@data:	
   490                           ; 1 bytes @ 0xA
   491                           
   492     002A                     ??_Dio_Config:	
   493                           ; 2 bytes @ 0xA
   494                           
   495                           
   496                           ; 1 bytes @ 0xA
   497     002A                     	ds	1
   498     002B                     ___lwdiv@quotient:
   499                           
   500                           ; 2 bytes @ 0xB
   501     002B                     	ds	1
   502     002C                     ??_SPI_Send_16bit:
   503                           
   504                           ; 1 bytes @ 0xC
   505     002C                     	ds	1
   506     002D                     ___lwdiv@counter:
   507                           
   508                           ; 1 bytes @ 0xD
   509     002D                     	ds	1
   510     002E                     ?___lwmod:
   511     002E                     _Dio_Config$71:	
   512                           ; 2 bytes @ 0xE
   513                           
   514     002E                     ___lwmod@divisor:	
   515                           ; 2 bytes @ 0xE
   516                           
   517                           
   518                           ; 2 bytes @ 0xE
   519     002E                     	ds	2
   520     0030                     ?___lmul:
   521     0030                     Dio_Config@pinNumber:	
   522                           ; 4 bytes @ 0x10
   523                           
   524     0030                     ___lwmod@dividend:	
   525                           ; 1 bytes @ 0x10
   526                           
   527     0030                     ___lmul@multiplier:	
   528                           ; 2 bytes @ 0x10
   529                           
   530                           
   531                           ; 4 bytes @ 0x10
   532     0030                     	ds	1
   533     0031                     SPI_Send_16bit@bit:
   534                           
   535                           ; 2 bytes @ 0x11
   536     0031                     	ds	1
   537     0032                     ___lwmod@counter:
   538                           
   539                           ; 1 bytes @ 0x12
   540     0032                     	ds	1
   541     0033                     ?_MAX7219_DisplayData:
   542     0033                     MAX7219_DisplayData@character:	
   543                           ; 1 bytes @ 0x13
   544                           
   545     0033                     ??_MAX7219_ClearDisplay:	
   546                           ; 1 bytes @ 0x13
   547                           
   548                           
   549                           ; 1 bytes @ 0x13
   550     0033                     	ds	1
   551     0034                     ___lmul@multiplicand:
   552     0034                     ??_MAX7219_DisplayData:	
   553                           ; 4 bytes @ 0x14
   554                           
   555                           
   556                           ; 1 bytes @ 0x14
   557     0034                     	ds	1
   558     0035                     MAX7219_ClearDisplay@i:
   559                           
   560                           ; 1 bytes @ 0x15
   561     0035                     	ds	3
   562     0038                     MAX7219_DisplayData@digit:
   563     0038                     ??___lmul:	
   564                           ; 1 bytes @ 0x18
   565                           
   566                           
   567                           ; 1 bytes @ 0x18
   568     0038                     	ds	1
   569     0039                     ___lmul@product:
   570                           
   571                           ; 4 bytes @ 0x19
   572     0039                     	ds	4
   573     003D                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x1D
   576     003D                     	ds	8
   577     0045                     _main$776:
   578                           
   579                           ; 2 bytes @ 0x25
   580     0045                     	ds	2
   581     0047                     main@i:
   582                           
   583                           ; 1 bytes @ 0x27
   584     0047                     	ds	1
   585                           
   586                           	psect	maintext
   587     0014                     __pmaintext:	
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 29 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               1   39[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2  162[None  ] int 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : B00/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0
   607 ;;      Params:         0       0
   608 ;;      Locals:         0       3
   609 ;;      Temps:          0       8
   610 ;;      Totals:         0      11
   611 ;;Total ram usage:       11 bytes
   612 ;; Hardware stack levels required when called: 5
   613 ;; This function calls:
   614 ;;		_Adc_Init
   615 ;;		_Adc_ReadResult
   616 ;;		_Adc_StartConversion
   617 ;;		_Dio_Pin_Write
   618 ;;		_Dio_init
   619 ;;		_Gpio_Init
   620 ;;		_MAX7219_ClearDisplay
   621 ;;		_MAX7219_DisplayData
   622 ;;		_MAX7219_Init
   623 ;;		_SPI_Init
   624 ;;		___lmul
   625 ;;		___lwdiv
   626 ;;		___lwmod
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     0014                     _main:	
   633                           ;psect for function _main
   634                           
   635                           
   636                           ;main.c: 30:         Gpio_Init();
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   640     0014  2367               	fcall	_Gpio_Init
   641                           
   642                           ;main.c: 31:         Dio_init();
   643     0015  23AE               	fcall	_Dio_init
   644                           
   645                           ;main.c: 32:         Adc_Init();
   646     0016  23BD               	fcall	_Adc_Init
   647                           
   648                           ;main.c: 33:         SPI_Init();
   649     0017  2326               	fcall	_SPI_Init
   650                           
   651                           ;main.c: 34:       MAX7219_Init();
   652     0018  2307               	fcall	_MAX7219_Init
   653                           
   654                           ;main.c: 35:    IOCB |= (1 << 3);
   655     0019  1683               	bsf	3,5	;RP0=1, select bank1
   656     001A  1596               	bsf	22,3	;volatile
   657                           
   658                           ;main.c: 37:     INTCONbits.GIE = 1;
   659     001B  178B               	bsf	11,7	;volatile
   660                           
   661                           ;main.c: 38:     INTCONbits.PEIE = 1;
   662     001C  170B               	bsf	11,6	;volatile
   663                           
   664                           ;main.c: 39:     INTCONbits.GPIE = 1;
   665     001D  158B               	bsf	11,3	;volatile
   666     001E                     l1297:
   667                           
   668                           ;main.c: 57:         while(DispenserOn){
   669     001E  1283               	bcf	3,5	;RP0=0, select bank0
   670     001F  084A               	movf	_DispenserOn,w
   671     0020  1903               	btfsc	3,2
   672     0021  281E               	goto	l1297
   673                           
   674                           ;main.c: 58:             Adc_StartConversion(ADC_CHANNEL_AN0);
   675     0022  3000               	movlw	0
   676     0023  238D               	fcall	_Adc_StartConversion
   677                           
   678                           ;main.c: 59:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x04,0x1D); MAX7219
      +                          _DisplayData(0x03,0x15);;
   679     0024  233E               	fcall	_MAX7219_ClearDisplay
   680     0025  301D               	movlw	29
   681     0026  1283               	bcf	3,5	;RP0=0, select bank0
   682     0027  00B3               	movwf	MAX7219_DisplayData@character
   683     0028  3004               	movlw	4
   684     0029  2354               	fcall	_MAX7219_DisplayData
   685     002A  3015               	movlw	21
   686     002B  1283               	bcf	3,5	;RP0=0, select bank0
   687     002C  00B3               	movwf	MAX7219_DisplayData@character
   688     002D  3003               	movlw	3
   689     002E  2354               	fcall	_MAX7219_DisplayData
   690                           
   691                           ;main.c: 60:             for(uint8 i=0; (i<100)&&DispenserOn;i++ )
   692     002F  1283               	bcf	3,5	;RP0=0, select bank0
   693     0030  01C7               	clrf	main@i
   694     0031  2841               	goto	l1257
   695     0032                     l1259:
   696     0032  084A               	movf	_DispenserOn,w
   697     0033  1903               	btfsc	3,2
   698     0034  2845               	goto	l1261
   699                           
   700                           ;main.c: 61:                 {_delay((unsigned long)((10)*(4000000/4000.0)));}
   701     0035  300D               	movlw	13
   702     0036  00BE               	movwf	??_main+1
   703     0037  30FB               	movlw	251
   704     0038  00BD               	movwf	??_main
   705     0039                     u1097:
   706     0039  0BBD               	decfsz	??_main,f
   707     003A  2839               	goto	u1097
   708     003B  0BBE               	decfsz	??_main+1,f
   709     003C  2839               	goto	u1097
   710     003D  283E               	nop2
   711     003E  3001               	movlw	1
   712     003F  1283               	bcf	3,5	;RP0=0, select bank0
   713     0040  07C7               	addwf	main@i,f
   714     0041                     l1257:
   715     0041  3064               	movlw	100
   716     0042  0247               	subwf	main@i,w
   717     0043  1C03               	btfss	3,0
   718     0044  2832               	goto	l1259
   719     0045                     l1261:
   720                           
   721                           ;main.c: 62:             MAX7219_ClearDisplay();
   722     0045  233E               	fcall	_MAX7219_ClearDisplay
   723                           
   724                           ;main.c: 63:             Dio_Pin_Write (4,1);
   725     0046  1283               	bcf	3,5	;RP0=0, select bank0
   726     0047  01A7               	clrf	Dio_Pin_Write@state
   727     0048  0AA7               	incf	Dio_Pin_Write@state,f
   728     0049  3004               	movlw	4
   729     004A  22E7               	fcall	_Dio_Pin_Write
   730                           
   731                           ;main.c: 64:             Counter = 1 + ((uint32)89*Adc_ReadResult()/1024);
   732     004B  228E               	fcall	_Adc_ReadResult
   733     004C  1283               	bcf	3,5	;RP0=0, select bank0
   734     004D  0827               	movf	?_Adc_ReadResult,w
   735     004E  00BD               	movwf	??_main
   736     004F  0828               	movf	?_Adc_ReadResult+1,w
   737     0050  00BE               	movwf	??_main+1
   738     0051  01BF               	clrf	??_main+2
   739     0052  01C0               	clrf	??_main+3
   740     0053  0840               	movf	??_main+3,w
   741     0054  00B3               	movwf	___lmul@multiplier+3
   742     0055  083F               	movf	??_main+2,w
   743     0056  00B2               	movwf	___lmul@multiplier+2
   744     0057  083E               	movf	??_main+1,w
   745     0058  00B1               	movwf	___lmul@multiplier+1
   746     0059  083D               	movf	??_main,w
   747     005A  00B0               	movwf	___lmul@multiplier
   748     005B  3000               	movlw	0
   749     005C  00B7               	movwf	___lmul@multiplicand+3
   750     005D  3000               	movlw	0
   751     005E  00B6               	movwf	___lmul@multiplicand+2
   752     005F  3000               	movlw	0
   753     0060  00B5               	movwf	___lmul@multiplicand+1
   754     0061  3059               	movlw	89
   755     0062  00B4               	movwf	___lmul@multiplicand
   756     0063  21E2               	fcall	___lmul
   757     0064  1283               	bcf	3,5	;RP0=0, select bank0
   758     0065  0830               	movf	?___lmul,w
   759     0066  00C1               	movwf	??_main+4
   760     0067  0831               	movf	?___lmul+1,w
   761     0068  00C2               	movwf	??_main+5
   762     0069  0832               	movf	?___lmul+2,w
   763     006A  00C3               	movwf	??_main+6
   764     006B  0833               	movf	?___lmul+3,w
   765     006C  00C4               	movwf	??_main+7
   766     006D  300A               	movlw	10
   767     006E                     u1005:
   768     006E  1003               	clrc
   769     006F  0CC4               	rrf	??_main+7,f
   770     0070  0CC3               	rrf	??_main+6,f
   771     0071  0CC2               	rrf	??_main+5,f
   772     0072  0CC1               	rrf	??_main+4,f
   773     0073  3EFF               	addlw	-1
   774     0074  1D03               	skipz
   775     0075  286E               	goto	u1005
   776     0076  0841               	movf	??_main+4,w
   777     0077  3E01               	addlw	1
   778     0078  00C8               	movwf	_Counter
   779     0079  0842               	movf	??_main+5,w
   780     007A  1803               	skipnc
   781     007B  3E01               	addlw	1
   782     007C  3E00               	addlw	0
   783     007D  00C9               	movwf	_Counter+1
   784                           
   785                           ;main.c: 65:             for(;(Counter>0)&&DispenserOn;Counter--){
   786     007E  28FF               	goto	l1281
   787     007F                     l1283:
   788     007F  084A               	movf	_DispenserOn,w
   789     0080  1903               	btfsc	3,2
   790     0081  2903               	goto	l1285
   791                           
   792                           ;main.c: 66:                 _delay((unsigned long)((800)*(4000000/4000.0)));
   793     0082  3005               	movlw	5
   794     0083  00BF               	movwf	??_main+2
   795     0084  300F               	movlw	15
   796     0085  00BE               	movwf	??_main+1
   797     0086  30F1               	movlw	241
   798     0087  00BD               	movwf	??_main
   799     0088                     u1107:
   800     0088  0BBD               	decfsz	??_main,f
   801     0089  2888               	goto	u1107
   802     008A  0BBE               	decfsz	??_main+1,f
   803     008B  2888               	goto	u1107
   804     008C  0BBF               	decfsz	??_main+2,f
   805     008D  2888               	goto	u1107
   806                           
   807                           ;main.c: 67:                 MAX7219_DisplayData(0x04, MAX7219_No_Table[Counter/600]);
   808     008E  3058               	movlw	88
   809     008F  1283               	bcf	3,5	;RP0=0, select bank0
   810     0090  00A7               	movwf	___lwdiv@divisor
   811     0091  3002               	movlw	2
   812     0092  00A8               	movwf	___lwdiv@divisor+1
   813     0093  0849               	movf	_Counter+1,w
   814     0094  00AA               	movwf	___lwdiv@dividend+1
   815     0095  0848               	movf	_Counter,w
   816     0096  00A9               	movwf	___lwdiv@dividend
   817     0097  2222               	fcall	___lwdiv
   818     0098  1283               	bcf	3,5	;RP0=0, select bank0
   819     0099  0827               	movf	?___lwdiv,w
   820     009A  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   821     009B  0084               	movwf	4
   822     009C  239E               	fcall	stringdir
   823     009D  00B3               	movwf	MAX7219_DisplayData@character
   824     009E  3004               	movlw	4
   825     009F  2354               	fcall	_MAX7219_DisplayData
   826                           
   827                           ;main.c: 68:                 MAX7219_DisplayData(0x03, MAX7219_No_Table[(Counter/60)%10]
      +                          );
   828     00A0  300A               	movlw	10
   829     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   830     00A2  00AE               	movwf	___lwmod@divisor
   831     00A3  3000               	movlw	0
   832     00A4  00AF               	movwf	___lwmod@divisor+1
   833     00A5  303C               	movlw	60
   834     00A6  00A7               	movwf	___lwdiv@divisor
   835     00A7  3000               	movlw	0
   836     00A8  00A8               	movwf	___lwdiv@divisor+1
   837     00A9  0849               	movf	_Counter+1,w
   838     00AA  00AA               	movwf	___lwdiv@dividend+1
   839     00AB  0848               	movf	_Counter,w
   840     00AC  00A9               	movwf	___lwdiv@dividend
   841     00AD  2222               	fcall	___lwdiv
   842     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   843     00AF  0828               	movf	?___lwdiv+1,w
   844     00B0  00B1               	movwf	___lwmod@dividend+1
   845     00B1  0827               	movf	?___lwdiv,w
   846     00B2  00B0               	movwf	___lwmod@dividend
   847     00B3  225D               	fcall	___lwmod
   848     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   849     00B5  082E               	movf	?___lwmod,w
   850     00B6  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   851     00B7  0084               	movwf	4
   852     00B8  239E               	fcall	stringdir
   853     00B9  00B3               	movwf	MAX7219_DisplayData@character
   854     00BA  3003               	movlw	3
   855     00BB  2354               	fcall	_MAX7219_DisplayData
   856                           
   857                           ;main.c: 69:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[(Counter%60)/10]
      +                          );
   858     00BC  300A               	movlw	10
   859     00BD  1283               	bcf	3,5	;RP0=0, select bank0
   860     00BE  00A7               	movwf	___lwdiv@divisor
   861     00BF  3000               	movlw	0
   862     00C0  00A8               	movwf	___lwdiv@divisor+1
   863     00C1  0849               	movf	_Counter+1,w
   864     00C2  00B1               	movwf	___lwmod@dividend+1
   865     00C3  0848               	movf	_Counter,w
   866     00C4  00B0               	movwf	___lwmod@dividend
   867     00C5  303C               	movlw	60
   868     00C6  00AE               	movwf	___lwmod@divisor
   869     00C7  3000               	movlw	0
   870     00C8  00AF               	movwf	___lwmod@divisor+1
   871     00C9  225D               	fcall	___lwmod
   872     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   873     00CB  082F               	movf	?___lwmod+1,w
   874     00CC  00AA               	movwf	___lwdiv@dividend+1
   875     00CD  082E               	movf	?___lwmod,w
   876     00CE  00A9               	movwf	___lwdiv@dividend
   877     00CF  2222               	fcall	___lwdiv
   878     00D0  1283               	bcf	3,5	;RP0=0, select bank0
   879     00D1  0827               	movf	?___lwdiv,w
   880     00D2  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   881     00D3  0084               	movwf	4
   882     00D4  239E               	fcall	stringdir
   883     00D5  00B3               	movwf	MAX7219_DisplayData@character
   884     00D6  3002               	movlw	2
   885     00D7  2354               	fcall	_MAX7219_DisplayData
   886                           
   887                           ;main.c: 70:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   888     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   889     00D9  0849               	movf	_Counter+1,w
   890     00DA  00B1               	movwf	___lwmod@dividend+1
   891     00DB  0848               	movf	_Counter,w
   892     00DC  00B0               	movwf	___lwmod@dividend
   893     00DD  303C               	movlw	60
   894     00DE  00AE               	movwf	___lwmod@divisor
   895     00DF  3000               	movlw	0
   896     00E0  00AF               	movwf	___lwmod@divisor+1
   897     00E1  225D               	fcall	___lwmod
   898     00E2  1283               	bcf	3,5	;RP0=0, select bank0
   899     00E3  082F               	movf	?___lwmod+1,w
   900     00E4  00C6               	movwf	_main$776+1
   901     00E5  082E               	movf	?___lwmod,w
   902     00E6  00C5               	movwf	_main$776
   903                           
   904                           ;main.c: 70:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   905     00E7  300A               	movlw	10
   906     00E8  00AE               	movwf	___lwmod@divisor
   907     00E9  3000               	movlw	0
   908     00EA  00AF               	movwf	___lwmod@divisor+1
   909     00EB  0846               	movf	_main$776+1,w
   910     00EC  00B1               	movwf	___lwmod@dividend+1
   911     00ED  0845               	movf	_main$776,w
   912     00EE  00B0               	movwf	___lwmod@dividend
   913     00EF  225D               	fcall	___lwmod
   914     00F0  1283               	bcf	3,5	;RP0=0, select bank0
   915     00F1  082E               	movf	?___lwmod,w
   916     00F2  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   917     00F3  0084               	movwf	4
   918     00F4  239E               	fcall	stringdir
   919     00F5  00B3               	movwf	MAX7219_DisplayData@character
   920     00F6  3001               	movlw	1
   921     00F7  2354               	fcall	_MAX7219_DisplayData
   922                           
   923                           ;main.c: 71:             }
   924     00F8  3001               	movlw	1
   925     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   926     00FA  02C8               	subwf	_Counter,f
   927     00FB  3000               	movlw	0
   928     00FC  1C03               	skipc
   929     00FD  03C9               	decf	_Counter+1,f
   930     00FE  02C9               	subwf	_Counter+1,f
   931     00FF                     l1281:
   932     00FF  0848               	movf	_Counter,w
   933     0100  0449               	iorwf	_Counter+1,w
   934     0101  1D03               	btfss	3,2
   935     0102  287F               	goto	l1283
   936     0103                     l1285:
   937                           
   938                           ;main.c: 72:             Dio_Pin_Write (4, 0);
   939     0103  01A7               	clrf	Dio_Pin_Write@state
   940     0104  3004               	movlw	4
   941     0105  22E7               	fcall	_Dio_Pin_Write
   942                           
   943                           ;main.c: 73:             DispenserOn=0;
   944     0106  1283               	bcf	3,5	;RP0=0, select bank0
   945     0107  01CA               	clrf	_DispenserOn
   946                           
   947                           ;main.c: 74:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x05,0x1D); MAX7219
      +                          _DisplayData(0x04,0x47); MAX7219_DisplayData(0x03,0x47);;
   948     0108  233E               	fcall	_MAX7219_ClearDisplay
   949     0109  301D               	movlw	29
   950     010A  1283               	bcf	3,5	;RP0=0, select bank0
   951     010B  00B3               	movwf	MAX7219_DisplayData@character
   952     010C  3005               	movlw	5
   953     010D  2354               	fcall	_MAX7219_DisplayData
   954     010E  3047               	movlw	71
   955     010F  1283               	bcf	3,5	;RP0=0, select bank0
   956     0110  00B3               	movwf	MAX7219_DisplayData@character
   957     0111  3004               	movlw	4
   958     0112  2354               	fcall	_MAX7219_DisplayData
   959     0113  3047               	movlw	71
   960     0114  1283               	bcf	3,5	;RP0=0, select bank0
   961     0115  00B3               	movwf	MAX7219_DisplayData@character
   962     0116  3003               	movlw	3
   963     0117  2354               	fcall	_MAX7219_DisplayData
   964     0118  281E               	goto	l1297
   965     0119                     __end_of_main:
   966                           
   967                           	psect	text1
   968     025D                     __ptext1:	
   969 ;; *************** function ___lwmod *****************
   970 ;; Defined at:
   971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  divisor         2   14[BANK0 ] unsigned int 
   974 ;;  dividend        2   16[BANK0 ] unsigned int 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  counter         1   18[BANK0 ] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2   14[BANK0 ] unsigned int 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0
   986 ;;      Params:         0       4
   987 ;;      Locals:         0       1
   988 ;;      Temps:          0       0
   989 ;;      Totals:         0       5
   990 ;;Total ram usage:        5 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 2
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000     025D                     ___lwmod:	
  1001                           ;psect for function ___lwmod
  1002                           
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1006     025D  1283               	bcf	3,5	;RP0=0, select bank0
  1007     025E  082E               	movf	___lwmod@divisor,w
  1008     025F  042F               	iorwf	___lwmod@divisor+1,w
  1009     0260  1903               	btfsc	3,2
  1010     0261  2A89               	goto	l1223
  1011     0262  3001               	movlw	1
  1012     0263  00B2               	movwf	___lwmod@counter
  1013     0264                     l1213:
  1014     0264  1BAF               	btfsc	___lwmod@divisor+1,7
  1015     0265  2A70               	goto	l1215
  1016     0266  3001               	movlw	1
  1017     0267                     u915:
  1018     0267  1003               	clrc
  1019     0268  0DAE               	rlf	___lwmod@divisor,f
  1020     0269  0DAF               	rlf	___lwmod@divisor+1,f
  1021     026A  3EFF               	addlw	-1
  1022     026B  1D03               	skipz
  1023     026C  2A67               	goto	u915
  1024     026D  3001               	movlw	1
  1025     026E  07B2               	addwf	___lwmod@counter,f
  1026     026F  2A64               	goto	l1213
  1027     0270                     l1215:
  1028     0270  082F               	movf	___lwmod@divisor+1,w
  1029     0271  0231               	subwf	___lwmod@dividend+1,w
  1030     0272  1D03               	skipz
  1031     0273  2A76               	goto	u935
  1032     0274  082E               	movf	___lwmod@divisor,w
  1033     0275  0230               	subwf	___lwmod@dividend,w
  1034     0276                     u935:
  1035     0276  1C03               	skipc
  1036     0277  2A7E               	goto	l1219
  1037     0278  082E               	movf	___lwmod@divisor,w
  1038     0279  02B0               	subwf	___lwmod@dividend,f
  1039     027A  082F               	movf	___lwmod@divisor+1,w
  1040     027B  1C03               	skipc
  1041     027C  03B1               	decf	___lwmod@dividend+1,f
  1042     027D  02B1               	subwf	___lwmod@dividend+1,f
  1043     027E                     l1219:
  1044     027E  3001               	movlw	1
  1045     027F                     u945:
  1046     027F  1003               	clrc
  1047     0280  0CAF               	rrf	___lwmod@divisor+1,f
  1048     0281  0CAE               	rrf	___lwmod@divisor,f
  1049     0282  3EFF               	addlw	-1
  1050     0283  1D03               	skipz
  1051     0284  2A7F               	goto	u945
  1052     0285  3001               	movlw	1
  1053     0286  02B2               	subwf	___lwmod@counter,f
  1054     0287  1D03               	btfss	3,2
  1055     0288  2A70               	goto	l1215
  1056     0289                     l1223:
  1057     0289  0831               	movf	___lwmod@dividend+1,w
  1058     028A  00AF               	movwf	?___lwmod+1
  1059     028B  0830               	movf	___lwmod@dividend,w
  1060     028C  00AE               	movwf	?___lwmod
  1061     028D  0008               	return
  1062     028E                     __end_of___lwmod:
  1063                           
  1064                           	psect	text2
  1065     0222                     __ptext2:	
  1066 ;; *************** function ___lwdiv *****************
  1067 ;; Defined at:
  1068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  divisor         2    7[BANK0 ] unsigned int 
  1071 ;;  dividend        2    9[BANK0 ] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  quotient        2   11[BANK0 ] unsigned int 
  1074 ;;  counter         1   13[BANK0 ] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  2    7[BANK0 ] unsigned int 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0
  1084 ;;      Params:         0       4
  1085 ;;      Locals:         0       3
  1086 ;;      Temps:          0       0
  1087 ;;      Totals:         0       7
  1088 ;;Total ram usage:        7 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 2
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098     0222                     ___lwdiv:	
  1099                           ;psect for function ___lwdiv
  1100                           
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1104     0222  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0223  01AB               	clrf	___lwdiv@quotient
  1106     0224  01AC               	clrf	___lwdiv@quotient+1
  1107     0225  0827               	movf	___lwdiv@divisor,w
  1108     0226  0428               	iorwf	___lwdiv@divisor+1,w
  1109     0227  1903               	btfsc	3,2
  1110     0228  2A58               	goto	l1201
  1111     0229  3001               	movlw	1
  1112     022A  00AD               	movwf	___lwdiv@counter
  1113     022B                     l1189:
  1114     022B  1BA8               	btfsc	___lwdiv@divisor+1,7
  1115     022C  2A37               	goto	l1191
  1116     022D  3001               	movlw	1
  1117     022E                     u845:
  1118     022E  1003               	clrc
  1119     022F  0DA7               	rlf	___lwdiv@divisor,f
  1120     0230  0DA8               	rlf	___lwdiv@divisor+1,f
  1121     0231  3EFF               	addlw	-1
  1122     0232  1D03               	skipz
  1123     0233  2A2E               	goto	u845
  1124     0234  3001               	movlw	1
  1125     0235  07AD               	addwf	___lwdiv@counter,f
  1126     0236  2A2B               	goto	l1189
  1127     0237                     l1191:
  1128     0237  3001               	movlw	1
  1129     0238                     u865:
  1130     0238  1003               	clrc
  1131     0239  0DAB               	rlf	___lwdiv@quotient,f
  1132     023A  0DAC               	rlf	___lwdiv@quotient+1,f
  1133     023B  3EFF               	addlw	-1
  1134     023C  1D03               	skipz
  1135     023D  2A38               	goto	u865
  1136     023E  0828               	movf	___lwdiv@divisor+1,w
  1137     023F  022A               	subwf	___lwdiv@dividend+1,w
  1138     0240  1D03               	skipz
  1139     0241  2A44               	goto	u875
  1140     0242  0827               	movf	___lwdiv@divisor,w
  1141     0243  0229               	subwf	___lwdiv@dividend,w
  1142     0244                     u875:
  1143     0244  1C03               	skipc
  1144     0245  2A4D               	goto	l1197
  1145     0246  0827               	movf	___lwdiv@divisor,w
  1146     0247  02A9               	subwf	___lwdiv@dividend,f
  1147     0248  0828               	movf	___lwdiv@divisor+1,w
  1148     0249  1C03               	skipc
  1149     024A  03AA               	decf	___lwdiv@dividend+1,f
  1150     024B  02AA               	subwf	___lwdiv@dividend+1,f
  1151     024C  142B               	bsf	___lwdiv@quotient,0
  1152     024D                     l1197:
  1153     024D  3001               	movlw	1
  1154     024E                     u885:
  1155     024E  1003               	clrc
  1156     024F  0CA8               	rrf	___lwdiv@divisor+1,f
  1157     0250  0CA7               	rrf	___lwdiv@divisor,f
  1158     0251  3EFF               	addlw	-1
  1159     0252  1D03               	skipz
  1160     0253  2A4E               	goto	u885
  1161     0254  3001               	movlw	1
  1162     0255  02AD               	subwf	___lwdiv@counter,f
  1163     0256  1D03               	btfss	3,2
  1164     0257  2A37               	goto	l1191
  1165     0258                     l1201:
  1166     0258  082C               	movf	___lwdiv@quotient+1,w
  1167     0259  00A8               	movwf	?___lwdiv+1
  1168     025A  082B               	movf	___lwdiv@quotient,w
  1169     025B  00A7               	movwf	?___lwdiv
  1170     025C  0008               	return
  1171     025D                     __end_of___lwdiv:
  1172                           
  1173                           	psect	text3
  1174     01E2                     __ptext3:	
  1175 ;; *************** function ___lmul *****************
  1176 ;; Defined at:
  1177 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  multiplier      4   16[BANK0 ] unsigned long 
  1180 ;;  multiplicand    4   20[BANK0 ] unsigned long 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  product         4   25[BANK0 ] unsigned long 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  4   16[BANK0 ] unsigned long 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0
  1192 ;;      Params:         0       8
  1193 ;;      Locals:         0       4
  1194 ;;      Temps:          0       1
  1195 ;;      Totals:         0      13
  1196 ;;Total ram usage:       13 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 2
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206     01E2                     ___lmul:	
  1207                           ;psect for function ___lmul
  1208                           
  1209                           
  1210                           ;incstack = 0
  1211                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1212     01E2  3000               	movlw	0
  1213     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1214     01E4  00BC               	movwf	___lmul@product+3
  1215     01E5  3000               	movlw	0
  1216     01E6  00BB               	movwf	___lmul@product+2
  1217     01E7  3000               	movlw	0
  1218     01E8  00BA               	movwf	___lmul@product+1
  1219     01E9  3000               	movlw	0
  1220     01EA  00B9               	movwf	___lmul@product
  1221     01EB                     l1167:
  1222     01EB  1C30               	btfss	___lmul@multiplier,0
  1223     01EC  2A01               	goto	l1171
  1224     01ED  0834               	movf	___lmul@multiplicand,w
  1225     01EE  07B9               	addwf	___lmul@product,f
  1226     01EF  0835               	movf	___lmul@multiplicand+1,w
  1227     01F0  1103               	clrz
  1228     01F1  1803               	skipnc
  1229     01F2  3E01               	addlw	1
  1230     01F3  1D03               	btfss	3,2
  1231     01F4  07BA               	addwf	___lmul@product+1,f
  1232     01F5  0836               	movf	___lmul@multiplicand+2,w
  1233     01F6  1103               	clrz
  1234     01F7  1803               	skipnc
  1235     01F8  3E01               	addlw	1
  1236     01F9  1D03               	btfss	3,2
  1237     01FA  07BB               	addwf	___lmul@product+2,f
  1238     01FB  0837               	movf	___lmul@multiplicand+3,w
  1239     01FC  1103               	clrz
  1240     01FD  1803               	skipnc
  1241     01FE  3E01               	addlw	1
  1242     01FF  1D03               	btfss	3,2
  1243     0200  07BC               	addwf	___lmul@product+3,f
  1244     0201                     l1171:
  1245     0201  3001               	movlw	1
  1246     0202  00B8               	movwf	??___lmul
  1247     0203                     u805:
  1248     0203  1003               	clrc
  1249     0204  0DB4               	rlf	___lmul@multiplicand,f
  1250     0205  0DB5               	rlf	___lmul@multiplicand+1,f
  1251     0206  0DB6               	rlf	___lmul@multiplicand+2,f
  1252     0207  0DB7               	rlf	___lmul@multiplicand+3,f
  1253     0208  0BB8               	decfsz	??___lmul,f
  1254     0209  2A03               	goto	u805
  1255     020A  3001               	movlw	1
  1256     020B                     u815:
  1257     020B  1003               	clrc
  1258     020C  0CB3               	rrf	___lmul@multiplier+3,f
  1259     020D  0CB2               	rrf	___lmul@multiplier+2,f
  1260     020E  0CB1               	rrf	___lmul@multiplier+1,f
  1261     020F  0CB0               	rrf	___lmul@multiplier,f
  1262     0210  3EFF               	addlw	-1
  1263     0211  1D03               	skipz
  1264     0212  2A0B               	goto	u815
  1265     0213  0833               	movf	___lmul@multiplier+3,w
  1266     0214  0432               	iorwf	___lmul@multiplier+2,w
  1267     0215  0431               	iorwf	___lmul@multiplier+1,w
  1268     0216  0430               	iorwf	___lmul@multiplier,w
  1269     0217  1D03               	skipz
  1270     0218  29EB               	goto	l1167
  1271     0219  083C               	movf	___lmul@product+3,w
  1272     021A  00B3               	movwf	?___lmul+3
  1273     021B  083B               	movf	___lmul@product+2,w
  1274     021C  00B2               	movwf	?___lmul+2
  1275     021D  083A               	movf	___lmul@product+1,w
  1276     021E  00B1               	movwf	?___lmul+1
  1277     021F  0839               	movf	___lmul@product,w
  1278     0220  00B0               	movwf	?___lmul
  1279     0221  0008               	return
  1280     0222                     __end_of___lmul:
  1281                           
  1282                           	psect	text4
  1283     0326                     __ptext4:	
  1284 ;; *************** function _SPI_Init *****************
  1285 ;; Defined at:
  1286 ;;		line 12 in file "SERVICE/scr/Spi.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0
  1300 ;;      Params:         0       0
  1301 ;;      Locals:         0       0
  1302 ;;      Temps:          0       0
  1303 ;;      Totals:         0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 3
  1307 ;; This function calls:
  1308 ;;		_Dio_Config
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     0326                     _SPI_Init:	
  1315                           ;psect for function _SPI_Init
  1316                           
  1317                           
  1318                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1322     0326  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0327  01A7               	clrf	Dio_Config@direction
  1324     0328  0AA7               	incf	Dio_Config@direction,f
  1325     0329  01A8               	clrf	Dio_Config@state
  1326     032A  0AA8               	incf	Dio_Config@state,f
  1327     032B  01A9               	clrf	Dio_Config@pullType
  1328     032C  3001               	movlw	1
  1329     032D  2119               	fcall	_Dio_Config
  1330                           
  1331                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
  1332     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1333     032F  01A7               	clrf	Dio_Config@direction
  1334     0330  0AA7               	incf	Dio_Config@direction,f
  1335     0331  01A8               	clrf	Dio_Config@state
  1336     0332  01A9               	clrf	Dio_Config@pullType
  1337     0333  3002               	movlw	2
  1338     0334  2119               	fcall	_Dio_Config
  1339                           
  1340                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
  1341     0335  1283               	bcf	3,5	;RP0=0, select bank0
  1342     0336  01A7               	clrf	Dio_Config@direction
  1343     0337  0AA7               	incf	Dio_Config@direction,f
  1344     0338  01A8               	clrf	Dio_Config@state
  1345     0339  0AA8               	incf	Dio_Config@state,f
  1346     033A  01A9               	clrf	Dio_Config@pullType
  1347     033B  3005               	movlw	5
  1348     033C  2119               	fcall	_Dio_Config
  1349     033D  0008               	return
  1350     033E                     __end_of_SPI_Init:
  1351                           
  1352                           	psect	text5
  1353     0307                     __ptext5:	
  1354 ;; *************** function _MAX7219_Init *****************
  1355 ;; Defined at:
  1356 ;;		line 8 in file "HAL/scr/max7219.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0
  1370 ;;      Params:         0       0
  1371 ;;      Locals:         0       0
  1372 ;;      Temps:          0       0
  1373 ;;      Totals:         0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 4
  1377 ;; This function calls:
  1378 ;;		_SPI_Send_16bit
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     0307                     _MAX7219_Init:	
  1385                           ;psect for function _MAX7219_Init
  1386                           
  1387                           
  1388                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
  1389                           
  1390                           ;incstack = 0
  1391                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1392     0307  3000               	movlw	0
  1393     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0309  00AA               	movwf	SPI_Send_16bit@data
  1395     030A  3009               	movlw	9
  1396     030B  00AB               	movwf	SPI_Send_16bit@data+1
  1397     030C  218F               	fcall	_SPI_Send_16bit
  1398                           
  1399                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
  1400     030D  300F               	movlw	15
  1401     030E  1283               	bcf	3,5	;RP0=0, select bank0
  1402     030F  00AA               	movwf	SPI_Send_16bit@data
  1403     0310  300A               	movlw	10
  1404     0311  00AB               	movwf	SPI_Send_16bit@data+1
  1405     0312  218F               	fcall	_SPI_Send_16bit
  1406                           
  1407                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
  1408     0313  30F7               	movlw	247
  1409     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1410     0315  00AA               	movwf	SPI_Send_16bit@data
  1411     0316  30FB               	movlw	251
  1412     0317  00AB               	movwf	SPI_Send_16bit@data+1
  1413     0318  218F               	fcall	_SPI_Send_16bit
  1414                           
  1415                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
  1416     0319  3001               	movlw	1
  1417     031A  1283               	bcf	3,5	;RP0=0, select bank0
  1418     031B  00AA               	movwf	SPI_Send_16bit@data
  1419     031C  300C               	movlw	12
  1420     031D  00AB               	movwf	SPI_Send_16bit@data+1
  1421     031E  218F               	fcall	_SPI_Send_16bit
  1422                           
  1423                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
  1424     031F  3000               	movlw	0
  1425     0320  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0321  00AA               	movwf	SPI_Send_16bit@data
  1427     0322  300F               	movlw	15
  1428     0323  00AB               	movwf	SPI_Send_16bit@data+1
  1429     0324  218F               	fcall	_SPI_Send_16bit
  1430     0325  0008               	return
  1431     0326                     __end_of_MAX7219_Init:
  1432                           
  1433                           	psect	text6
  1434     0354                     __ptext6:	
  1435 ;; *************** function _MAX7219_DisplayData *****************
  1436 ;; Defined at:
  1437 ;;		line 26 in file "HAL/scr/max7219.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  digit           1    wreg     unsigned char 
  1440 ;;  character       1   19[BANK0 ] unsigned char 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  digit           1   24[BANK0 ] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0
  1452 ;;      Params:         0       1
  1453 ;;      Locals:         0       1
  1454 ;;      Temps:          0       4
  1455 ;;      Totals:         0       6
  1456 ;;Total ram usage:        6 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 4
  1459 ;; This function calls:
  1460 ;;		_SPI_Send_16bit
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466     0354                     _MAX7219_DisplayData:	
  1467                           ;psect for function _MAX7219_DisplayData
  1468                           
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1472                           ;MAX7219_DisplayData@digit stored from wreg
  1473     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1474     0355  00B8               	movwf	MAX7219_DisplayData@digit
  1475                           
  1476                           ;HAL/scr/max7219.c: 27:     SPI_Send_16bit((digit) << 8 | character);
  1477     0356  0833               	movf	MAX7219_DisplayData@character,w
  1478     0357  00B4               	movwf	??_MAX7219_DisplayData
  1479     0358  01B5               	clrf	??_MAX7219_DisplayData+1
  1480     0359  0838               	movf	MAX7219_DisplayData@digit,w
  1481     035A  00B6               	movwf	??_MAX7219_DisplayData+2
  1482     035B  01B7               	clrf	??_MAX7219_DisplayData+3
  1483     035C  0836               	movf	??_MAX7219_DisplayData+2,w
  1484     035D  00B7               	movwf	??_MAX7219_DisplayData+3
  1485     035E  01B6               	clrf	??_MAX7219_DisplayData+2
  1486     035F  0834               	movf	??_MAX7219_DisplayData,w
  1487     0360  0436               	iorwf	??_MAX7219_DisplayData+2,w
  1488     0361  00AA               	movwf	SPI_Send_16bit@data
  1489     0362  0835               	movf	??_MAX7219_DisplayData+1,w
  1490     0363  0437               	iorwf	??_MAX7219_DisplayData+3,w
  1491     0364  00AB               	movwf	SPI_Send_16bit@data+1
  1492     0365  218F               	fcall	_SPI_Send_16bit
  1493     0366  0008               	return
  1494     0367                     __end_of_MAX7219_DisplayData:
  1495                           
  1496                           	psect	text7
  1497     033E                     __ptext7:	
  1498 ;; *************** function _MAX7219_ClearDisplay *****************
  1499 ;; Defined at:
  1500 ;;		line 19 in file "HAL/scr/max7219.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  i               1   21[BANK0 ] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0
  1514 ;;      Params:         0       0
  1515 ;;      Locals:         0       1
  1516 ;;      Temps:          0       2
  1517 ;;      Totals:         0       3
  1518 ;;Total ram usage:        3 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 4
  1521 ;; This function calls:
  1522 ;;		_SPI_Send_16bit
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528     033E                     _MAX7219_ClearDisplay:	
  1529                           ;psect for function _MAX7219_ClearDisplay
  1530                           
  1531                           
  1532                           ;HAL/scr/max7219.c: 20:     for (uint8_t i = 0x01; i <= 0x08; i++) {
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _MAX7219_ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1536     033E  3001               	movlw	1
  1537     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1538     0340  00B5               	movwf	MAX7219_ClearDisplay@i
  1539     0341                     l1087:
  1540                           
  1541                           ;HAL/scr/max7219.c: 21:         SPI_Send_16bit((i << 8) );
  1542     0341  0835               	movf	MAX7219_ClearDisplay@i,w
  1543     0342  00B3               	movwf	??_MAX7219_ClearDisplay
  1544     0343  01B4               	clrf	??_MAX7219_ClearDisplay+1
  1545     0344  0833               	movf	??_MAX7219_ClearDisplay,w
  1546     0345  00B4               	movwf	??_MAX7219_ClearDisplay+1
  1547     0346  01B3               	clrf	??_MAX7219_ClearDisplay
  1548     0347  0833               	movf	??_MAX7219_ClearDisplay,w
  1549     0348  00AA               	movwf	SPI_Send_16bit@data
  1550     0349  0834               	movf	??_MAX7219_ClearDisplay+1,w
  1551     034A  00AB               	movwf	SPI_Send_16bit@data+1
  1552     034B  218F               	fcall	_SPI_Send_16bit
  1553                           
  1554                           ;HAL/scr/max7219.c: 22:     }
  1555     034C  3001               	movlw	1
  1556     034D  1283               	bcf	3,5	;RP0=0, select bank0
  1557     034E  07B5               	addwf	MAX7219_ClearDisplay@i,f
  1558     034F  3009               	movlw	9
  1559     0350  0235               	subwf	MAX7219_ClearDisplay@i,w
  1560     0351  1803               	btfsc	3,0
  1561     0352  0008               	return
  1562     0353  2B41               	goto	l1087
  1563     0354                     __end_of_MAX7219_ClearDisplay:
  1564                           
  1565                           	psect	text8
  1566     018F                     __ptext8:	
  1567 ;; *************** function _SPI_Send_16bit *****************
  1568 ;; Defined at:
  1569 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  data            2   10[BANK0 ] unsigned short 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  bit             2   17[BANK0 ] int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0
  1583 ;;      Params:         0       2
  1584 ;;      Locals:         0       2
  1585 ;;      Temps:          0       5
  1586 ;;      Totals:         0       9
  1587 ;;Total ram usage:        9 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 3
  1590 ;; This function calls:
  1591 ;;		_Dio_Pin_Write
  1592 ;; This function is called by:
  1593 ;;		_MAX7219_Init
  1594 ;;		_MAX7219_ClearDisplay
  1595 ;;		_MAX7219_DisplayData
  1596 ;;		_MAX7219_Shutdown
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600     018F                     _SPI_Send_16bit:	
  1601                           ;psect for function _SPI_Send_16bit
  1602                           
  1603                           
  1604                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1608     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0190  01A7               	clrf	Dio_Pin_Write@state
  1610     0191  3005               	movlw	5
  1611     0192  22E7               	fcall	_Dio_Pin_Write
  1612                           
  1613                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
  1614     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1615     0194  01B1               	clrf	SPI_Send_16bit@bit
  1616     0195  01B2               	clrf	SPI_Send_16bit@bit+1
  1617     0196                     l1037:
  1618                           
  1619                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
  1620     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0197  0831               	movf	SPI_Send_16bit@bit,w
  1622     0198  3C0F               	sublw	15
  1623     0199  00AC               	movwf	??_SPI_Send_16bit
  1624     019A  0AAC               	incf	??_SPI_Send_16bit,f
  1625     019B  3001               	movlw	1
  1626     019C  00AD               	movwf	??_SPI_Send_16bit+1
  1627     019D  3000               	movlw	0
  1628     019E  00AE               	movwf	??_SPI_Send_16bit+2
  1629     019F  29A3               	goto	u584
  1630     01A0                     u585:
  1631     01A0  1003               	clrc
  1632     01A1  0DAD               	rlf	??_SPI_Send_16bit+1,f
  1633     01A2  0DAE               	rlf	??_SPI_Send_16bit+2,f
  1634     01A3                     u584:
  1635     01A3  0BAC               	decfsz	??_SPI_Send_16bit,f
  1636     01A4  29A0               	goto	u585
  1637     01A5  082A               	movf	SPI_Send_16bit@data,w
  1638     01A6  052D               	andwf	??_SPI_Send_16bit+1,w
  1639     01A7  00AF               	movwf	??_SPI_Send_16bit+3
  1640     01A8  082B               	movf	SPI_Send_16bit@data+1,w
  1641     01A9  052E               	andwf	??_SPI_Send_16bit+2,w
  1642     01AA  00B0               	movwf	??_SPI_Send_16bit+4
  1643     01AB  082F               	movf	??_SPI_Send_16bit+3,w
  1644     01AC  0430               	iorwf	??_SPI_Send_16bit+4,w
  1645     01AD  1903               	btfsc	3,2
  1646     01AE  29B2               	goto	l1041
  1647                           
  1648                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
  1649     01AF  01A7               	clrf	Dio_Pin_Write@state
  1650     01B0  0AA7               	incf	Dio_Pin_Write@state,f
  1651     01B1  29B3               	goto	L1
  1652     01B2                     l1041:	
  1653                           ;SERVICE/scr/Spi.c: 45:         } else {
  1654                           
  1655                           
  1656                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
  1657     01B2  01A7               	clrf	Dio_Pin_Write@state
  1658     01B3                     L1:
  1659     01B3  3001               	movlw	1
  1660     01B4  22E7               	fcall	_Dio_Pin_Write
  1661                           
  1662                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
  1663     01B5  3010               	movlw	16
  1664     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1665     01B7  00AC               	movwf	??_SPI_Send_16bit
  1666     01B8                     u1117:
  1667     01B8  0BAC               	decfsz	??_SPI_Send_16bit,f
  1668     01B9  29B8               	goto	u1117
  1669     01BA  0000               	nop
  1670     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1671     01BC  01A7               	clrf	Dio_Pin_Write@state
  1672     01BD  0AA7               	incf	Dio_Pin_Write@state,f
  1673     01BE  3002               	movlw	2
  1674     01BF  22E7               	fcall	_Dio_Pin_Write
  1675     01C0  3010               	movlw	16
  1676     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1677     01C2  00AC               	movwf	??_SPI_Send_16bit
  1678     01C3                     u1127:
  1679     01C3  0BAC               	decfsz	??_SPI_Send_16bit,f
  1680     01C4  29C3               	goto	u1127
  1681     01C5  0000               	nop
  1682     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1683     01C7  01A7               	clrf	Dio_Pin_Write@state
  1684     01C8  3002               	movlw	2
  1685     01C9  22E7               	fcall	_Dio_Pin_Write
  1686                           
  1687                           ;SERVICE/scr/Spi.c: 50:     }
  1688     01CA  3001               	movlw	1
  1689     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1690     01CC  07B1               	addwf	SPI_Send_16bit@bit,f
  1691     01CD  1803               	skipnc
  1692     01CE  0AB2               	incf	SPI_Send_16bit@bit+1,f
  1693     01CF  3000               	movlw	0
  1694     01D0  07B2               	addwf	SPI_Send_16bit@bit+1,f
  1695     01D1  0832               	movf	SPI_Send_16bit@bit+1,w
  1696     01D2  3A80               	xorlw	128
  1697     01D3  00DF               	movwf	95
  1698     01D4  3080               	movlw	128
  1699     01D5  025F               	subwf	95,w
  1700     01D6  1D03               	skipz
  1701     01D7  29DA               	goto	u605
  1702     01D8  3010               	movlw	16
  1703     01D9  0231               	subwf	SPI_Send_16bit@bit,w
  1704     01DA                     u605:
  1705     01DA  1C03               	skipc
  1706     01DB  2996               	goto	l1037
  1707                           
  1708                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
  1709     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1710     01DD  01A7               	clrf	Dio_Pin_Write@state
  1711     01DE  0AA7               	incf	Dio_Pin_Write@state,f
  1712     01DF  3005               	movlw	5
  1713     01E0  22E7               	fcall	_Dio_Pin_Write
  1714     01E1  0008               	return
  1715     01E2                     __end_of_SPI_Send_16bit:
  1716                           
  1717                           	psect	text9
  1718     02E7                     __ptext9:	
  1719 ;; *************** function _Dio_Pin_Write *****************
  1720 ;; Defined at:
  1721 ;;		line 30 in file "MCAL/scr/Dio.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  pinNumber       1    wreg     unsigned char 
  1724 ;;  state           1    7[BANK0 ] unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  pinNumber       1    9[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0
  1736 ;;      Params:         0       1
  1737 ;;      Locals:         0       1
  1738 ;;      Temps:          0       1
  1739 ;;      Totals:         0       3
  1740 ;;Total ram usage:        3 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 2
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_SPI_Send_16bit
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     02E7                     _Dio_Pin_Write:	
  1752                           ;psect for function _Dio_Pin_Write
  1753                           
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
  1757                           ;Dio_Pin_Write@pinNumber stored from wreg
  1758     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1759     02E8  00A9               	movwf	Dio_Pin_Write@pinNumber
  1760                           
  1761                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1762     02E9  0327               	decf	Dio_Pin_Write@state,w
  1763     02EA  1D03               	btfss	3,2
  1764     02EB  2AF8               	goto	l1025
  1765                           
  1766                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1767     02EC  3001               	movlw	1
  1768     02ED  00A8               	movwf	??_Dio_Pin_Write
  1769     02EE  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1770     02EF  2AF2               	goto	u564
  1771     02F0                     u565:
  1772     02F0  1003               	clrc
  1773     02F1  0DA8               	rlf	??_Dio_Pin_Write,f
  1774     02F2                     u564:
  1775     02F2  3EFF               	addlw	-1
  1776     02F3  1D03               	skipz
  1777     02F4  2AF0               	goto	u565
  1778     02F5  0828               	movf	??_Dio_Pin_Write,w
  1779     02F6  04CB               	iorwf	_DIO_State,f
  1780                           
  1781                           ;MCAL/scr/Dio.c: 34:     }
  1782     02F7  2B04               	goto	l1027
  1783     02F8                     l1025:
  1784                           
  1785                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1786     02F8  3001               	movlw	1
  1787     02F9  00A8               	movwf	??_Dio_Pin_Write
  1788     02FA  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1789     02FB  2AFE               	goto	u574
  1790     02FC                     u575:
  1791     02FC  1003               	clrc
  1792     02FD  0DA8               	rlf	??_Dio_Pin_Write,f
  1793     02FE                     u574:
  1794     02FE  3EFF               	addlw	-1
  1795     02FF  1D03               	skipz
  1796     0300  2AFC               	goto	u575
  1797     0301  0828               	movf	??_Dio_Pin_Write,w
  1798     0302  3AFF               	xorlw	255
  1799     0303  05CB               	andwf	_DIO_State,f
  1800     0304                     l1027:
  1801                           
  1802                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1803     0304  084B               	movf	_DIO_State,w
  1804     0305  0085               	movwf	5	;volatile
  1805     0306  0008               	return
  1806     0307                     __end_of_Dio_Pin_Write:
  1807                           
  1808                           	psect	text10
  1809     0367                     __ptext10:	
  1810 ;; *************** function _Gpio_Init *****************
  1811 ;; Defined at:
  1812 ;;		line 23 in file "MCAL/scr/gpio.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0
  1826 ;;      Params:         0       0
  1827 ;;      Locals:         0       0
  1828 ;;      Temps:          0       0
  1829 ;;      Totals:         0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 2
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     0367                     _Gpio_Init:	
  1841                           ;psect for function _Gpio_Init
  1842                           
  1843                           
  1844                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  1848     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1849     0368  141F               	bsf	31,0	;volatile
  1850                           
  1851                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  1852     0369  1405               	bsf	5,0	;volatile
  1853                           
  1854                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  1855     036A  30FD               	movlw	253
  1856     036B  059F               	andwf	31,f	;volatile
  1857                           
  1858                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  1859     036C  30FD               	movlw	253
  1860     036D  0585               	andwf	5,f	;volatile
  1861                           
  1862                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  1863     036E  30FB               	movlw	251
  1864     036F  059F               	andwf	31,f	;volatile
  1865                           
  1866                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  1867     0370  30FB               	movlw	251
  1868     0371  0585               	andwf	5,f	;volatile
  1869                           
  1870                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  1871     0372  1585               	bsf	5,3	;volatile
  1872                           
  1873                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  1874     0373  30F7               	movlw	247
  1875     0374  059F               	andwf	31,f	;volatile
  1876                           
  1877                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  1878     0375  30EF               	movlw	239
  1879     0376  0585               	andwf	5,f	;volatile
  1880                           
  1881                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  1882     0377  30DF               	movlw	223
  1883     0378  0585               	andwf	5,f	;volatile
  1884     0379  0008               	return
  1885     037A                     __end_of_Gpio_Init:
  1886                           
  1887                           	psect	text11
  1888     03AE                     __ptext11:	
  1889 ;; *************** function _Dio_init *****************
  1890 ;; Defined at:
  1891 ;;		line 60 in file "MCAL/scr/Dio.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0
  1905 ;;      Params:         0       0
  1906 ;;      Locals:         0       0
  1907 ;;      Temps:          0       0
  1908 ;;      Totals:         0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 3
  1912 ;; This function calls:
  1913 ;;		_Dio_Config
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     03AE                     _Dio_init:	
  1920                           ;psect for function _Dio_init
  1921                           
  1922                           
  1923                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1927     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1928     03AF  01A7               	clrf	Dio_Config@direction
  1929     03B0  01A8               	clrf	Dio_Config@state
  1930     03B1  01A9               	clrf	Dio_Config@pullType
  1931     03B2  0AA9               	incf	Dio_Config@pullType,f
  1932     03B3  3003               	movlw	3
  1933     03B4  2119               	fcall	_Dio_Config
  1934                           
  1935                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  1936     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1937     03B6  01A7               	clrf	Dio_Config@direction
  1938     03B7  0AA7               	incf	Dio_Config@direction,f
  1939     03B8  01A8               	clrf	Dio_Config@state
  1940     03B9  01A9               	clrf	Dio_Config@pullType
  1941     03BA  3004               	movlw	4
  1942     03BB  2119               	fcall	_Dio_Config
  1943     03BC  0008               	return
  1944     03BD                     __end_of_Dio_init:
  1945                           
  1946                           	psect	text12
  1947     0119                     __ptext12:	
  1948 ;; *************** function _Dio_Config *****************
  1949 ;; Defined at:
  1950 ;;		line 41 in file "MCAL/scr/Dio.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  pinNumber       1    wreg     unsigned char 
  1953 ;;  direction       1    7[BANK0 ] unsigned char 
  1954 ;;  state           1    8[BANK0 ] unsigned char 
  1955 ;;  pullType        1    9[BANK0 ] unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  pinNumber       1   16[BANK0 ] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0, btemp+1
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0
  1967 ;;      Params:         0       3
  1968 ;;      Locals:         0       3
  1969 ;;      Temps:          0       4
  1970 ;;      Totals:         0      10
  1971 ;;Total ram usage:       10 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 2
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_Dio_init
  1978 ;;		_SPI_Init
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982     0119                     _Dio_Config:	
  1983                           ;psect for function _Dio_Config
  1984                           
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  1988                           ;Dio_Config@pinNumber stored from wreg
  1989     0119  1283               	bcf	3,5	;RP0=0, select bank0
  1990     011A  00B0               	movwf	Dio_Config@pinNumber
  1991                           
  1992                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  1993     011B  0827               	movf	Dio_Config@direction,w
  1994     011C  1903               	btfsc	3,2
  1995     011D  2932               	goto	l1059
  1996     011E  3001               	movlw	1
  1997     011F  00AA               	movwf	??_Dio_Config
  1998     0120  0A30               	incf	Dio_Config@pinNumber,w
  1999     0121  2924               	goto	u624
  2000     0122                     u625:
  2001     0122  1003               	clrc
  2002     0123  0DAA               	rlf	??_Dio_Config,f
  2003     0124                     u624:
  2004     0124  3EFF               	addlw	-1
  2005     0125  1D03               	skipz
  2006     0126  2922               	goto	u625
  2007     0127  082A               	movf	??_Dio_Config,w
  2008     0128  3AFF               	xorlw	255
  2009     0129  1683               	bsf	3,5	;RP0=1, select bank1
  2010     012A  0505               	andwf	5,w	;volatile
  2011     012B  1283               	bcf	3,5	;RP0=0, select bank0
  2012     012C  00AB               	movwf	??_Dio_Config+1
  2013     012D  01AC               	clrf	??_Dio_Config+2
  2014     012E  082B               	movf	??_Dio_Config+1,w
  2015     012F  00AE               	movwf	_Dio_Config$71
  2016     0130  082C               	movf	??_Dio_Config+2,w
  2017     0131  2948               	goto	L2
  2018     0132                     l1059:
  2019     0132  0A30               	incf	Dio_Config@pinNumber,w
  2020     0133  00DF               	movwf	95
  2021     0134  3001               	movlw	1
  2022     0135  00AA               	movwf	??_Dio_Config
  2023     0136  3000               	movlw	0
  2024     0137  00AB               	movwf	??_Dio_Config+1
  2025     0138  293C               	goto	u634
  2026     0139                     u635:
  2027     0139  1003               	clrc
  2028     013A  0DAA               	rlf	??_Dio_Config,f
  2029     013B  0DAB               	rlf	??_Dio_Config+1,f
  2030     013C                     u634:
  2031     013C  0BDF               	decfsz	95,f
  2032     013D  2939               	goto	u635
  2033     013E  082A               	movf	??_Dio_Config,w
  2034     013F  1683               	bsf	3,5	;RP0=1, select bank1
  2035     0140  0405               	iorwf	5,w	;volatile
  2036     0141  1283               	bcf	3,5	;RP0=0, select bank0
  2037     0142  00AC               	movwf	??_Dio_Config+2
  2038     0143  082B               	movf	??_Dio_Config+1,w
  2039     0144  00AD               	movwf	??_Dio_Config+3
  2040     0145  082C               	movf	??_Dio_Config+2,w
  2041     0146  00AE               	movwf	_Dio_Config$71
  2042     0147  082D               	movf	??_Dio_Config+3,w
  2043     0148                     L2:
  2044     0148  00AF               	movwf	_Dio_Config$71+1
  2045     0149  082E               	movf	_Dio_Config$71,w
  2046     014A  1683               	bsf	3,5	;RP0=1, select bank1
  2047     014B  0085               	movwf	5	;volatile
  2048                           
  2049                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  2050     014C  1283               	bcf	3,5	;RP0=0, select bank0
  2051     014D  0327               	decf	Dio_Config@direction,w
  2052     014E  1D03               	btfss	3,2
  2053     014F  296D               	goto	l1073
  2054                           
  2055                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  2056     0150  0328               	decf	Dio_Config@state,w
  2057     0151  1D03               	btfss	3,2
  2058     0152  295F               	goto	l1069
  2059                           
  2060                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  2061     0153  3001               	movlw	1
  2062     0154  00AA               	movwf	??_Dio_Config
  2063     0155  0A30               	incf	Dio_Config@pinNumber,w
  2064     0156  2959               	goto	u664
  2065     0157                     u665:
  2066     0157  1003               	clrc
  2067     0158  0DAA               	rlf	??_Dio_Config,f
  2068     0159                     u664:
  2069     0159  3EFF               	addlw	-1
  2070     015A  1D03               	skipz
  2071     015B  2957               	goto	u665
  2072     015C  082A               	movf	??_Dio_Config,w
  2073     015D  04CB               	iorwf	_DIO_State,f
  2074                           
  2075                           ;MCAL/scr/Dio.c: 48:         } else {
  2076     015E  296B               	goto	l1071
  2077     015F                     l1069:
  2078                           
  2079                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  2080     015F  3001               	movlw	1
  2081     0160  00AA               	movwf	??_Dio_Config
  2082     0161  0A30               	incf	Dio_Config@pinNumber,w
  2083     0162  2965               	goto	u674
  2084     0163                     u675:
  2085     0163  1003               	clrc
  2086     0164  0DAA               	rlf	??_Dio_Config,f
  2087     0165                     u674:
  2088     0165  3EFF               	addlw	-1
  2089     0166  1D03               	skipz
  2090     0167  2963               	goto	u675
  2091     0168  082A               	movf	??_Dio_Config,w
  2092     0169  3AFF               	xorlw	255
  2093     016A  05CB               	andwf	_DIO_State,f
  2094     016B                     l1071:
  2095                           
  2096                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  2097     016B  084B               	movf	_DIO_State,w
  2098     016C  0085               	movwf	5	;volatile
  2099     016D                     l1073:
  2100                           
  2101                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  2102     016D  0329               	decf	Dio_Config@pullType,w
  2103     016E  1D03               	btfss	3,2
  2104     016F  2981               	goto	l1077
  2105                           
  2106                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  2107     0170  307F               	movlw	127
  2108     0171  1683               	bsf	3,5	;RP0=1, select bank1
  2109     0172  0581               	andwf	1,f	;volatile
  2110                           
  2111                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  2112     0173  3001               	movlw	1
  2113     0174  1283               	bcf	3,5	;RP0=0, select bank0
  2114     0175  00AA               	movwf	??_Dio_Config
  2115     0176  0A30               	incf	Dio_Config@pinNumber,w
  2116     0177  297A               	goto	u694
  2117     0178                     u695:
  2118     0178  1003               	clrc
  2119     0179  0DAA               	rlf	??_Dio_Config,f
  2120     017A                     u694:
  2121     017A  3EFF               	addlw	-1
  2122     017B  1D03               	skipz
  2123     017C  2978               	goto	u695
  2124     017D  082A               	movf	??_Dio_Config,w
  2125     017E  1683               	bsf	3,5	;RP0=1, select bank1
  2126     017F  0495               	iorwf	21,f	;volatile
  2127                           
  2128                           ;MCAL/scr/Dio.c: 56:     } else {
  2129     0180  0008               	return
  2130     0181                     l1077:
  2131                           
  2132                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  2133     0181  3001               	movlw	1
  2134     0182  00AA               	movwf	??_Dio_Config
  2135     0183  0A30               	incf	Dio_Config@pinNumber,w
  2136     0184  2987               	goto	u704
  2137     0185                     u705:
  2138     0185  1003               	clrc
  2139     0186  0DAA               	rlf	??_Dio_Config,f
  2140     0187                     u704:
  2141     0187  3EFF               	addlw	-1
  2142     0188  1D03               	skipz
  2143     0189  2985               	goto	u705
  2144     018A  082A               	movf	??_Dio_Config,w
  2145     018B  3AFF               	xorlw	255
  2146     018C  1683               	bsf	3,5	;RP0=1, select bank1
  2147     018D  0595               	andwf	21,f	;volatile
  2148     018E  0008               	return
  2149     018F                     __end_of_Dio_Config:
  2150                           
  2151                           	psect	text13
  2152     038D                     __ptext13:	
  2153 ;; *************** function _Adc_StartConversion *****************
  2154 ;; Defined at:
  2155 ;;		line 87 in file "MCAL/scr/Adc.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  channel         1    wreg     enum E11
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  channel         1    8[BANK0 ] enum E11
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0
  2169 ;;      Params:         0       0
  2170 ;;      Locals:         0       1
  2171 ;;      Temps:          0       1
  2172 ;;      Totals:         0       2
  2173 ;;Total ram usage:        2 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183     038D                     _Adc_StartConversion:	
  2184                           ;psect for function _Adc_StartConversion
  2185                           
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _Adc_StartConversion: [wreg+status,2+status,0]
  2189                           ;Adc_StartConversion@channel stored from wreg
  2190     038D  1283               	bcf	3,5	;RP0=0, select bank0
  2191     038E  00A8               	movwf	Adc_StartConversion@channel
  2192                           
  2193                           ;MCAL/scr/Adc.c: 90:     ADCON0 &= ~( 0b11 << 2);
  2194     038F  30F3               	movlw	243
  2195     0390  059F               	andwf	31,f	;volatile
  2196                           
  2197                           ;MCAL/scr/Adc.c: 91:     ADCON0 |= (channel << 2);
  2198     0391  0828               	movf	Adc_StartConversion@channel,w	;volatile
  2199     0392  00A7               	movwf	??_Adc_StartConversion
  2200     0393  3001               	movlw	1
  2201     0394                     u725:
  2202     0394  1003               	clrc
  2203     0395  0DA7               	rlf	??_Adc_StartConversion,f
  2204     0396  3EFF               	addlw	-1
  2205     0397  1D03               	skipz
  2206     0398  2B94               	goto	u725
  2207     0399  1003               	clrc
  2208     039A  0D27               	rlf	??_Adc_StartConversion,w
  2209     039B  049F               	iorwf	31,f	;volatile
  2210                           
  2211                           ;MCAL/scr/Adc.c: 92:     ADCON0 |= (1 << 1);
  2212     039C  149F               	bsf	31,1	;volatile
  2213     039D  0008               	return
  2214     039E                     __end_of_Adc_StartConversion:
  2215                           
  2216                           	psect	text14
  2217     028E                     __ptext14:	
  2218 ;; *************** function _Adc_ReadResult *****************
  2219 ;; Defined at:
  2220 ;;		line 96 in file "MCAL/scr/Adc.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    7[BANK0 ] unsigned short 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0
  2234 ;;      Params:         0       2
  2235 ;;      Locals:         0       0
  2236 ;;      Temps:          0       7
  2237 ;;      Totals:         0       9
  2238 ;;Total ram usage:        9 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 2
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248     028E                     _Adc_ReadResult:	
  2249                           ;psect for function _Adc_ReadResult
  2250                           
  2251     028E                     l61:	
  2252                           ;MCAL/scr/Adc.c: 97:     while (ADCON0 & (1 << 1));
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _Adc_ReadResult: [wreg+status,2+status,0]
  2256                           
  2257     028E  1283               	bcf	3,5	;RP0=0, select bank0
  2258     028F  189F               	btfsc	31,1	;volatile
  2259     0290  2A8E               	goto	l61
  2260                           
  2261                           ;MCAL/scr/Adc.c: 100:     if (ADCON0 & (1 << 7)) {
  2262     0291  1F9F               	btfss	31,7	;volatile
  2263     0292  2A9A               	goto	l1139
  2264                           
  2265                           ;MCAL/scr/Adc.c: 102:         return (uint16)((ADRESH << 8) | ADRESL);
  2266     0293  081E               	movf	30,w	;volatile
  2267     0294  00A8               	movwf	?_Adc_ReadResult+1
  2268     0295  1683               	bsf	3,5	;RP0=1, select bank1
  2269     0296  081E               	movf	30,w	;volatile
  2270     0297  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0298  00A7               	movwf	?_Adc_ReadResult
  2272     0299  0008               	return
  2273     029A                     l1139:
  2274                           
  2275                           ;MCAL/scr/Adc.c: 105:         return (uint16)((ADRESH << 2) | (ADRESL >> 6));
  2276     029A  1683               	bsf	3,5	;RP0=1, select bank1
  2277     029B  081E               	movf	30,w	;volatile
  2278     029C  1283               	bcf	3,5	;RP0=0, select bank0
  2279     029D  00A9               	movwf	??_Adc_ReadResult
  2280     029E  3006               	movlw	6
  2281     029F                     u755:
  2282     029F  1003               	clrc
  2283     02A0  0CA9               	rrf	??_Adc_ReadResult,f
  2284     02A1  3EFF               	addlw	-1
  2285     02A2  1D03               	skipz
  2286     02A3  2A9F               	goto	u755
  2287     02A4  0829               	movf	??_Adc_ReadResult,w
  2288     02A5  00AA               	movwf	??_Adc_ReadResult+1
  2289     02A6  01AB               	clrf	??_Adc_ReadResult+2
  2290     02A7  081E               	movf	30,w	;volatile
  2291     02A8  00AC               	movwf	??_Adc_ReadResult+3
  2292     02A9  01AD               	clrf	??_Adc_ReadResult+4
  2293     02AA  1003               	clrc
  2294     02AB  0DAC               	rlf	??_Adc_ReadResult+3,f
  2295     02AC  0DAD               	rlf	??_Adc_ReadResult+4,f
  2296     02AD  1003               	clrc
  2297     02AE  0DAC               	rlf	??_Adc_ReadResult+3,f
  2298     02AF  0DAD               	rlf	??_Adc_ReadResult+4,f
  2299     02B0  082A               	movf	??_Adc_ReadResult+1,w
  2300     02B1  042C               	iorwf	??_Adc_ReadResult+3,w
  2301     02B2  00AE               	movwf	??_Adc_ReadResult+5
  2302     02B3  082B               	movf	??_Adc_ReadResult+2,w
  2303     02B4  042D               	iorwf	??_Adc_ReadResult+4,w
  2304     02B5  00AF               	movwf	??_Adc_ReadResult+6
  2305     02B6  082E               	movf	??_Adc_ReadResult+5,w
  2306     02B7  00A7               	movwf	?_Adc_ReadResult
  2307     02B8  082F               	movf	??_Adc_ReadResult+6,w
  2308     02B9  00A8               	movwf	?_Adc_ReadResult+1
  2309     02BA  0008               	return
  2310     02BB                     __end_of_Adc_ReadResult:
  2311                           
  2312                           	psect	text15
  2313     03BD                     __ptext15:	
  2314 ;; *************** function _Adc_Init *****************
  2315 ;; Defined at:
  2316 ;;		line 53 in file "MCAL/scr/Adc.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0
  2330 ;;      Params:         0       0
  2331 ;;      Locals:         0       0
  2332 ;;      Temps:          0       0
  2333 ;;      Totals:         0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 2
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344     03BD                     _Adc_Init:	
  2345                           ;psect for function _Adc_Init
  2346                           
  2347                           
  2348                           ;MCAL/scr/Adc.c: 54: ADCON0 |= (1 << 0);
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  2352     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2353     03BE  141F               	bsf	31,0	;volatile
  2354                           
  2355                           ;MCAL/scr/Adc.c: 59:     (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  2356     03BF  30BF               	movlw	191
  2357     03C0  059F               	andwf	31,f	;volatile
  2358     03C1  081F               	movf	31,w	;volatile
  2359                           
  2360                           ;MCAL/scr/Adc.c: 62:     (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/
      +                          1000 )) >= 1600) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 /
      +                           ((4000000)/1000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 
      +                          : ((32000000 / ((4000000)/1000 )) >= 1600) ? 0b010 : ((64000000 / ((4000000)/1000 )) >= 
      +                          1600) ? 0b110 : 0b110) << 4) );
  2361     03C2  308F               	movlw	143
  2362     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2363     03C4  059F               	andwf	31,f	;volatile
  2364     03C5  161F               	bsf	31,4	;volatile
  2365                           
  2366                           ;MCAL/scr/Adc.c: 82:         ADCON0 &= ~(1 << 7);
  2367     03C6  307F               	movlw	127
  2368     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2369     03C8  059F               	andwf	31,f	;volatile
  2370     03C9  0008               	return
  2371     03CA                     __end_of_Adc_Init:
  2372                           
  2373                           	psect	text16
  2374     02BB                     __ptext16:	
  2375 ;; *************** function _ISR *****************
  2376 ;; Defined at:
  2377 ;;		line 80 in file "main.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  i               2    5[BANK0 ] unsigned short 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0
  2391 ;;      Params:         0       0
  2392 ;;      Locals:         0       2
  2393 ;;      Temps:          0       3
  2394 ;;      Totals:         0       5
  2395 ;;Total ram usage:        5 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 1
  2398 ;; This function calls:
  2399 ;;		_Dio_Pin_Read
  2400 ;; This function is called by:
  2401 ;;		Interrupt level 1
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405     02BB                     _ISR:	
  2406                           ;psect for function _ISR
  2407                           
  2408                           
  2409                           ;main.c: 82:     if (INTCONbits.GPIF) {
  2410     02BB  1C0B               	btfss	11,0	;volatile
  2411     02BC  2ADF               	goto	i1l189
  2412                           
  2413                           ;main.c: 84:         uint16 i = 0 ;
  2414     02BD  01A5               	clrf	ISR@i
  2415     02BE  01A6               	clrf	ISR@i+1
  2416     02BF                     i1l1307:	
  2417                           ;main.c: 85:               while(!Dio_Pin_Read(3)){
  2418                           
  2419                           
  2420                           ;main.c: 85:               while(!Dio_Pin_Read(3)){
  2421     02BF  3003               	movlw	3
  2422     02C0  237A               	fcall	_Dio_Pin_Read
  2423     02C1  3A00               	xorlw	0
  2424     02C2  1D03               	btfss	3,2
  2425     02C3  2ADE               	goto	i1l188
  2426                           
  2427                           ;main.c: 86:                   i++;
  2428     02C4  3001               	movlw	1
  2429     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2430     02C6  07A5               	addwf	ISR@i,f
  2431     02C7  1803               	skipnc
  2432     02C8  0AA6               	incf	ISR@i+1,f
  2433     02C9  3000               	movlw	0
  2434     02CA  07A6               	addwf	ISR@i+1,f
  2435                           
  2436                           ;main.c: 87:                   _delay((unsigned long)(((100))*(4000000/4000000.0)));
  2437     02CB  3021               	movlw	33
  2438     02CC  00A2               	movwf	??_ISR
  2439     02CD                     u113_27:
  2440     02CD  0BA2               	decfsz	??_ISR,f
  2441     02CE  2ACD               	goto	u113_27
  2442                           
  2443                           ;main.c: 88:                   if(i>3000){
  2444     02CF  300B               	movlw	11
  2445     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2446     02D1  0226               	subwf	ISR@i+1,w
  2447     02D2  30B9               	movlw	185
  2448     02D3  1903               	skipnz
  2449     02D4  0225               	subwf	ISR@i,w
  2450     02D5  1C03               	skipc
  2451     02D6  2ABF               	goto	i1l1307
  2452                           
  2453                           ;main.c: 89:                       DispenserOn = !DispenserOn;
  2454     02D7  084A               	movf	_DispenserOn,w
  2455     02D8  1D03               	btfss	3,2
  2456     02D9  2ADC               	goto	u106_20
  2457     02DA  3001               	movlw	1
  2458     02DB  2ADD               	goto	u107_20
  2459     02DC                     u106_20:
  2460     02DC  3000               	movlw	0
  2461     02DD                     u107_20:
  2462     02DD  00CA               	movwf	_DispenserOn
  2463     02DE                     i1l188:	
  2464                           ;main.c: 90:                       break;}
  2465                           
  2466                           
  2467                           ;main.c: 94:         INTCONbits.GPIF = 0;
  2468     02DE  100B               	bcf	11,0	;volatile
  2469     02DF                     i1l189:
  2470     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2471     02E0  0824               	movf	??_ISR+2,w
  2472     02E1  008A               	movwf	10
  2473     02E2  0E23               	swapf	??_ISR+1,w
  2474     02E3  0083               	movwf	3
  2475     02E4  0EDE               	swapf	94,f
  2476     02E5  0E5E               	swapf	94,w
  2477     02E6  0009               	retfie
  2478     02E7                     __end_of_ISR:
  2479                           
  2480                           	psect	intentry
  2481     0004                     __pintentry:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2484                           
  2485     0004                     interrupt_function:
  2486     005E                     saved_w         set	btemp
  2487     0004  00DE               	movwf	btemp
  2488     0005  0E03               	swapf	3,w
  2489     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2490     0007  00A3               	movwf	??_ISR+1
  2491     0008  080A               	movf	10,w
  2492     0009  00A4               	movwf	??_ISR+2
  2493     000A  2ABB               	ljmp	_ISR
  2494                           
  2495                           	psect	text17
  2496     037A                     __ptext17:	
  2497 ;; *************** function _Dio_Pin_Read *****************
  2498 ;; Defined at:
  2499 ;;		line 19 in file "MCAL/scr/Dio.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  pinNumber       1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  pinNumber       1    1[BANK0 ] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      unsigned char 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0
  2513 ;;      Params:         0       0
  2514 ;;      Locals:         0       1
  2515 ;;      Temps:          0       1
  2516 ;;      Totals:         0       2
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_ISR
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526     037A                     _Dio_Pin_Read:	
  2527                           ;psect for function _Dio_Pin_Read
  2528                           
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _Dio_Pin_Read: [wreg+status,2+status,0]
  2532                           ;Dio_Pin_Read@pinNumber stored from wreg
  2533     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2534     037B  00A1               	movwf	Dio_Pin_Read@pinNumber
  2535                           
  2536                           ;MCAL/scr/Dio.c: 20:         if (GPIO & (1 << pinNumber)) {
  2537     037C  3001               	movlw	1
  2538     037D  00A0               	movwf	??_Dio_Pin_Read
  2539     037E  0A21               	incf	Dio_Pin_Read@pinNumber,w
  2540     037F  2B82               	goto	u76_24
  2541     0380                     u76_25:
  2542     0380  1003               	clrc
  2543     0381  0DA0               	rlf	??_Dio_Pin_Read,f
  2544     0382                     u76_24:
  2545     0382  3EFF               	addlw	-1
  2546     0383  1D03               	skipz
  2547     0384  2B80               	goto	u76_25
  2548     0385  0820               	movf	??_Dio_Pin_Read,w
  2549     0386  0505               	andwf	5,w	;volatile
  2550     0387  1903               	btfsc	3,2
  2551     0388  2B8B               	goto	i1l1151
  2552                           
  2553                           ;MCAL/scr/Dio.c: 21:             return 1;
  2554     0389  3001               	movlw	1
  2555     038A  0008               	return
  2556     038B                     i1l1151:
  2557                           
  2558                           ;MCAL/scr/Dio.c: 23:             return 0;
  2559     038B  3000               	movlw	0
  2560     038C  0008               	return
  2561     038D                     __end_of_Dio_Pin_Read:
  2562     0000                     ___latbits      equ	0
  2563     005E                     btemp           set	94	;btemp
  2564     005E                     wtemp0          set	94
  2565                           
  2566                           	psect	config
  2567                           
  2568                           ;Config register CONFIG @ 0x2007
  2569                           ;	Oscillator Selection bits
  2570                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2571                           ;	Watchdog Timer Enable bit
  2572                           ;	WDTE = OFF, WDT disabled
  2573                           ;	Power-Up Timer Enable bit
  2574                           ;	PWRTE = OFF, PWRT disabled
  2575                           ;	GP3/MCLR pin function select
  2576                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2577                           ;	Brown-out Detect Enable bit
  2578                           ;	BOREN = OFF, BOD disabled
  2579                           ;	Code Protection bit
  2580                           ;	CP = OFF, Program Memory code protection is disabled
  2581                           ;	Data Code Protection bit
  2582                           ;	CPD = OFF, Data memory code protection is disabled
  2583     2007                     	org	8199
  2584     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     40      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lmul
    ___lwmod->___lwdiv
    ___lmul->_Adc_ReadResult
    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _MAX7219_DisplayData->_SPI_Send_16bit
    _MAX7219_DisplayData->___lwmod
    _MAX7219_ClearDisplay->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_Dio_Pin_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2025
                                             29 BANK0     11    11      0
                           _Adc_Init
                     _Adc_ReadResult
                _Adc_StartConversion
                      _Dio_Pin_Write
                           _Dio_init
                          _Gpio_Init
               _MAX7219_ClearDisplay
                _MAX7219_DisplayData
                       _MAX7219_Init
                           _SPI_Init
                             ___lmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                             14 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                             16 BANK0     13     5      8
                     _Adc_ReadResult (ARG)
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     186
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (1) _MAX7219_DisplayData                                  6     5      1     246
                                             19 BANK0      6     5      1
                     _SPI_Send_16bit
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _MAX7219_ClearDisplay                                 3     3      0     254
                                             19 BANK0      3     3      0
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     186
                                             10 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      88
                                              7 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              7 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_StartConversion                                  2     2      0      29
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Adc_ReadResult                                       9     7      2       0
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0      53
                                              2 BANK0      5     5      0
                       _Dio_Pin_Read
 ---------------------------------------------------------------------------------
 (5) _Dio_Pin_Read                                         2     2      0      29
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_ReadResult
   _Adc_StartConversion
   _Dio_Pin_Write
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_ClearDisplay
     _SPI_Send_16bit
       _Dio_Pin_Write
   _MAX7219_DisplayData
     _SPI_Send_16bit
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   _MAX7219_Init
     _SPI_Send_16bit
   _SPI_Init
     _Dio_Config
   ___lmul
     _Adc_ReadResult (ARG)
   ___lwdiv
   ___lwmod

 _ISR (ROOT)
   _Dio_Pin_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     40      45     72.6%
STACK                0      0       0      0.0%
DATA                 0      0      45      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 21:07:52 2024

        __end_of_Dio_Pin_Read 038D                             pc 0002                            l61 028E  
                          fsr 0004         __end_of_Dio_Pin_Write 0307                _SPI_Send_16bit 018F  
                         _ISR 02BB                           u605 01DA                           u704 0187  
                         u624 0124                           u705 0185                           u625 0122  
                         u634 013C                           u635 0139                           u564 02F2  
                         u725 0394                           u565 02F0                           u805 0203  
                         u574 02FE                           u575 02FC                           u815 020B  
                         u664 0159                           u584 01A3                           u665 0157  
                         u585 01A0                           u674 0165                           u755 029F  
                         u675 0163                           u915 0267                           u845 022E  
                         u694 017A                           u695 0178                           u935 0276  
                         u865 0238                           u945 027F                           u875 0244  
                         u885 024E                           _WPU 0095                           fsr0 0004  
                        ?_ISR 0020                          ISR@i 0025                          l1025 02F8  
                        l1041 01B2                          l1201 0258                          l1027 0304  
                        l1037 0196                          l1213 0264                          l1071 016B  
                        l1215 0270                          l1223 0289                          l1073 016D  
                        l1139 029A                          l1059 0132                          l1171 0201  
                        l1219 027E                          l1077 0181                          l1069 015F  
                        l1261 0045                          l1087 0341                          l1167 01EB  
                        l1191 0237                          l1281 00FF                          l1257 0041  
                        l1283 007F                          l1259 0032                          l1197 024D  
                        l1189 022B                          l1285 0103                          l1297 001E  
                        u1005 006E                          u1107 0088                          u1117 01B8  
                        u1127 01C3                          _IOCB 0096                          u1097 0039  
                        _GPIO 0005                          _main 0014                          btemp 005E  
                  _Dio_Config 0119                          start 000B                         ??_ISR 0022  
      __end_of_SPI_Send_16bit 01E2                         ?_main 0020                         _ANSEL 009F  
             __end_of___lwdiv 025D               __end_of___lwmod 028E                         i1l188 02DE  
                       i1l189 02DF                         u76_24 0382                         u76_25 0380  
         ___lmul@multiplicand 0034              __end_of_Adc_Init 03CA                         main@i 0047  
            __end_of_SPI_Init 033E                         pclath 000A          __end_of_MAX7219_Init 0326  
                       status 0003                         wtemp0 005E  __end_of_MAX7219_ClearDisplay 0354  
            __end_of_Dio_init 03BD               __initialization 000C                  __end_of_main 0119  
             ?_SPI_Send_16bit 002A                        ??_main 003D                        _ADCON0 001F  
            ??_Adc_ReadResult 0029                        _ADRESH 001E                        _ADRESL 009E  
                      i1l1151 038B                        i1l1307 02BF                        u113_27 02CD  
                      u106_20 02DC                        u107_20 02DD                        _TRISIO 0085  
                 ?_Dio_Config 0027                   _DispenserOn 004A                        ___lmul 01E2  
                   ??___lwdiv 0000                     ??___lwmod 0000            SPI_Send_16bit@data 002A  
                      saved_w 005E           _MAX7219_DisplayData 0354                  _Dio_Pin_Read 037A  
     __end_of__initialization 0012      MAX7219_DisplayData@digit 0038          ?_MAX7219_DisplayData 0033  
              __pcstackCOMMON 0000                     ?_Adc_Init 0020             __end_of_Gpio_Init 037A  
                   ?_SPI_Init 0020          _MAX7219_ClearDisplay 033E                     ?_Dio_init 0020  
                  __pbssBANK0 0048         MAX7219_ClearDisplay@i 0035         ??_MAX7219_DisplayData 0034  
                  __pmaintext 0014                       ?___lmul 0030        Dio_Pin_Write@pinNumber 0029  
                  __pintentry 0004                    ??_Adc_Init 0000                ___lmul@product 0039  
                  ??_SPI_Init 0000                  _MAX7219_Init 0307         ?_MAX7219_ClearDisplay 0020  
          Dio_Config@pullType 0029                    ??_Dio_init 0000                    __stringtab 039E  
                     _Counter 0048              ??_SPI_Send_16bit 002C                       ___lwdiv 0222  
                     ___lwmod 025D                       __ptext1 025D                       __ptext2 0222  
                     __ptext3 01E2                       __ptext4 0326                       __ptext5 0307  
                     __ptext6 0354                       __ptext7 033E                       __ptext8 018F  
                     __ptext9 02E7                     _DIO_State 004B          end_of_initialization 0012  
               _Dio_Config$71 002E                  ??_Dio_Config 002A                 _Dio_Pin_Write 02E7  
      ??_MAX7219_ClearDisplay 0033            __end_of_Dio_Config 018F           _Adc_StartConversion 038D  
        ?_Adc_StartConversion 0020                __end_of___lmul 0222                ?_Dio_Pin_Write 0027  
                   _Gpio_Init 0367           start_initialization 000C  MAX7219_DisplayData@character 0033  
                 __end_of_ISR 02E7                   _BCD_Enabled 004C         ??_Adc_StartConversion 0027  
                    ??___lmul 0038             SPI_Send_16bit@bit 0031                    ?_Gpio_Init 0020  
                   ___latbits 0000                 __pcstackBANK0 0020   __end_of_MAX7219_DisplayData 0367  
            _MAX7219_No_Table 03A4           Dio_Config@direction 0027              ___lwdiv@dividend 0029  
             Dio_Config@state 0028               ??_Dio_Pin_Write 0028                      ?___lwdiv 0027  
                    ?___lwmod 002E                     __pstrings 039E           Dio_Config@pinNumber 0030  
            ___lwdiv@quotient 002B             interrupt_function 0004                      _Adc_Init 03BD  
                    _SPI_Init 0326                   __stringbase 03A3                   ??_Gpio_Init 0000  
                    _Dio_init 03AE                 ?_Dio_Pin_Read 0020            Dio_Pin_Write@state 0027  
           ___lmul@multiplier 0030                _Adc_ReadResult 028E            __end_of__stringtab 03A4  
                    _main$776 0045               ___lwdiv@divisor 0027                ??_Dio_Pin_Read 0020  
             ___lwdiv@counter 002D                      __ptext10 0367                      __ptext11 03AE  
                    __ptext12 0119                      __ptext13 038D                      __ptext14 028E  
                    __ptext15 03BD                      __ptext16 02BB                      __ptext17 037A  
      __end_of_Adc_ReadResult 02BB                 ?_MAX7219_Init 0020                    _INTCONbits 000B  
    __end_of_MAX7219_No_Table 03AE                      intlevel1 0000              ___lwmod@dividend 0030  
 __end_of_Adc_StartConversion 039E               ?_Adc_ReadResult 0027                     stringcode 039E  
  Adc_StartConversion@channel 0028         Dio_Pin_Read@pinNumber 0021                ??_MAX7219_Init 0000  
                  _OPTION_REG 0081               ___lwmod@divisor 002E               ___lwmod@counter 0032  
                    stringdir 039E                      stringtab 039E  
