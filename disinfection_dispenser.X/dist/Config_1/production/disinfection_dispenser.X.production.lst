

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 17:30:58 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,space=0,delta=2
    20                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x5E,2
    28     0000                     
    29                           ; Generated 17/08/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F675 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0004                     fsr             equ	4
    64     0004                     fsr0            equ	4
    65     0000                     indf            equ	0
    66     0000                     indf0           equ	0
    67     0002                     pc              equ	2
    68     0002                     pcl             equ	2
    69     000A                     pclath          equ	10
    70     0003                     status          equ	3
    71     0000                     INDF            equ	0	;# 
    72     0001                     TMR0            equ	1	;# 
    73     0002                     PCL             equ	2	;# 
    74     0003                     STATUS          equ	3	;# 
    75     0004                     FSR             equ	4	;# 
    76     0005                     GPIO            equ	5	;# 
    77     000A                     PCLATH          equ	10	;# 
    78     000B                     INTCON          equ	11	;# 
    79     000C                     PIR1            equ	12	;# 
    80     000E                     TMR1            equ	14	;# 
    81     000E                     TMR1L           equ	14	;# 
    82     000F                     TMR1H           equ	15	;# 
    83     0010                     T1CON           equ	16	;# 
    84     0019                     CMCON           equ	25	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISIO          equ	133	;# 
    89     008C                     PIE1            equ	140	;# 
    90     008E                     PCON            equ	142	;# 
    91     0090                     OSCCAL          equ	144	;# 
    92     0095                     WPU             equ	149	;# 
    93     0096                     IOC             equ	150	;# 
    94     0096                     IOCB            equ	150	;# 
    95     0099                     VRCON           equ	153	;# 
    96     009A                     EEDATA          equ	154	;# 
    97     009A                     EEDAT           equ	154	;# 
    98     009B                     EEADR           equ	155	;# 
    99     009C                     EECON1          equ	156	;# 
   100     009D                     EECON2          equ	157	;# 
   101     009E                     ADRESL          equ	158	;# 
   102     009F                     ANSEL           equ	159	;# 
   103     0000                     INDF            equ	0	;# 
   104     0001                     TMR0            equ	1	;# 
   105     0002                     PCL             equ	2	;# 
   106     0003                     STATUS          equ	3	;# 
   107     0004                     FSR             equ	4	;# 
   108     0005                     GPIO            equ	5	;# 
   109     000A                     PCLATH          equ	10	;# 
   110     000B                     INTCON          equ	11	;# 
   111     000C                     PIR1            equ	12	;# 
   112     000E                     TMR1            equ	14	;# 
   113     000E                     TMR1L           equ	14	;# 
   114     000F                     TMR1H           equ	15	;# 
   115     0010                     T1CON           equ	16	;# 
   116     0019                     CMCON           equ	25	;# 
   117     001E                     ADRESH          equ	30	;# 
   118     001F                     ADCON0          equ	31	;# 
   119     0081                     OPTION_REG      equ	129	;# 
   120     0085                     TRISIO          equ	133	;# 
   121     008C                     PIE1            equ	140	;# 
   122     008E                     PCON            equ	142	;# 
   123     0090                     OSCCAL          equ	144	;# 
   124     0095                     WPU             equ	149	;# 
   125     0096                     IOC             equ	150	;# 
   126     0096                     IOCB            equ	150	;# 
   127     0099                     VRCON           equ	153	;# 
   128     009A                     EEDATA          equ	154	;# 
   129     009A                     EEDAT           equ	154	;# 
   130     009B                     EEADR           equ	155	;# 
   131     009C                     EECON1          equ	156	;# 
   132     009D                     EECON2          equ	157	;# 
   133     009E                     ADRESL          equ	158	;# 
   134     009F                     ANSEL           equ	159	;# 
   135     0000                     INDF            equ	0	;# 
   136     0001                     TMR0            equ	1	;# 
   137     0002                     PCL             equ	2	;# 
   138     0003                     STATUS          equ	3	;# 
   139     0004                     FSR             equ	4	;# 
   140     0005                     GPIO            equ	5	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000E                     TMR1            equ	14	;# 
   145     000E                     TMR1L           equ	14	;# 
   146     000F                     TMR1H           equ	15	;# 
   147     0010                     T1CON           equ	16	;# 
   148     0019                     CMCON           equ	25	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISIO          equ	133	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008E                     PCON            equ	142	;# 
   155     0090                     OSCCAL          equ	144	;# 
   156     0095                     WPU             equ	149	;# 
   157     0096                     IOC             equ	150	;# 
   158     0096                     IOCB            equ	150	;# 
   159     0099                     VRCON           equ	153	;# 
   160     009A                     EEDATA          equ	154	;# 
   161     009A                     EEDAT           equ	154	;# 
   162     009B                     EEADR           equ	155	;# 
   163     009C                     EECON1          equ	156	;# 
   164     009D                     EECON2          equ	157	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ANSEL           equ	159	;# 
   167     0000                     INDF            equ	0	;# 
   168     0001                     TMR0            equ	1	;# 
   169     0002                     PCL             equ	2	;# 
   170     0003                     STATUS          equ	3	;# 
   171     0004                     FSR             equ	4	;# 
   172     0005                     GPIO            equ	5	;# 
   173     000A                     PCLATH          equ	10	;# 
   174     000B                     INTCON          equ	11	;# 
   175     000C                     PIR1            equ	12	;# 
   176     000E                     TMR1            equ	14	;# 
   177     000E                     TMR1L           equ	14	;# 
   178     000F                     TMR1H           equ	15	;# 
   179     0010                     T1CON           equ	16	;# 
   180     0019                     CMCON           equ	25	;# 
   181     001E                     ADRESH          equ	30	;# 
   182     001F                     ADCON0          equ	31	;# 
   183     0081                     OPTION_REG      equ	129	;# 
   184     0085                     TRISIO          equ	133	;# 
   185     008C                     PIE1            equ	140	;# 
   186     008E                     PCON            equ	142	;# 
   187     0090                     OSCCAL          equ	144	;# 
   188     0095                     WPU             equ	149	;# 
   189     0096                     IOC             equ	150	;# 
   190     0096                     IOCB            equ	150	;# 
   191     0099                     VRCON           equ	153	;# 
   192     009A                     EEDATA          equ	154	;# 
   193     009A                     EEDAT           equ	154	;# 
   194     009B                     EEADR           equ	155	;# 
   195     009C                     EECON1          equ	156	;# 
   196     009D                     EECON2          equ	157	;# 
   197     009E                     ADRESL          equ	158	;# 
   198     009F                     ANSEL           equ	159	;# 
   199     0000                     INDF            equ	0	;# 
   200     0001                     TMR0            equ	1	;# 
   201     0002                     PCL             equ	2	;# 
   202     0003                     STATUS          equ	3	;# 
   203     0004                     FSR             equ	4	;# 
   204     0005                     GPIO            equ	5	;# 
   205     000A                     PCLATH          equ	10	;# 
   206     000B                     INTCON          equ	11	;# 
   207     000C                     PIR1            equ	12	;# 
   208     000E                     TMR1            equ	14	;# 
   209     000E                     TMR1L           equ	14	;# 
   210     000F                     TMR1H           equ	15	;# 
   211     0010                     T1CON           equ	16	;# 
   212     0019                     CMCON           equ	25	;# 
   213     001E                     ADRESH          equ	30	;# 
   214     001F                     ADCON0          equ	31	;# 
   215     0081                     OPTION_REG      equ	129	;# 
   216     0085                     TRISIO          equ	133	;# 
   217     008C                     PIE1            equ	140	;# 
   218     008E                     PCON            equ	142	;# 
   219     0090                     OSCCAL          equ	144	;# 
   220     0095                     WPU             equ	149	;# 
   221     0096                     IOC             equ	150	;# 
   222     0096                     IOCB            equ	150	;# 
   223     0099                     VRCON           equ	153	;# 
   224     009A                     EEDATA          equ	154	;# 
   225     009A                     EEDAT           equ	154	;# 
   226     009B                     EEADR           equ	155	;# 
   227     009C                     EECON1          equ	156	;# 
   228     009D                     EECON2          equ	157	;# 
   229     009E                     ADRESL          equ	158	;# 
   230     009F                     ANSEL           equ	159	;# 
   231     0000                     INDF            equ	0	;# 
   232     0001                     TMR0            equ	1	;# 
   233     0002                     PCL             equ	2	;# 
   234     0003                     STATUS          equ	3	;# 
   235     0004                     FSR             equ	4	;# 
   236     0005                     GPIO            equ	5	;# 
   237     000A                     PCLATH          equ	10	;# 
   238     000B                     INTCON          equ	11	;# 
   239     000C                     PIR1            equ	12	;# 
   240     000E                     TMR1            equ	14	;# 
   241     000E                     TMR1L           equ	14	;# 
   242     000F                     TMR1H           equ	15	;# 
   243     0010                     T1CON           equ	16	;# 
   244     0019                     CMCON           equ	25	;# 
   245     001E                     ADRESH          equ	30	;# 
   246     001F                     ADCON0          equ	31	;# 
   247     0081                     OPTION_REG      equ	129	;# 
   248     0085                     TRISIO          equ	133	;# 
   249     008C                     PIE1            equ	140	;# 
   250     008E                     PCON            equ	142	;# 
   251     0090                     OSCCAL          equ	144	;# 
   252     0095                     WPU             equ	149	;# 
   253     0096                     IOC             equ	150	;# 
   254     0096                     IOCB            equ	150	;# 
   255     0099                     VRCON           equ	153	;# 
   256     009A                     EEDATA          equ	154	;# 
   257     009A                     EEDAT           equ	154	;# 
   258     009B                     EEADR           equ	155	;# 
   259     009C                     EECON1          equ	156	;# 
   260     009D                     EECON2          equ	157	;# 
   261     009E                     ADRESL          equ	158	;# 
   262     009F                     ANSEL           equ	159	;# 
   263     0000                     INDF            equ	0	;# 
   264     0001                     TMR0            equ	1	;# 
   265     0002                     PCL             equ	2	;# 
   266     0003                     STATUS          equ	3	;# 
   267     0004                     FSR             equ	4	;# 
   268     0005                     GPIO            equ	5	;# 
   269     000A                     PCLATH          equ	10	;# 
   270     000B                     INTCON          equ	11	;# 
   271     000C                     PIR1            equ	12	;# 
   272     000E                     TMR1            equ	14	;# 
   273     000E                     TMR1L           equ	14	;# 
   274     000F                     TMR1H           equ	15	;# 
   275     0010                     T1CON           equ	16	;# 
   276     0019                     CMCON           equ	25	;# 
   277     001E                     ADRESH          equ	30	;# 
   278     001F                     ADCON0          equ	31	;# 
   279     0081                     OPTION_REG      equ	129	;# 
   280     0085                     TRISIO          equ	133	;# 
   281     008C                     PIE1            equ	140	;# 
   282     008E                     PCON            equ	142	;# 
   283     0090                     OSCCAL          equ	144	;# 
   284     0095                     WPU             equ	149	;# 
   285     0096                     IOC             equ	150	;# 
   286     0096                     IOCB            equ	150	;# 
   287     0099                     VRCON           equ	153	;# 
   288     009A                     EEDATA          equ	154	;# 
   289     009A                     EEDAT           equ	154	;# 
   290     009B                     EEADR           equ	155	;# 
   291     009C                     EECON1          equ	156	;# 
   292     009D                     EECON2          equ	157	;# 
   293     009E                     ADRESL          equ	158	;# 
   294     009F                     ANSEL           equ	159	;# 
   295                           
   296                           	psect	strings
   297     0255                     __pstrings:
   298     0255                     stringtab:
   299     0255                     __stringtab:
   300     0255                     stringcode:	
   301                           ;	String table - string pointers are 1 byte each
   302                           
   303     0255                     stringdir:
   304     0255  3002               	movlw	high stringdir
   305     0256  008A               	movwf	10
   306     0257  0804               	movf	4,w
   307     0258  0A84               	incf	4,f
   308     0259  0782               	addwf	2,f
   309     025A                     __stringbase:
   310     025A  3400               	retlw	0
   311     025B                     __end_of__stringtab:
   312     025B                     _MAX7219_No_Table:
   313     025B  347E               	retlw	126
   314     025C  3430               	retlw	48
   315     025D  346D               	retlw	109
   316     025E  3479               	retlw	121
   317     025F  3433               	retlw	51
   318     0260  345B               	retlw	91
   319     0261  345F               	retlw	95
   320     0262  3470               	retlw	112
   321     0263  347F               	retlw	127
   322     0264  347B               	retlw	123
   323     0265                     __end_of_MAX7219_No_Table:
   324     000B                     _INTCONbits     set	11
   325     0005                     _GPIO           set	5
   326     001E                     _ADRESH         set	30
   327     001F                     _ADCON0         set	31
   328     0096                     _IOCB           set	150
   329     0095                     _WPU            set	149
   330     0081                     _OPTION_REG     set	129
   331     0085                     _TRISIO         set	133
   332     009E                     _ADRESL         set	158
   333     009F                     _ANSEL          set	159
   334                           
   335                           	psect	cinit
   336     0010                     start_initialization:	
   337                           ; #config settings
   338                           
   339     0010                     __initialization:
   340                           
   341                           ; Clear objects allocated to BANK0
   342     0010  1283               	bcf	3,5	;RP0=0, select bank0
   343     0011  01C3               	clrf	__pbssBANK0& (0+127)
   344     0012  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   345     0013  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   346     0014                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349     0014                     __end_of__initialization:
   350     0014  0183               	clrf	3
   351     0015  2A81               	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssBANK0
   354     0043                     __pbssBANK0:
   355     0043                     _BCD_Enabled:
   356     0043                     	ds	1
   357     0044                     _previous_gp3_state:
   358     0044                     	ds	1
   359     0045                     _DIO_State:
   360     0045                     	ds	1
   361                           
   362                           	psect	cstackCOMMON
   363     0000                     __pcstackCOMMON:
   364     0000                     ??_MAX7219_Init:
   365     0000                     ??_MAX7219_DisplayNumber:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0000                     ??_Adc_Init:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0000                     ??_Dio_init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0000                     ??_Gpio_Init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0000                     ??_SPI_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0000                     ??_SPI_Send_16bit:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0000                     ??_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0000                     ??i1_SPI_Send_16bit:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           	psect	cstackBANK0
   391     0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0020                     ?_MAX7219_Init:
   395     0020                     ?_Adc_Init:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0020                     ?_Dio_init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0020                     ?_Gpio_Init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     ?_SPI_Init:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0020                     ?_ISR:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0020                     ?i1_Dio_Pin_Write:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ?_main:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     ?___lldiv:	
   417                           ; 2 bytes @ 0x0
   418                           
   419     0020                     ?___llmod:	
   420                           ; 4 bytes @ 0x0
   421                           
   422     0020                     i1Dio_Pin_Write@state:	
   423                           ; 4 bytes @ 0x0
   424                           
   425     0020                     ___lldiv@divisor:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0020                     ___llmod@divisor:	
   429                           ; 4 bytes @ 0x0
   430                           
   431                           
   432                           ; 4 bytes @ 0x0
   433     0020                     	ds	1
   434     0021                     ??i1_Dio_Pin_Write:
   435                           
   436                           ; 1 bytes @ 0x1
   437     0021                     	ds	1
   438     0022                     i1Dio_Pin_Write@pinNumber:
   439                           
   440                           ; 1 bytes @ 0x2
   441     0022                     	ds	1
   442     0023                     ?i1_SPI_Send_16bit:
   443     0023                     i1SPI_Send_16bit@data:	
   444                           ; 1 bytes @ 0x3
   445                           
   446                           
   447                           ; 2 bytes @ 0x3
   448     0023                     	ds	1
   449     0024                     ___lldiv@dividend:
   450     0024                     ___llmod@dividend:	
   451                           ; 4 bytes @ 0x4
   452                           
   453                           
   454                           ; 4 bytes @ 0x4
   455     0024                     	ds	1
   456     0025                     i1SPI_Send_16bit@i:
   457                           
   458                           ; 1 bytes @ 0x5
   459     0025                     	ds	3
   460     0028                     ??___lldiv:
   461     0028                     ??___llmod:	
   462                           ; 1 bytes @ 0x8
   463                           
   464                           
   465                           ; 1 bytes @ 0x8
   466     0028                     	ds	1
   467     0029                     ___llmod@counter:
   468     0029                     ___lldiv@quotient:	
   469                           ; 1 bytes @ 0x9
   470                           
   471                           
   472                           ; 4 bytes @ 0x9
   473     0029                     	ds	1
   474     002A                     ?_MAX7219_DisplayData:
   475     002A                     MAX7219_DisplayData@character:	
   476                           ; 1 bytes @ 0xA
   477                           
   478                           
   479                           ; 1 bytes @ 0xA
   480     002A                     	ds	1
   481     002B                     ??_MAX7219_DisplayData:
   482                           
   483                           ; 1 bytes @ 0xB
   484     002B                     	ds	2
   485     002D                     ___lldiv@counter:
   486                           
   487                           ; 1 bytes @ 0xD
   488     002D                     	ds	2
   489     002F                     MAX7219_DisplayData@digit:
   490                           
   491                           ; 1 bytes @ 0xF
   492     002F                     	ds	1
   493     0030                     ?_MAX7219_DisplayNumber:
   494     0030                     MAX7219_DisplayNumber@number:	
   495                           ; 1 bytes @ 0x10
   496                           
   497                           
   498                           ; 4 bytes @ 0x10
   499     0030                     	ds	4
   500     0034                     MAX7219_DisplayNumber@i:
   501                           
   502                           ; 1 bytes @ 0x14
   503     0034                     	ds	1
   504     0035                     ??_ISR:
   505                           
   506                           ; 1 bytes @ 0x15
   507     0035                     	ds	4
   508     0039                     ?_Dio_Pin_Write:
   509     0039                     ?_Dio_Config:	
   510                           ; 1 bytes @ 0x19
   511                           
   512     0039                     Dio_Pin_Write@state:	
   513                           ; 1 bytes @ 0x19
   514                           
   515     0039                     Dio_Config@direction:	
   516                           ; 1 bytes @ 0x19
   517                           
   518                           
   519                           ; 1 bytes @ 0x19
   520     0039                     	ds	1
   521     003A                     Dio_Config@state:
   522     003A                     ??_Dio_Pin_Write:	
   523                           ; 1 bytes @ 0x1A
   524                           
   525                           
   526                           ; 1 bytes @ 0x1A
   527     003A                     	ds	1
   528     003B                     Dio_Pin_Write@pinNumber:
   529     003B                     Dio_Config@pullType:	
   530                           ; 1 bytes @ 0x1B
   531                           
   532                           
   533                           ; 1 bytes @ 0x1B
   534     003B                     	ds	1
   535     003C                     ?_SPI_Send_16bit:
   536     003C                     SPI_Send_16bit@data:	
   537                           ; 1 bytes @ 0x1C
   538                           
   539     003C                     ??_Dio_Config:	
   540                           ; 2 bytes @ 0x1C
   541                           
   542                           
   543                           ; 1 bytes @ 0x1C
   544     003C                     	ds	2
   545     003E                     SPI_Send_16bit@i:
   546                           
   547                           ; 1 bytes @ 0x1E
   548     003E                     	ds	2
   549     0040                     _Dio_Config$56:
   550                           
   551                           ; 2 bytes @ 0x20
   552     0040                     	ds	2
   553     0042                     Dio_Config@pinNumber:
   554                           
   555                           ; 1 bytes @ 0x22
   556     0042                     	ds	1
   557                           
   558                           	psect	maintext
   559     0281                     __pmaintext:	
   560 ;;
   561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   562 ;;
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 30 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  2  126[None  ] int 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : B00/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0
   579 ;;      Params:         0       0
   580 ;;      Locals:         0       0
   581 ;;      Temps:          0       0
   582 ;;      Totals:         0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels required when called: 8
   585 ;; This function calls:
   586 ;;		_Adc_Init
   587 ;;		_Dio_init
   588 ;;		_Gpio_Init
   589 ;;		_MAX7219_Init
   590 ;;		_SPI_Init
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596     0281                     _main:	
   597                           ;psect for function _main
   598                           
   599                           
   600                           ;main.c: 31: Gpio_Init();
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   604     0281  220B               	fcall	_Gpio_Init
   605                           
   606                           ;main.c: 32: Dio_init();
   607     0282  2265               	fcall	_Dio_init
   608                           
   609                           ;main.c: 33: Adc_Init();
   610     0283  2274               	fcall	_Adc_Init
   611                           
   612                           ;main.c: 34: SPI_Init();
   613     0284  21F3               	fcall	_SPI_Init
   614                           
   615                           ;main.c: 35: MAX7219_Init();
   616     0285  21D4               	fcall	_MAX7219_Init
   617                           
   618                           ;main.c: 37: IOCB |= (1 << 3);
   619     0286  1683               	bsf	3,5	;RP0=1, select bank1
   620     0287  1596               	bsf	22,3	;volatile
   621                           
   622                           ;main.c: 40: INTCONbits.GIE = 1;
   623     0288  178B               	bsf	11,7	;volatile
   624                           
   625                           ;main.c: 41: INTCONbits.PEIE = 1;
   626     0289  170B               	bsf	11,6	;volatile
   627                           
   628                           ;main.c: 42: INTCONbits.GPIE = 1;
   629     028A  158B               	bsf	11,3	;volatile
   630     028B                     l127:	
   631                           ;main.c: 44: while (1){
   632                           
   633     028B  2A8B               	goto	l127
   634     028C                     __end_of_main:
   635                           
   636                           	psect	text1
   637     01F3                     __ptext1:	
   638 ;; *************** function _SPI_Init *****************
   639 ;; Defined at:
   640 ;;		line 12 in file "SERVICE/scr/Spi.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0
   654 ;;      Params:         0       0
   655 ;;      Locals:         0       0
   656 ;;      Temps:          0       0
   657 ;;      Totals:         0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 6
   661 ;; This function calls:
   662 ;;		_Dio_Config
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668     01F3                     _SPI_Init:	
   669                           ;psect for function _SPI_Init
   670                           
   671                           
   672                           ;Spi.c: 13: Dio_Config (1, 1, 1 , 0);
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   676     01F3  1283               	bcf	3,5	;RP0=0, select bank0
   677     01F4  01B9               	clrf	Dio_Config@direction
   678     01F5  0AB9               	incf	Dio_Config@direction,f
   679     01F6  01BA               	clrf	Dio_Config@state
   680     01F7  0ABA               	incf	Dio_Config@state,f
   681     01F8  01BB               	clrf	Dio_Config@pullType
   682     01F9  3001               	movlw	1
   683     01FA  2016               	fcall	_Dio_Config
   684                           
   685                           ;Spi.c: 14: Dio_Config (2, 1, 0 , 0);
   686     01FB  1283               	bcf	3,5	;RP0=0, select bank0
   687     01FC  01B9               	clrf	Dio_Config@direction
   688     01FD  0AB9               	incf	Dio_Config@direction,f
   689     01FE  01BA               	clrf	Dio_Config@state
   690     01FF  01BB               	clrf	Dio_Config@pullType
   691     0200  3002               	movlw	2
   692     0201  2016               	fcall	_Dio_Config
   693                           
   694                           ;Spi.c: 15: Dio_Config (5, 1, 1 , 0);
   695     0202  1283               	bcf	3,5	;RP0=0, select bank0
   696     0203  01B9               	clrf	Dio_Config@direction
   697     0204  0AB9               	incf	Dio_Config@direction,f
   698     0205  01BA               	clrf	Dio_Config@state
   699     0206  0ABA               	incf	Dio_Config@state,f
   700     0207  01BB               	clrf	Dio_Config@pullType
   701     0208  3005               	movlw	5
   702     0209  2016               	fcall	_Dio_Config
   703     020A  0008               	return
   704     020B                     __end_of_SPI_Init:
   705                           
   706                           	psect	text2
   707     01D4                     __ptext2:	
   708 ;; *************** function _MAX7219_Init *****************
   709 ;; Defined at:
   710 ;;		line 8 in file "HAL/scr/max7219.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0
   724 ;;      Params:         0       0
   725 ;;      Locals:         0       0
   726 ;;      Temps:          0       0
   727 ;;      Totals:         0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 7
   731 ;; This function calls:
   732 ;;		_SPI_Send_16bit
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738     01D4                     _MAX7219_Init:	
   739                           ;psect for function _MAX7219_Init
   740                           
   741                           
   742                           ;max7219.c: 9: SPI_Send_16bit(0x0900);
   743                           
   744                           ;incstack = 0
   745                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+pclath+cstack]
   746     01D4  3000               	movlw	0
   747     01D5  1283               	bcf	3,5	;RP0=0, select bank0
   748     01D6  00BC               	movwf	SPI_Send_16bit@data
   749     01D7  3009               	movlw	9
   750     01D8  00BD               	movwf	SPI_Send_16bit@data+1
   751     01D9  2231               	fcall	_SPI_Send_16bit
   752                           
   753                           ;max7219.c: 10: SPI_Send_16bit(0x0A0F);
   754     01DA  300F               	movlw	15
   755     01DB  1283               	bcf	3,5	;RP0=0, select bank0
   756     01DC  00BC               	movwf	SPI_Send_16bit@data
   757     01DD  300A               	movlw	10
   758     01DE  00BD               	movwf	SPI_Send_16bit@data+1
   759     01DF  2231               	fcall	_SPI_Send_16bit
   760                           
   761                           ;max7219.c: 11: SPI_Send_16bit(0xFBF7);
   762     01E0  30F7               	movlw	247
   763     01E1  1283               	bcf	3,5	;RP0=0, select bank0
   764     01E2  00BC               	movwf	SPI_Send_16bit@data
   765     01E3  30FB               	movlw	251
   766     01E4  00BD               	movwf	SPI_Send_16bit@data+1
   767     01E5  2231               	fcall	_SPI_Send_16bit
   768                           
   769                           ;max7219.c: 12: SPI_Send_16bit(0x0C01);
   770     01E6  3001               	movlw	1
   771     01E7  1283               	bcf	3,5	;RP0=0, select bank0
   772     01E8  00BC               	movwf	SPI_Send_16bit@data
   773     01E9  300C               	movlw	12
   774     01EA  00BD               	movwf	SPI_Send_16bit@data+1
   775     01EB  2231               	fcall	_SPI_Send_16bit
   776                           
   777                           ;max7219.c: 13: SPI_Send_16bit(0x0F00);
   778     01EC  3000               	movlw	0
   779     01ED  1283               	bcf	3,5	;RP0=0, select bank0
   780     01EE  00BC               	movwf	SPI_Send_16bit@data
   781     01EF  300F               	movlw	15
   782     01F0  00BD               	movwf	SPI_Send_16bit@data+1
   783     01F1  2231               	fcall	_SPI_Send_16bit
   784     01F2  0008               	return
   785     01F3                     __end_of_MAX7219_Init:
   786                           
   787                           	psect	text3
   788     0231                     __ptext3:	
   789 ;; *************** function _SPI_Send_16bit *****************
   790 ;; Defined at:
   791 ;;		line 39 in file "SERVICE/scr/Spi.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  data            2   28[BANK0 ] unsigned short 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  i               1   30[BANK0 ] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0
   805 ;;      Params:         0       2
   806 ;;      Locals:         0       1
   807 ;;      Temps:          0       0
   808 ;;      Totals:         0       3
   809 ;;Total ram usage:        3 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 6
   812 ;; This function calls:
   813 ;;		_Dio_Pin_Write
   814 ;; This function is called by:
   815 ;;		_MAX7219_Init
   816 ;;		_MAX7219_ClearDisplay
   817 ;;		_MAX7219_Shutdown
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821     0231                     _SPI_Send_16bit:	
   822                           ;psect for function _SPI_Send_16bit
   823                           
   824                           
   825                           ;Spi.c: 42: uint8 i;;Spi.c: 43: for (i = 1; i <= 5; i++) {
   826                           
   827                           ;incstack = 0
   828                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+pclath+cstack]
   829     0231  3001               	movlw	1
   830     0232  1283               	bcf	3,5	;RP0=0, select bank0
   831     0233  00BE               	movwf	SPI_Send_16bit@i
   832     0234                     l1044:
   833     0234  3001               	movlw	1
   834     0235  07BE               	addwf	SPI_Send_16bit@i,f
   835     0236  3006               	movlw	6
   836     0237  023E               	subwf	SPI_Send_16bit@i,w
   837     0238  1C03               	skipc
   838     0239  2A34               	goto	l1044
   839                           
   840                           ;Spi.c: 44: };Spi.c: 46: Dio_Pin_Write(5, 0);
   841     023A  01B9               	clrf	Dio_Pin_Write@state
   842     023B  3005               	movlw	5
   843     023C  2194               	fcall	_Dio_Pin_Write
   844                           
   845                           ;Spi.c: 64: Dio_Pin_Write(5, 1);
   846     023D  1283               	bcf	3,5	;RP0=0, select bank0
   847     023E  01B9               	clrf	Dio_Pin_Write@state
   848     023F  0AB9               	incf	Dio_Pin_Write@state,f
   849     0240  3005               	movlw	5
   850     0241  2194               	fcall	_Dio_Pin_Write
   851     0242  0008               	return
   852     0243                     __end_of_SPI_Send_16bit:
   853                           
   854                           	psect	text4
   855     0194                     __ptext4:	
   856 ;; *************** function _Dio_Pin_Write *****************
   857 ;; Defined at:
   858 ;;		line 29 in file "MCAL/scr/Dio.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  pinNumber       1    wreg     unsigned char 
   861 ;;  state           1   25[BANK0 ] unsigned char 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  pinNumber       1   27[BANK0 ] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0
   873 ;;      Params:         0       1
   874 ;;      Locals:         0       1
   875 ;;      Temps:          0       1
   876 ;;      Totals:         0       3
   877 ;;Total ram usage:        3 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 5
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_SPI_Send_16bit
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887     0194                     _Dio_Pin_Write:	
   888                           ;psect for function _Dio_Pin_Write
   889                           
   890                           
   891                           ;incstack = 0
   892                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
   893                           ;Dio_Pin_Write@pinNumber stored from wreg
   894     0194  1283               	bcf	3,5	;RP0=0, select bank0
   895     0195  00BB               	movwf	Dio_Pin_Write@pinNumber
   896                           
   897                           ;Dio.c: 31: if (state == 1) {
   898     0196  0339               	decf	Dio_Pin_Write@state,w
   899     0197  1D03               	btfss	3,2
   900     0198  29A5               	goto	l998
   901                           
   902                           ;Dio.c: 32: DIO_State |= (1 << pinNumber);
   903     0199  3001               	movlw	1
   904     019A  00BA               	movwf	??_Dio_Pin_Write
   905     019B  0A3B               	incf	Dio_Pin_Write@pinNumber,w
   906     019C  299F               	goto	u474
   907     019D                     u475:
   908     019D  1003               	clrc
   909     019E  0DBA               	rlf	??_Dio_Pin_Write,f
   910     019F                     u474:
   911     019F  3EFF               	addlw	-1
   912     01A0  1D03               	skipz
   913     01A1  299D               	goto	u475
   914     01A2  083A               	movf	??_Dio_Pin_Write,w
   915     01A3  04C5               	iorwf	_DIO_State,f
   916                           
   917                           ;Dio.c: 33: }
   918     01A4  29B1               	goto	l1000
   919     01A5                     l998:
   920                           
   921                           ;Dio.c: 34: else {;Dio.c: 35: DIO_State &= ~(1 << pinNumber);
   922     01A5  3001               	movlw	1
   923     01A6  00BA               	movwf	??_Dio_Pin_Write
   924     01A7  0A3B               	incf	Dio_Pin_Write@pinNumber,w
   925     01A8  29AB               	goto	u484
   926     01A9                     u485:
   927     01A9  1003               	clrc
   928     01AA  0DBA               	rlf	??_Dio_Pin_Write,f
   929     01AB                     u484:
   930     01AB  3EFF               	addlw	-1
   931     01AC  1D03               	skipz
   932     01AD  29A9               	goto	u485
   933     01AE  083A               	movf	??_Dio_Pin_Write,w
   934     01AF  3AFF               	xorlw	255
   935     01B0  05C5               	andwf	_DIO_State,f
   936     01B1                     l1000:
   937                           
   938                           ;Dio.c: 36: };Dio.c: 37: GPIO = DIO_State ;
   939     01B1  0845               	movf	_DIO_State,w
   940     01B2  0085               	movwf	5	;volatile
   941     01B3  0008               	return
   942     01B4                     __end_of_Dio_Pin_Write:
   943                           
   944                           	psect	text5
   945     020B                     __ptext5:	
   946 ;; *************** function _Gpio_Init *****************
   947 ;; Defined at:
   948 ;;		line 23 in file "MCAL/scr/gpio.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0
   962 ;;      Params:         0       0
   963 ;;      Locals:         0       0
   964 ;;      Temps:          0       0
   965 ;;      Totals:         0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 5
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     020B                     _Gpio_Init:	
   977                           ;psect for function _Gpio_Init
   978                           
   979                           
   980                           ;gpio.c: 30: ANSEL |= (1 << 0);
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
   984     020B  1683               	bsf	3,5	;RP0=1, select bank1
   985     020C  141F               	bsf	31,0	;volatile
   986                           
   987                           ;gpio.c: 31: TRISIO |= (1 << 0);
   988     020D  1405               	bsf	5,0	;volatile
   989                           
   990                           ;gpio.c: 52: ANSEL &= ~(1 << 1);
   991     020E  30FD               	movlw	253
   992     020F  059F               	andwf	31,f	;volatile
   993                           
   994                           ;gpio.c: 53: TRISIO &= ~(1 << 1);
   995     0210  30FD               	movlw	253
   996     0211  0585               	andwf	5,f	;volatile
   997                           
   998                           ;gpio.c: 70: ANSEL &= ~(1 << 2);
   999     0212  30FB               	movlw	251
  1000     0213  059F               	andwf	31,f	;volatile
  1001                           
  1002                           ;gpio.c: 71: TRISIO &= ~(1 << 2);
  1003     0214  30FB               	movlw	251
  1004     0215  0585               	andwf	5,f	;volatile
  1005                           
  1006                           ;gpio.c: 76: TRISIO |= (1 << 3);
  1007     0216  1585               	bsf	5,3	;volatile
  1008                           
  1009                           ;gpio.c: 83: ANSEL &= ~(1 << 3);
  1010     0217  30F7               	movlw	247
  1011     0218  059F               	andwf	31,f	;volatile
  1012                           
  1013                           ;gpio.c: 84: TRISIO &= ~(1 << 4);
  1014     0219  30EF               	movlw	239
  1015     021A  0585               	andwf	5,f	;volatile
  1016                           
  1017                           ;gpio.c: 102: TRISIO &= ~(1 << 5);
  1018     021B  30DF               	movlw	223
  1019     021C  0585               	andwf	5,f	;volatile
  1020     021D  0008               	return
  1021     021E                     __end_of_Gpio_Init:
  1022                           
  1023                           	psect	text6
  1024     0265                     __ptext6:	
  1025 ;; *************** function _Dio_init *****************
  1026 ;; Defined at:
  1027 ;;		line 60 in file "MCAL/scr/Dio.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0
  1041 ;;      Params:         0       0
  1042 ;;      Locals:         0       0
  1043 ;;      Temps:          0       0
  1044 ;;      Totals:         0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 6
  1048 ;; This function calls:
  1049 ;;		_Dio_Config
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     0265                     _Dio_init:	
  1056                           ;psect for function _Dio_init
  1057                           
  1058                           
  1059                           ;Dio.c: 72: Dio_Config (3, 0, 0, 1);
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1063     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1064     0266  01B9               	clrf	Dio_Config@direction
  1065     0267  01BA               	clrf	Dio_Config@state
  1066     0268  01BB               	clrf	Dio_Config@pullType
  1067     0269  0ABB               	incf	Dio_Config@pullType,f
  1068     026A  3003               	movlw	3
  1069     026B  2016               	fcall	_Dio_Config
  1070                           
  1071                           ;Dio.c: 75: Dio_Config (4, 1, 0, 0);
  1072     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1073     026D  01B9               	clrf	Dio_Config@direction
  1074     026E  0AB9               	incf	Dio_Config@direction,f
  1075     026F  01BA               	clrf	Dio_Config@state
  1076     0270  01BB               	clrf	Dio_Config@pullType
  1077     0271  3004               	movlw	4
  1078     0272  2016               	fcall	_Dio_Config
  1079     0273  0008               	return
  1080     0274                     __end_of_Dio_init:
  1081                           
  1082                           	psect	text7
  1083     0016                     __ptext7:	
  1084 ;; *************** function _Dio_Config *****************
  1085 ;; Defined at:
  1086 ;;		line 40 in file "MCAL/scr/Dio.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  pinNumber       1    wreg     unsigned char 
  1089 ;;  direction       1   25[BANK0 ] unsigned char 
  1090 ;;  state           1   26[BANK0 ] unsigned char 
  1091 ;;  pullType        1   27[BANK0 ] unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  pinNumber       1   34[BANK0 ] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, btemp+1
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0
  1103 ;;      Params:         0       3
  1104 ;;      Locals:         0       3
  1105 ;;      Temps:          0       4
  1106 ;;      Totals:         0      10
  1107 ;;Total ram usage:       10 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 5
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_Dio_init
  1114 ;;		_SPI_Init
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118     0016                     _Dio_Config:	
  1119                           ;psect for function _Dio_Config
  1120                           
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  1124                           ;Dio_Config@pinNumber stored from wreg
  1125     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0017  00C2               	movwf	Dio_Config@pinNumber
  1127                           
  1128                           ;Dio.c: 42: TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pinNumber)) : (
      +                          TRISIO & ~(1U << pinNumber)));
  1129     0018  0839               	movf	Dio_Config@direction,w
  1130     0019  1903               	btfsc	3,2
  1131     001A  282F               	goto	l1018
  1132     001B  3001               	movlw	1
  1133     001C  00BC               	movwf	??_Dio_Config
  1134     001D  0A42               	incf	Dio_Config@pinNumber,w
  1135     001E  2821               	goto	u514
  1136     001F                     u515:
  1137     001F  1003               	clrc
  1138     0020  0DBC               	rlf	??_Dio_Config,f
  1139     0021                     u514:
  1140     0021  3EFF               	addlw	-1
  1141     0022  1D03               	skipz
  1142     0023  281F               	goto	u515
  1143     0024  083C               	movf	??_Dio_Config,w
  1144     0025  3AFF               	xorlw	255
  1145     0026  1683               	bsf	3,5	;RP0=1, select bank1
  1146     0027  0505               	andwf	5,w	;volatile
  1147     0028  1283               	bcf	3,5	;RP0=0, select bank0
  1148     0029  00BD               	movwf	??_Dio_Config+1
  1149     002A  01BE               	clrf	??_Dio_Config+2
  1150     002B  083D               	movf	??_Dio_Config+1,w
  1151     002C  00C0               	movwf	_Dio_Config$56
  1152     002D  083E               	movf	??_Dio_Config+2,w
  1153     002E  2845               	goto	L1
  1154     002F                     l1018:
  1155     002F  0A42               	incf	Dio_Config@pinNumber,w
  1156     0030  00DF               	movwf	95
  1157     0031  3001               	movlw	1
  1158     0032  00BC               	movwf	??_Dio_Config
  1159     0033  3000               	movlw	0
  1160     0034  00BD               	movwf	??_Dio_Config+1
  1161     0035  2839               	goto	u524
  1162     0036                     u525:
  1163     0036  1003               	clrc
  1164     0037  0DBC               	rlf	??_Dio_Config,f
  1165     0038  0DBD               	rlf	??_Dio_Config+1,f
  1166     0039                     u524:
  1167     0039  0BDF               	decfsz	95,f
  1168     003A  2836               	goto	u525
  1169     003B  083C               	movf	??_Dio_Config,w
  1170     003C  1683               	bsf	3,5	;RP0=1, select bank1
  1171     003D  0405               	iorwf	5,w	;volatile
  1172     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1173     003F  00BE               	movwf	??_Dio_Config+2
  1174     0040  083D               	movf	??_Dio_Config+1,w
  1175     0041  00BF               	movwf	??_Dio_Config+3
  1176     0042  083E               	movf	??_Dio_Config+2,w
  1177     0043  00C0               	movwf	_Dio_Config$56
  1178     0044  083F               	movf	??_Dio_Config+3,w
  1179     0045                     L1:
  1180     0045  00C1               	movwf	_Dio_Config$56+1
  1181     0046  0840               	movf	_Dio_Config$56,w
  1182     0047  1683               	bsf	3,5	;RP0=1, select bank1
  1183     0048  0085               	movwf	5	;volatile
  1184                           
  1185                           ;Dio.c: 44: if (direction == 1) {
  1186     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1187     004A  0339               	decf	Dio_Config@direction,w
  1188     004B  1D03               	btfss	3,2
  1189     004C  286A               	goto	l1032
  1190                           
  1191                           ;Dio.c: 45: if (state == 1) {
  1192     004D  033A               	decf	Dio_Config@state,w
  1193     004E  1D03               	btfss	3,2
  1194     004F  285C               	goto	l1028
  1195                           
  1196                           ;Dio.c: 46: DIO_State |= (1 << pinNumber);
  1197     0050  3001               	movlw	1
  1198     0051  00BC               	movwf	??_Dio_Config
  1199     0052  0A42               	incf	Dio_Config@pinNumber,w
  1200     0053  2856               	goto	u554
  1201     0054                     u555:
  1202     0054  1003               	clrc
  1203     0055  0DBC               	rlf	??_Dio_Config,f
  1204     0056                     u554:
  1205     0056  3EFF               	addlw	-1
  1206     0057  1D03               	skipz
  1207     0058  2854               	goto	u555
  1208     0059  083C               	movf	??_Dio_Config,w
  1209     005A  04C5               	iorwf	_DIO_State,f
  1210                           
  1211                           ;Dio.c: 47: } else {
  1212     005B  2868               	goto	l1030
  1213     005C                     l1028:
  1214                           
  1215                           ;Dio.c: 48: DIO_State &= ~(1 << pinNumber);
  1216     005C  3001               	movlw	1
  1217     005D  00BC               	movwf	??_Dio_Config
  1218     005E  0A42               	incf	Dio_Config@pinNumber,w
  1219     005F  2862               	goto	u564
  1220     0060                     u565:
  1221     0060  1003               	clrc
  1222     0061  0DBC               	rlf	??_Dio_Config,f
  1223     0062                     u564:
  1224     0062  3EFF               	addlw	-1
  1225     0063  1D03               	skipz
  1226     0064  2860               	goto	u565
  1227     0065  083C               	movf	??_Dio_Config,w
  1228     0066  3AFF               	xorlw	255
  1229     0067  05C5               	andwf	_DIO_State,f
  1230     0068                     l1030:
  1231                           
  1232                           ;Dio.c: 49: };Dio.c: 50: GPIO = DIO_State ;
  1233     0068  0845               	movf	_DIO_State,w
  1234     0069  0085               	movwf	5	;volatile
  1235     006A                     l1032:
  1236                           
  1237                           ;Dio.c: 51: };Dio.c: 52: if (pullType == 1) {
  1238     006A  033B               	decf	Dio_Config@pullType,w
  1239     006B  1D03               	btfss	3,2
  1240     006C  287E               	goto	l1036
  1241                           
  1242                           ;Dio.c: 53: OPTION_REG &= ~(1 << 7);
  1243     006D  307F               	movlw	127
  1244     006E  1683               	bsf	3,5	;RP0=1, select bank1
  1245     006F  0581               	andwf	1,f	;volatile
  1246                           
  1247                           ;Dio.c: 54: WPU |= (1 << pinNumber);
  1248     0070  3001               	movlw	1
  1249     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0072  00BC               	movwf	??_Dio_Config
  1251     0073  0A42               	incf	Dio_Config@pinNumber,w
  1252     0074  2877               	goto	u584
  1253     0075                     u585:
  1254     0075  1003               	clrc
  1255     0076  0DBC               	rlf	??_Dio_Config,f
  1256     0077                     u584:
  1257     0077  3EFF               	addlw	-1
  1258     0078  1D03               	skipz
  1259     0079  2875               	goto	u585
  1260     007A  083C               	movf	??_Dio_Config,w
  1261     007B  1683               	bsf	3,5	;RP0=1, select bank1
  1262     007C  0495               	iorwf	21,f	;volatile
  1263                           
  1264                           ;Dio.c: 55: } else {
  1265     007D  0008               	return
  1266     007E                     l1036:
  1267                           
  1268                           ;Dio.c: 56: WPU &= ~(1 << pinNumber);
  1269     007E  3001               	movlw	1
  1270     007F  00BC               	movwf	??_Dio_Config
  1271     0080  0A42               	incf	Dio_Config@pinNumber,w
  1272     0081  2884               	goto	u594
  1273     0082                     u595:
  1274     0082  1003               	clrc
  1275     0083  0DBC               	rlf	??_Dio_Config,f
  1276     0084                     u594:
  1277     0084  3EFF               	addlw	-1
  1278     0085  1D03               	skipz
  1279     0086  2882               	goto	u595
  1280     0087  083C               	movf	??_Dio_Config,w
  1281     0088  3AFF               	xorlw	255
  1282     0089  1683               	bsf	3,5	;RP0=1, select bank1
  1283     008A  0595               	andwf	21,f	;volatile
  1284     008B  0008               	return
  1285     008C                     __end_of_Dio_Config:
  1286                           
  1287                           	psect	text8
  1288     0274                     __ptext8:	
  1289 ;; *************** function _Adc_Init *****************
  1290 ;; Defined at:
  1291 ;;		line 53 in file "MCAL/scr/Adc.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0
  1305 ;;      Params:         0       0
  1306 ;;      Locals:         0       0
  1307 ;;      Temps:          0       0
  1308 ;;      Totals:         0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 5
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     0274                     _Adc_Init:	
  1320                           ;psect for function _Adc_Init
  1321                           
  1322                           
  1323                           ;Adc.c: 54: ADCON0 |= (1 << 0);
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  1327     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1328     0275  141F               	bsf	31,0	;volatile
  1329                           
  1330                           ;Adc.c: 59: (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  1331     0276  30BF               	movlw	191
  1332     0277  059F               	andwf	31,f	;volatile
  1333     0278  081F               	movf	31,w	;volatile
  1334                           
  1335                           ;Adc.c: 62: (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/1000 )) >= 16
      +                          00) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 / ((4000000)/1
      +                          000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 : ((3200000
  1336     0279  308F               	movlw	143
  1337     027A  1683               	bsf	3,5	;RP0=1, select bank1
  1338     027B  059F               	andwf	31,f	;volatile
  1339     027C  161F               	bsf	31,4	;volatile
  1340                           
  1341                           ;Adc.c: 82: ADCON0 &= ~(1 << 7);
  1342     027D  307F               	movlw	127
  1343     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1344     027F  059F               	andwf	31,f	;volatile
  1345     0280  0008               	return
  1346     0281                     __end_of_Adc_Init:
  1347                           
  1348                           	psect	text9
  1349     0172                     __ptext9:	
  1350 ;; *************** function _ISR *****************
  1351 ;; Defined at:
  1352 ;;		line 50 in file "main.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0
  1366 ;;      Params:         0       0
  1367 ;;      Locals:         0       0
  1368 ;;      Temps:          0       4
  1369 ;;      Totals:         0       4
  1370 ;;Total ram usage:        4 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 4
  1373 ;; This function calls:
  1374 ;;		_MAX7219_DisplayNumber
  1375 ;; This function is called by:
  1376 ;;		Interrupt level 1
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380     0172                     _ISR:	
  1381                           ;psect for function _ISR
  1382                           
  1383                           
  1384                           ;main.c: 52: if (INTCONbits.GPIF) {
  1385     0172  1C0B               	btfss	11,0	;volatile
  1386     0173  298A               	goto	i1l137
  1387                           
  1388                           ;main.c: 54: if ((GPIO & (1 << 3)) && !previous_gp3_state) {
  1389     0174  1D85               	btfss	5,3	;volatile
  1390     0175  2982               	goto	i1l1178
  1391     0176  0844               	movf	_previous_gp3_state,w	;volatile
  1392     0177  1D03               	btfss	3,2
  1393     0178  2982               	goto	i1l1178
  1394                           
  1395                           ;main.c: 56: MAX7219_DisplayNumber(1000);
  1396     0179  3000               	movlw	0
  1397     017A  00B3               	movwf	MAX7219_DisplayNumber@number+3
  1398     017B  3000               	movlw	0
  1399     017C  00B2               	movwf	MAX7219_DisplayNumber@number+2
  1400     017D  3003               	movlw	3
  1401     017E  00B1               	movwf	MAX7219_DisplayNumber@number+1
  1402     017F  30E8               	movlw	232
  1403     0180  00B0               	movwf	MAX7219_DisplayNumber@number
  1404     0181  2134               	fcall	_MAX7219_DisplayNumber
  1405     0182                     i1l1178:
  1406                           
  1407                           ;main.c: 58: };main.c: 61: previous_gp3_state = (GPIO & (1 << 3)) ? 1 : 0;
  1408     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1409     0183  1D85               	btfss	5,3	;volatile
  1410     0184  2987               	goto	u78_20
  1411     0185  3001               	movlw	1
  1412     0186  2988               	goto	u79_20
  1413     0187                     u78_20:
  1414     0187  3000               	movlw	0
  1415     0188                     u79_20:
  1416     0188  00C4               	movwf	_previous_gp3_state	;volatile
  1417                           
  1418                           ;main.c: 64: INTCONbits.GPIF = 0;
  1419     0189  100B               	bcf	11,0	;volatile
  1420     018A                     i1l137:
  1421     018A  0838               	movf	??_ISR+3,w
  1422     018B  0837               	movf	??_ISR+2,w
  1423     018C  008A               	movwf	10
  1424     018D  0836               	movf	??_ISR+1,w
  1425     018E  0084               	movwf	4
  1426     018F  0E35               	swapf	??_ISR,w
  1427     0190  0083               	movwf	3
  1428     0191  0EDE               	swapf	94,f
  1429     0192  0E5E               	swapf	94,w
  1430     0193  0009               	retfie
  1431     0194                     __end_of_ISR:
  1432                           
  1433                           	psect	intentry
  1434     0004                     __pintentry:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1437                           
  1438     0004                     interrupt_function:
  1439     005E                     saved_w         set	btemp
  1440     0004  00DE               	movwf	btemp
  1441     0005  0E03               	swapf	3,w
  1442     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0007  00B5               	movwf	??_ISR
  1444     0008  0804               	movf	4,w
  1445     0009  00B6               	movwf	??_ISR+1
  1446     000A  080A               	movf	10,w
  1447     000B  00B7               	movwf	??_ISR+2
  1448     000C  085F               	movf	btemp+1,w
  1449     000D  00B8               	movwf	??_ISR+3
  1450     000E  2972               	ljmp	_ISR
  1451                           
  1452                           	psect	text10
  1453     0134                     __ptext10:	
  1454 ;; *************** function _MAX7219_DisplayNumber *****************
  1455 ;; Defined at:
  1456 ;;		line 31 in file "HAL/scr/max7219.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  number          4   16[BANK0 ] unsigned long 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  i               1   20[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0
  1470 ;;      Params:         0       4
  1471 ;;      Locals:         0       1
  1472 ;;      Temps:          0       0
  1473 ;;      Totals:         0       5
  1474 ;;Total ram usage:        5 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 3
  1477 ;; This function calls:
  1478 ;;		_MAX7219_DisplayData
  1479 ;;		___lldiv
  1480 ;;		___llmod
  1481 ;; This function is called by:
  1482 ;;		_ISR
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     0134                     _MAX7219_DisplayNumber:	
  1487                           ;psect for function _MAX7219_DisplayNumber
  1488                           
  1489                           
  1490                           ;max7219.c: 32: for (uint8_t i = 0; i < 8; i++) {
  1491                           
  1492                           ;incstack = 0
  1493 ;; using string table level
  1494                           ; Regs used in _MAX7219_DisplayNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1495     0134  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0135  01B4               	clrf	MAX7219_DisplayNumber@i
  1497     0136                     i1l1146:
  1498                           
  1499                           ;max7219.c: 33: MAX7219_DisplayData(0x01+i, MAX7219_No_Table[number % 10]);
  1500     0136  3000               	movlw	0
  1501     0137  00A3               	movwf	___llmod@divisor+3
  1502     0138  3000               	movlw	0
  1503     0139  00A2               	movwf	___llmod@divisor+2
  1504     013A  3000               	movlw	0
  1505     013B  00A1               	movwf	___llmod@divisor+1
  1506     013C  300A               	movlw	10
  1507     013D  00A0               	movwf	___llmod@divisor
  1508     013E  0833               	movf	MAX7219_DisplayNumber@number+3,w
  1509     013F  00A7               	movwf	___llmod@dividend+3
  1510     0140  0832               	movf	MAX7219_DisplayNumber@number+2,w
  1511     0141  00A6               	movwf	___llmod@dividend+2
  1512     0142  0831               	movf	MAX7219_DisplayNumber@number+1,w
  1513     0143  00A5               	movwf	___llmod@dividend+1
  1514     0144  0830               	movf	MAX7219_DisplayNumber@number,w
  1515     0145  00A4               	movwf	___llmod@dividend
  1516     0146  20E9               	fcall	___llmod
  1517     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1518     0148  0820               	movf	?___llmod,w
  1519     0149  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
  1520     014A  0084               	movwf	4
  1521     014B  2255               	fcall	stringdir
  1522     014C  00AA               	movwf	MAX7219_DisplayData@character
  1523     014D  0834               	movf	MAX7219_DisplayNumber@i,w
  1524     014E  3E01               	addlw	1
  1525     014F  221E               	fcall	_MAX7219_DisplayData
  1526                           
  1527                           ;max7219.c: 34: number /= 10;
  1528     0150  3000               	movlw	0
  1529     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1530     0152  00A3               	movwf	___lldiv@divisor+3
  1531     0153  3000               	movlw	0
  1532     0154  00A2               	movwf	___lldiv@divisor+2
  1533     0155  3000               	movlw	0
  1534     0156  00A1               	movwf	___lldiv@divisor+1
  1535     0157  300A               	movlw	10
  1536     0158  00A0               	movwf	___lldiv@divisor
  1537     0159  0833               	movf	MAX7219_DisplayNumber@number+3,w
  1538     015A  00A7               	movwf	___lldiv@dividend+3
  1539     015B  0832               	movf	MAX7219_DisplayNumber@number+2,w
  1540     015C  00A6               	movwf	___lldiv@dividend+2
  1541     015D  0831               	movf	MAX7219_DisplayNumber@number+1,w
  1542     015E  00A5               	movwf	___lldiv@dividend+1
  1543     015F  0830               	movf	MAX7219_DisplayNumber@number,w
  1544     0160  00A4               	movwf	___lldiv@dividend
  1545     0161  208C               	fcall	___lldiv
  1546     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1547     0163  0823               	movf	?___lldiv+3,w
  1548     0164  00B3               	movwf	MAX7219_DisplayNumber@number+3
  1549     0165  0822               	movf	?___lldiv+2,w
  1550     0166  00B2               	movwf	MAX7219_DisplayNumber@number+2
  1551     0167  0821               	movf	?___lldiv+1,w
  1552     0168  00B1               	movwf	MAX7219_DisplayNumber@number+1
  1553     0169  0820               	movf	?___lldiv,w
  1554     016A  00B0               	movwf	MAX7219_DisplayNumber@number
  1555     016B  3001               	movlw	1
  1556     016C  07B4               	addwf	MAX7219_DisplayNumber@i,f
  1557     016D  3008               	movlw	8
  1558     016E  0234               	subwf	MAX7219_DisplayNumber@i,w
  1559     016F  1803               	btfsc	3,0
  1560     0170  0008               	return
  1561     0171  2936               	goto	i1l1146
  1562     0172                     __end_of_MAX7219_DisplayNumber:
  1563                           
  1564                           	psect	text11
  1565     00E9                     __ptext11:	
  1566 ;; *************** function ___llmod *****************
  1567 ;; Defined at:
  1568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\llmod.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  divisor         4    0[BANK0 ] unsigned long 
  1571 ;;  dividend        4    4[BANK0 ] unsigned long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  counter         1    9[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  4    0[BANK0 ] unsigned long 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0
  1583 ;;      Params:         0       8
  1584 ;;      Locals:         0       1
  1585 ;;      Temps:          0       1
  1586 ;;      Totals:         0      10
  1587 ;;Total ram usage:       10 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_MAX7219_DisplayNumber
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596     00E9                     ___llmod:	
  1597                           ;psect for function ___llmod
  1598                           
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1602     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1603     00EA  0823               	movf	___llmod@divisor+3,w
  1604     00EB  0422               	iorwf	___llmod@divisor+2,w
  1605     00EC  0421               	iorwf	___llmod@divisor+1,w
  1606     00ED  0420               	iorwf	___llmod@divisor,w
  1607     00EE  1903               	skipnz
  1608     00EF  292B               	goto	i1l1092
  1609     00F0  3001               	movlw	1
  1610     00F1  00A9               	movwf	___llmod@counter
  1611     00F2                     i1l1082:
  1612     00F2  1BA3               	btfsc	___llmod@divisor+3,7
  1613     00F3  2900               	goto	i1l1084
  1614     00F4  3001               	movlw	1
  1615     00F5  00A8               	movwf	??___llmod
  1616     00F6                     u69_25:
  1617     00F6  1003               	clrc
  1618     00F7  0DA0               	rlf	___llmod@divisor,f
  1619     00F8  0DA1               	rlf	___llmod@divisor+1,f
  1620     00F9  0DA2               	rlf	___llmod@divisor+2,f
  1621     00FA  0DA3               	rlf	___llmod@divisor+3,f
  1622     00FB  0BA8               	decfsz	??___llmod,f
  1623     00FC  28F6               	goto	u69_25
  1624     00FD  3001               	movlw	1
  1625     00FE  07A9               	addwf	___llmod@counter,f
  1626     00FF  28F2               	goto	i1l1082
  1627     0100                     i1l1084:
  1628     0100  0823               	movf	___llmod@divisor+3,w
  1629     0101  0227               	subwf	___llmod@dividend+3,w
  1630     0102  1D03               	skipz
  1631     0103  290E               	goto	u71_25
  1632     0104  0822               	movf	___llmod@divisor+2,w
  1633     0105  0226               	subwf	___llmod@dividend+2,w
  1634     0106  1D03               	skipz
  1635     0107  290E               	goto	u71_25
  1636     0108  0821               	movf	___llmod@divisor+1,w
  1637     0109  0225               	subwf	___llmod@dividend+1,w
  1638     010A  1D03               	skipz
  1639     010B  290E               	goto	u71_25
  1640     010C  0820               	movf	___llmod@divisor,w
  1641     010D  0224               	subwf	___llmod@dividend,w
  1642     010E                     u71_25:
  1643     010E  1C03               	skipc
  1644     010F  291E               	goto	i1l1088
  1645     0110  0820               	movf	___llmod@divisor,w
  1646     0111  02A4               	subwf	___llmod@dividend,f
  1647     0112  0821               	movf	___llmod@divisor+1,w
  1648     0113  1C03               	skipc
  1649     0114  0F21               	incfsz	___llmod@divisor+1,w
  1650     0115  02A5               	subwf	___llmod@dividend+1,f
  1651     0116  0822               	movf	___llmod@divisor+2,w
  1652     0117  1C03               	skipc
  1653     0118  0F22               	incfsz	___llmod@divisor+2,w
  1654     0119  02A6               	subwf	___llmod@dividend+2,f
  1655     011A  0823               	movf	___llmod@divisor+3,w
  1656     011B  1C03               	skipc
  1657     011C  0F23               	incfsz	___llmod@divisor+3,w
  1658     011D  02A7               	subwf	___llmod@dividend+3,f
  1659     011E                     i1l1088:
  1660     011E  3001               	movlw	1
  1661     011F                     u72_25:
  1662     011F  1003               	clrc
  1663     0120  0CA3               	rrf	___llmod@divisor+3,f
  1664     0121  0CA2               	rrf	___llmod@divisor+2,f
  1665     0122  0CA1               	rrf	___llmod@divisor+1,f
  1666     0123  0CA0               	rrf	___llmod@divisor,f
  1667     0124  3EFF               	addlw	-1
  1668     0125  1D03               	skipz
  1669     0126  291F               	goto	u72_25
  1670     0127  3001               	movlw	1
  1671     0128  02A9               	subwf	___llmod@counter,f
  1672     0129  1D03               	btfss	3,2
  1673     012A  2900               	goto	i1l1084
  1674     012B                     i1l1092:
  1675     012B  0827               	movf	___llmod@dividend+3,w
  1676     012C  00A3               	movwf	?___llmod+3
  1677     012D  0826               	movf	___llmod@dividend+2,w
  1678     012E  00A2               	movwf	?___llmod+2
  1679     012F  0825               	movf	___llmod@dividend+1,w
  1680     0130  00A1               	movwf	?___llmod+1
  1681     0131  0824               	movf	___llmod@dividend,w
  1682     0132  00A0               	movwf	?___llmod
  1683     0133  0008               	return
  1684     0134                     __end_of___llmod:
  1685                           
  1686                           	psect	text12
  1687     008C                     __ptext12:	
  1688 ;; *************** function ___lldiv *****************
  1689 ;; Defined at:
  1690 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\__lldiv.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  divisor         4    0[BANK0 ] unsigned long 
  1693 ;;  dividend        4    4[BANK0 ] unsigned long 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  quotient        4    9[BANK0 ] unsigned long 
  1696 ;;  counter         1   13[BANK0 ] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  4    0[BANK0 ] unsigned long 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0
  1706 ;;      Params:         0       8
  1707 ;;      Locals:         0       5
  1708 ;;      Temps:          0       1
  1709 ;;      Totals:         0      14
  1710 ;;Total ram usage:       14 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_MAX7219_DisplayNumber
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719     008C                     ___lldiv:	
  1720                           ;psect for function ___lldiv
  1721                           
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1725     008C  3000               	movlw	0
  1726     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1727     008E  00AC               	movwf	___lldiv@quotient+3
  1728     008F  3000               	movlw	0
  1729     0090  00AB               	movwf	___lldiv@quotient+2
  1730     0091  3000               	movlw	0
  1731     0092  00AA               	movwf	___lldiv@quotient+1
  1732     0093  3000               	movlw	0
  1733     0094  00A9               	movwf	___lldiv@quotient
  1734     0095  0823               	movf	___lldiv@divisor+3,w
  1735     0096  0422               	iorwf	___lldiv@divisor+2,w
  1736     0097  0421               	iorwf	___lldiv@divisor+1,w
  1737     0098  0420               	iorwf	___lldiv@divisor,w
  1738     0099  1903               	skipnz
  1739     009A  28E0               	goto	i1l1072
  1740     009B  3001               	movlw	1
  1741     009C  00AD               	movwf	___lldiv@counter
  1742     009D                     i1l1058:
  1743     009D  1BA3               	btfsc	___lldiv@divisor+3,7
  1744     009E  28AB               	goto	i1l1060
  1745     009F  3001               	movlw	1
  1746     00A0  00A8               	movwf	??___lldiv
  1747     00A1                     u62_25:
  1748     00A1  1003               	clrc
  1749     00A2  0DA0               	rlf	___lldiv@divisor,f
  1750     00A3  0DA1               	rlf	___lldiv@divisor+1,f
  1751     00A4  0DA2               	rlf	___lldiv@divisor+2,f
  1752     00A5  0DA3               	rlf	___lldiv@divisor+3,f
  1753     00A6  0BA8               	decfsz	??___lldiv,f
  1754     00A7  28A1               	goto	u62_25
  1755     00A8  3001               	movlw	1
  1756     00A9  07AD               	addwf	___lldiv@counter,f
  1757     00AA  289D               	goto	i1l1058
  1758     00AB                     i1l1060:
  1759     00AB  3001               	movlw	1
  1760     00AC  00A8               	movwf	??___lldiv
  1761     00AD                     u64_25:
  1762     00AD  1003               	clrc
  1763     00AE  0DA9               	rlf	___lldiv@quotient,f
  1764     00AF  0DAA               	rlf	___lldiv@quotient+1,f
  1765     00B0  0DAB               	rlf	___lldiv@quotient+2,f
  1766     00B1  0DAC               	rlf	___lldiv@quotient+3,f
  1767     00B2  0BA8               	decfsz	??___lldiv,f
  1768     00B3  28AD               	goto	u64_25
  1769     00B4  0823               	movf	___lldiv@divisor+3,w
  1770     00B5  0227               	subwf	___lldiv@dividend+3,w
  1771     00B6  1D03               	skipz
  1772     00B7  28C2               	goto	u65_25
  1773     00B8  0822               	movf	___lldiv@divisor+2,w
  1774     00B9  0226               	subwf	___lldiv@dividend+2,w
  1775     00BA  1D03               	skipz
  1776     00BB  28C2               	goto	u65_25
  1777     00BC  0821               	movf	___lldiv@divisor+1,w
  1778     00BD  0225               	subwf	___lldiv@dividend+1,w
  1779     00BE  1D03               	skipz
  1780     00BF  28C2               	goto	u65_25
  1781     00C0  0820               	movf	___lldiv@divisor,w
  1782     00C1  0224               	subwf	___lldiv@dividend,w
  1783     00C2                     u65_25:
  1784     00C2  1C03               	skipc
  1785     00C3  28D3               	goto	i1l1068
  1786     00C4  0820               	movf	___lldiv@divisor,w
  1787     00C5  02A4               	subwf	___lldiv@dividend,f
  1788     00C6  0821               	movf	___lldiv@divisor+1,w
  1789     00C7  1C03               	skipc
  1790     00C8  0F21               	incfsz	___lldiv@divisor+1,w
  1791     00C9  02A5               	subwf	___lldiv@dividend+1,f
  1792     00CA  0822               	movf	___lldiv@divisor+2,w
  1793     00CB  1C03               	skipc
  1794     00CC  0F22               	incfsz	___lldiv@divisor+2,w
  1795     00CD  02A6               	subwf	___lldiv@dividend+2,f
  1796     00CE  0823               	movf	___lldiv@divisor+3,w
  1797     00CF  1C03               	skipc
  1798     00D0  0F23               	incfsz	___lldiv@divisor+3,w
  1799     00D1  02A7               	subwf	___lldiv@dividend+3,f
  1800     00D2  1429               	bsf	___lldiv@quotient,0
  1801     00D3                     i1l1068:
  1802     00D3  3001               	movlw	1
  1803     00D4                     u66_25:
  1804     00D4  1003               	clrc
  1805     00D5  0CA3               	rrf	___lldiv@divisor+3,f
  1806     00D6  0CA2               	rrf	___lldiv@divisor+2,f
  1807     00D7  0CA1               	rrf	___lldiv@divisor+1,f
  1808     00D8  0CA0               	rrf	___lldiv@divisor,f
  1809     00D9  3EFF               	addlw	-1
  1810     00DA  1D03               	skipz
  1811     00DB  28D4               	goto	u66_25
  1812     00DC  3001               	movlw	1
  1813     00DD  02AD               	subwf	___lldiv@counter,f
  1814     00DE  1D03               	btfss	3,2
  1815     00DF  28AB               	goto	i1l1060
  1816     00E0                     i1l1072:
  1817     00E0  082C               	movf	___lldiv@quotient+3,w
  1818     00E1  00A3               	movwf	?___lldiv+3
  1819     00E2  082B               	movf	___lldiv@quotient+2,w
  1820     00E3  00A2               	movwf	?___lldiv+2
  1821     00E4  082A               	movf	___lldiv@quotient+1,w
  1822     00E5  00A1               	movwf	?___lldiv+1
  1823     00E6  0829               	movf	___lldiv@quotient,w
  1824     00E7  00A0               	movwf	?___lldiv
  1825     00E8  0008               	return
  1826     00E9                     __end_of___lldiv:
  1827                           
  1828                           	psect	text13
  1829     021E                     __ptext13:	
  1830 ;; *************** function _MAX7219_DisplayData *****************
  1831 ;; Defined at:
  1832 ;;		line 26 in file "HAL/scr/max7219.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  digit           1    wreg     unsigned char 
  1835 ;;  character       1   10[BANK0 ] unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  digit           1   15[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0
  1847 ;;      Params:         0       1
  1848 ;;      Locals:         0       1
  1849 ;;      Temps:          0       4
  1850 ;;      Totals:         0       6
  1851 ;;Total ram usage:        6 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 2
  1854 ;; This function calls:
  1855 ;;		i1_SPI_Send_16bit
  1856 ;; This function is called by:
  1857 ;;		_MAX7219_DisplayNumber
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861     021E                     _MAX7219_DisplayData:	
  1862                           ;psect for function _MAX7219_DisplayData
  1863                           
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1867                           ;MAX7219_DisplayData@digit stored from wreg
  1868     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1869     021F  00AF               	movwf	MAX7219_DisplayData@digit
  1870                           
  1871                           ;max7219.c: 27: SPI_Send_16bit((digit) << 8 | character);
  1872     0220  082A               	movf	MAX7219_DisplayData@character,w
  1873     0221  00AB               	movwf	??_MAX7219_DisplayData
  1874     0222  01AC               	clrf	??_MAX7219_DisplayData+1
  1875     0223  082F               	movf	MAX7219_DisplayData@digit,w
  1876     0224  00AD               	movwf	??_MAX7219_DisplayData+2
  1877     0225  01AE               	clrf	??_MAX7219_DisplayData+3
  1878     0226  082D               	movf	??_MAX7219_DisplayData+2,w
  1879     0227  00AE               	movwf	??_MAX7219_DisplayData+3
  1880     0228  01AD               	clrf	??_MAX7219_DisplayData+2
  1881     0229  082B               	movf	??_MAX7219_DisplayData,w
  1882     022A  042D               	iorwf	??_MAX7219_DisplayData+2,w
  1883     022B  00A3               	movwf	i1SPI_Send_16bit@data
  1884     022C  082C               	movf	??_MAX7219_DisplayData+1,w
  1885     022D  042E               	iorwf	??_MAX7219_DisplayData+3,w
  1886     022E  00A4               	movwf	i1SPI_Send_16bit@data+1
  1887     022F  2243               	fcall	i1_SPI_Send_16bit
  1888     0230  0008               	return
  1889     0231                     __end_of_MAX7219_DisplayData:
  1890                           
  1891                           	psect	text14
  1892     0243                     __ptext14:	
  1893 ;; *************** function i1_SPI_Send_16bit *****************
  1894 ;; Defined at:
  1895 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  data            2    3[BANK0 ] unsigned short 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  i               1    5[BANK0 ] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0
  1909 ;;      Params:         0       2
  1910 ;;      Locals:         0       1
  1911 ;;      Temps:          0       0
  1912 ;;      Totals:         0       3
  1913 ;;Total ram usage:        3 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 1
  1916 ;; This function calls:
  1917 ;;		i1_Dio_Pin_Write
  1918 ;; This function is called by:
  1919 ;;		_MAX7219_DisplayData
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     0243                     i1_SPI_Send_16bit:	
  1924                           ;psect for function i1_SPI_Send_16bit
  1925                           
  1926                           
  1927                           ;Spi.c: 42: uint8 i;;Spi.c: 43: for (i = 1; i <= 5; i++) {
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in i1_SPI_Send_16bit: [wreg+status,2+status,0+pclath+cstack]
  1931     0243  3001               	movlw	1
  1932     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1933     0245  00A5               	movwf	i1SPI_Send_16bit@i
  1934     0246                     i1l1008:
  1935     0246  3001               	movlw	1
  1936     0247  07A5               	addwf	i1SPI_Send_16bit@i,f
  1937     0248  3006               	movlw	6
  1938     0249  0225               	subwf	i1SPI_Send_16bit@i,w
  1939     024A  1C03               	skipc
  1940     024B  2A46               	goto	i1l1008
  1941                           
  1942                           ;Spi.c: 44: };Spi.c: 46: Dio_Pin_Write(5, 0);
  1943     024C  01A0               	clrf	i1Dio_Pin_Write@state
  1944     024D  3005               	movlw	5
  1945     024E  21B4               	fcall	i1_Dio_Pin_Write
  1946                           
  1947                           ;Spi.c: 64: Dio_Pin_Write(5, 1);
  1948     024F  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0250  01A0               	clrf	i1Dio_Pin_Write@state
  1950     0251  0AA0               	incf	i1Dio_Pin_Write@state,f
  1951     0252  3005               	movlw	5
  1952     0253  21B4               	fcall	i1_Dio_Pin_Write
  1953     0254  0008               	return
  1954     0255                     __end_ofi1_SPI_Send_16bit:
  1955                           
  1956                           	psect	text15
  1957     01B4                     __ptext15:	
  1958 ;; *************** function i1_Dio_Pin_Write *****************
  1959 ;; Defined at:
  1960 ;;		line 29 in file "MCAL/scr/Dio.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  pinNumber       1    wreg     unsigned char 
  1963 ;;  state           1    0[BANK0 ] unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  pinNumber       1    2[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0
  1975 ;;      Params:         0       1
  1976 ;;      Locals:         0       1
  1977 ;;      Temps:          0       1
  1978 ;;      Totals:         0       3
  1979 ;;Total ram usage:        3 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		i1_SPI_Send_16bit
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988     01B4                     i1_Dio_Pin_Write:	
  1989                           ;psect for function i1_Dio_Pin_Write
  1990                           
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in i1_Dio_Pin_Write: [wreg+status,2+status,0]
  1994                           ;i1Dio_Pin_Write@pinNumber stored from wreg
  1995     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1996     01B5  00A2               	movwf	i1Dio_Pin_Write@pinNumber
  1997                           
  1998                           ;Dio.c: 31: if (state == 1) {
  1999     01B6  0320               	decf	i1Dio_Pin_Write@state,w
  2000     01B7  1D03               	btfss	3,2
  2001     01B8  29C5               	goto	i1l990
  2002                           
  2003                           ;Dio.c: 32: DIO_State |= (1 << pinNumber);
  2004     01B9  3001               	movlw	1
  2005     01BA  00A1               	movwf	??i1_Dio_Pin_Write
  2006     01BB  0A22               	incf	i1Dio_Pin_Write@pinNumber,w
  2007     01BC  29BF               	goto	u44_24
  2008     01BD                     u44_25:
  2009     01BD  1003               	clrc
  2010     01BE  0DA1               	rlf	??i1_Dio_Pin_Write,f
  2011     01BF                     u44_24:
  2012     01BF  3EFF               	addlw	-1
  2013     01C0  1D03               	skipz
  2014     01C1  29BD               	goto	u44_25
  2015     01C2  0821               	movf	??i1_Dio_Pin_Write,w
  2016     01C3  04C5               	iorwf	_DIO_State,f
  2017                           
  2018                           ;Dio.c: 33: }
  2019     01C4  29D1               	goto	i1l992
  2020     01C5                     i1l990:
  2021                           
  2022                           ;Dio.c: 34: else {;Dio.c: 35: DIO_State &= ~(1 << pinNumber);
  2023     01C5  3001               	movlw	1
  2024     01C6  00A1               	movwf	??i1_Dio_Pin_Write
  2025     01C7  0A22               	incf	i1Dio_Pin_Write@pinNumber,w
  2026     01C8  29CB               	goto	u45_24
  2027     01C9                     u45_25:
  2028     01C9  1003               	clrc
  2029     01CA  0DA1               	rlf	??i1_Dio_Pin_Write,f
  2030     01CB                     u45_24:
  2031     01CB  3EFF               	addlw	-1
  2032     01CC  1D03               	skipz
  2033     01CD  29C9               	goto	u45_25
  2034     01CE  0821               	movf	??i1_Dio_Pin_Write,w
  2035     01CF  3AFF               	xorlw	255
  2036     01D0  05C5               	andwf	_DIO_State,f
  2037     01D1                     i1l992:
  2038                           
  2039                           ;Dio.c: 36: };Dio.c: 37: GPIO = DIO_State ;
  2040     01D1  0845               	movf	_DIO_State,w
  2041     01D2  0085               	movwf	5	;volatile
  2042     01D3  0008               	return
  2043     01D4                     __end_ofi1_Dio_Pin_Write:
  2044     0000                     ___latbits      equ	0
  2045     005E                     btemp           set	94	;btemp
  2046     005E                     wtemp0          set	94
  2047                           
  2048                           	psect	config
  2049                           
  2050                           ;Config register CONFIG @ 0x2007
  2051                           ;	Oscillator Selection bits
  2052                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2053                           ;	Watchdog Timer Enable bit
  2054                           ;	WDTE = OFF, WDT disabled
  2055                           ;	Power-Up Timer Enable bit
  2056                           ;	PWRTE = OFF, PWRT disabled
  2057                           ;	GP3/MCLR pin function select
  2058                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2059                           ;	Brown-out Detect Enable bit
  2060                           ;	BOREN = OFF, BOD disabled
  2061                           ;	Code Protection bit
  2062                           ;	CP = OFF, Program Memory code protection is disabled
  2063                           ;	Data Code Protection bit
  2064                           ;	CPD = OFF, Data memory code protection is disabled
  2065     2007                     	org	8199
  2066     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     35      38

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_MAX7219_DisplayNumber
    _MAX7219_DisplayNumber->_MAX7219_DisplayData
    _MAX7219_DisplayData->___llmod
    i1_SPI_Send_16bit->i1_Dio_Pin_Write

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     881
                           _Adc_Init
                           _Dio_init
                          _Gpio_Init
                       _MAX7219_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     135
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       3     1      2     135
                                             28 BANK0      3     1      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      82
                                             25 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                             25 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0     620
                                             21 BANK0      4     4      0
              _MAX7219_DisplayNumber
 ---------------------------------------------------------------------------------
 (5) _MAX7219_DisplayNumber                                5     1      4     620
                                             16 BANK0      5     1      4
                _MAX7219_DisplayData
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     161
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     164
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (6) _MAX7219_DisplayData                                  6     5      1     181
                                             10 BANK0      6     5      1
                            ___llmod (ARG)
                   i1_SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (7) i1_SPI_Send_16bit                                     3     1      2     129
                                              3 BANK0      3     1      2
                    i1_Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (8) i1_Dio_Pin_Write                                      3     2      1      82
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_Init
     _SPI_Send_16bit
       _Dio_Pin_Write
   _SPI_Init
     _Dio_Config

 _ISR (ROOT)
   _MAX7219_DisplayNumber
     _MAX7219_DisplayData
       ___llmod (ARG)
       i1_SPI_Send_16bit (ARG)
         i1_Dio_Pin_Write
     ___lldiv
     ___llmod

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     35      38     61.3%
STACK                0      0       0      0.0%
DATA                 0      0      38      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 17:30:58 2024

                            pc 0002                             fsr 0004          __end_of_Dio_Pin_Write 01B4  
               _SPI_Send_16bit 0231                            l127 028B                            l998 01A5  
                          u514 0021                            u515 001F                            u524 0039  
                          _ISR 0172                            u525 0036                            u554 0056  
                          u474 019F                            u555 0054                            u475 019D  
                          u564 0062                            u484 01AB                            u565 0060  
                          u485 01A9                            u584 0077                            u585 0075  
                          u594 0084                            u595 0082                            _WPU 0095  
                          fsr0 0004                           ?_ISR 0020                           l1000 01B1  
                         l1030 0068                           l1032 006A                           l1018 002F  
                         l1036 007E                           l1028 005C                           l1044 0234  
                         _IOCB 0096                           _GPIO 0005                           _main 0281  
                         btemp 005E                     _Dio_Config 0016       i1Dio_Pin_Write@pinNumber 0022  
                         start 000F                          ??_ISR 0035         __end_of_SPI_Send_16bit 0243  
       ?_MAX7219_DisplayNumber 0030                          ?_main 0020                          _ANSEL 009F  
              __end_of___lldiv 00E9                __end_of___llmod 0134                          i1l137 018A  
                        i1l990 01C5                          i1l992 01D1                          u44_24 01BF  
                        u44_25 01BD                          u45_24 01CB                          u45_25 01C9  
                        u62_25 00A1                          u71_25 010E                          u64_25 00AD  
                        u72_25 011F                          u65_25 00C2                          u66_25 00D4  
                        u69_25 00F6                          u78_20 0187                          u79_20 0188  
             __end_of_Adc_Init 0281         MAX7219_DisplayNumber@i 0034               __end_of_SPI_Init 020B  
                        pclath 000A           __end_of_MAX7219_Init 01F3                          status 0003  
                        wtemp0 005E               __end_of_Dio_init 0274                __initialization 0010  
                 __end_of_main 028C                ?_SPI_Send_16bit 003C                         ??_main 0000  
              SPI_Send_16bit@i 003E                         _ADCON0 001F               ___llmod@dividend 0024  
                       _ADRESH 001E                         _ADRESL 009E                         i1l1008 0246  
                       i1l1060 00AB                         i1l1072 00E0                         i1l1058 009D  
                       i1l1082 00F2                         i1l1146 0136                         i1l1068 00D3  
                       i1l1084 0100                         i1l1092 012B                         i1l1088 011E  
                       i1l1178 0182                         _TRISIO 0085                    ?_Dio_Config 0039  
                    ??___lldiv 0028                      ??___llmod 0028             SPI_Send_16bit@data 003C  
                       saved_w 005E            _MAX7219_DisplayData 021E        __end_of__initialization 0014  
     MAX7219_DisplayData@digit 002F           ?_MAX7219_DisplayData 002A                 __pcstackCOMMON 0000  
                    ?_Adc_Init 0020              __end_of_Gpio_Init 021E                      ?_SPI_Init 0020  
                    ?_Dio_init 0020                     __pbssBANK0 0043               i1_SPI_Send_16bit 0243  
        ??_MAX7219_DisplayData 002B                     __pmaintext 0281         Dio_Pin_Write@pinNumber 003B  
      ??_MAX7219_DisplayNumber 0000                     __pintentry 0004                     ??_Adc_Init 0000  
                   ??_SPI_Init 0000                   _MAX7219_Init 01D4             Dio_Config@pullType 003B  
                   ??_Dio_init 0000                     __stringtab 0255              ??i1_Dio_Pin_Write 0021  
             ??_SPI_Send_16bit 0000                        ___lldiv 008C                        ___llmod 00E9  
                      __ptext1 01F3                        __ptext2 01D4                        __ptext3 0231  
                      __ptext4 0194                        __ptext5 020B                        __ptext6 0265  
                      __ptext7 0016                        __ptext8 0274                        __ptext9 0172  
                    _DIO_State 0045           end_of_initialization 0014                  _Dio_Config$56 0040  
                 ??_Dio_Config 003C                ___lldiv@divisor 0020                ___lldiv@counter 002D  
                _Dio_Pin_Write 0194             __end_of_Dio_Config 008C           i1Dio_Pin_Write@state 0020  
     __end_ofi1_SPI_Send_16bit 0255                 ?_Dio_Pin_Write 0039                      _Gpio_Init 020B  
          start_initialization 0010   MAX7219_DisplayData@character 002A                    __end_of_ISR 0194  
                  _BCD_Enabled 0043                ___llmod@divisor 0020                ___llmod@counter 0029  
__end_of_MAX7219_DisplayNumber 0172                     ?_Gpio_Init 0020                      ___latbits 0000  
                __pcstackBANK0 0020                i1_Dio_Pin_Write 01B4    __end_of_MAX7219_DisplayData 0231  
             _MAX7219_No_Table 025B            Dio_Config@direction 0039                Dio_Config@state 003A  
                     ?___lldiv 0020                       ?___llmod 0020                ??_Dio_Pin_Write 003A  
                    __pstrings 0255            Dio_Config@pinNumber 0042              interrupt_function 0004  
            i1SPI_Send_16bit@i 0025                       _Adc_Init 0274                       _SPI_Init 01F3  
      __end_ofi1_Dio_Pin_Write 01D4                    __stringbase 025A                    ??_Gpio_Init 0000  
                     _Dio_init 0265             Dio_Pin_Write@state 0039             _previous_gp3_state 0044  
            ?i1_SPI_Send_16bit 0023             __end_of__stringtab 025B             ??i1_SPI_Send_16bit 0000  
                     __ptext10 0134                       __ptext11 00E9                       __ptext12 008C  
                     __ptext13 021E                       __ptext14 0243                       __ptext15 01B4  
  MAX7219_DisplayNumber@number 0030                  ?_MAX7219_Init 0020               ?i1_Dio_Pin_Write 0020  
                   _INTCONbits 000B       __end_of_MAX7219_No_Table 0265                       intlevel1 0000  
             ___lldiv@dividend 0024                      stringcode 0255                 ??_MAX7219_Init 0000  
                   _OPTION_REG 0081          _MAX7219_DisplayNumber 0134           i1SPI_Send_16bit@data 0023  
             ___lldiv@quotient 0029                       stringdir 0255                       stringtab 0255  
