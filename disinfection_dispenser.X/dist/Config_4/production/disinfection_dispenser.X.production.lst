

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 21:50:17 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x5E,2
    30     0000                     
    31                           ; Generated 17/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F675 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     GPIO            equ	5	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0019                     CMCON           equ	25	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISIO          equ	133	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008E                     PCON            equ	142	;# 
    93     0090                     OSCCAL          equ	144	;# 
    94     0095                     WPU             equ	149	;# 
    95     0096                     IOC             equ	150	;# 
    96     0096                     IOCB            equ	150	;# 
    97     0099                     VRCON           equ	153	;# 
    98     009A                     EEDATA          equ	154	;# 
    99     009A                     EEDAT           equ	154	;# 
   100     009B                     EEADR           equ	155	;# 
   101     009C                     EECON1          equ	156	;# 
   102     009D                     EECON2          equ	157	;# 
   103     009E                     ADRESL          equ	158	;# 
   104     009F                     ANSEL           equ	159	;# 
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     GPIO            equ	5	;# 
   111     000A                     PCLATH          equ	10	;# 
   112     000B                     INTCON          equ	11	;# 
   113     000C                     PIR1            equ	12	;# 
   114     000E                     TMR1            equ	14	;# 
   115     000E                     TMR1L           equ	14	;# 
   116     000F                     TMR1H           equ	15	;# 
   117     0010                     T1CON           equ	16	;# 
   118     0019                     CMCON           equ	25	;# 
   119     001E                     ADRESH          equ	30	;# 
   120     001F                     ADCON0          equ	31	;# 
   121     0081                     OPTION_REG      equ	129	;# 
   122     0085                     TRISIO          equ	133	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008E                     PCON            equ	142	;# 
   125     0090                     OSCCAL          equ	144	;# 
   126     0095                     WPU             equ	149	;# 
   127     0096                     IOC             equ	150	;# 
   128     0096                     IOCB            equ	150	;# 
   129     0099                     VRCON           equ	153	;# 
   130     009A                     EEDATA          equ	154	;# 
   131     009A                     EEDAT           equ	154	;# 
   132     009B                     EEADR           equ	155	;# 
   133     009C                     EECON1          equ	156	;# 
   134     009D                     EECON2          equ	157	;# 
   135     009E                     ADRESL          equ	158	;# 
   136     009F                     ANSEL           equ	159	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     GPIO            equ	5	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0019                     CMCON           equ	25	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISIO          equ	133	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008E                     PCON            equ	142	;# 
   157     0090                     OSCCAL          equ	144	;# 
   158     0095                     WPU             equ	149	;# 
   159     0096                     IOC             equ	150	;# 
   160     0096                     IOCB            equ	150	;# 
   161     0099                     VRCON           equ	153	;# 
   162     009A                     EEDATA          equ	154	;# 
   163     009A                     EEDAT           equ	154	;# 
   164     009B                     EEADR           equ	155	;# 
   165     009C                     EECON1          equ	156	;# 
   166     009D                     EECON2          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ANSEL           equ	159	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     GPIO            equ	5	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0019                     CMCON           equ	25	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISIO          equ	133	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008E                     PCON            equ	142	;# 
   189     0090                     OSCCAL          equ	144	;# 
   190     0095                     WPU             equ	149	;# 
   191     0096                     IOC             equ	150	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0099                     VRCON           equ	153	;# 
   194     009A                     EEDATA          equ	154	;# 
   195     009A                     EEDAT           equ	154	;# 
   196     009B                     EEADR           equ	155	;# 
   197     009C                     EECON1          equ	156	;# 
   198     009D                     EECON2          equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ANSEL           equ	159	;# 
   201     0000                     INDF            equ	0	;# 
   202     0001                     TMR0            equ	1	;# 
   203     0002                     PCL             equ	2	;# 
   204     0003                     STATUS          equ	3	;# 
   205     0004                     FSR             equ	4	;# 
   206     0005                     GPIO            equ	5	;# 
   207     000A                     PCLATH          equ	10	;# 
   208     000B                     INTCON          equ	11	;# 
   209     000C                     PIR1            equ	12	;# 
   210     000E                     TMR1            equ	14	;# 
   211     000E                     TMR1L           equ	14	;# 
   212     000F                     TMR1H           equ	15	;# 
   213     0010                     T1CON           equ	16	;# 
   214     0019                     CMCON           equ	25	;# 
   215     001E                     ADRESH          equ	30	;# 
   216     001F                     ADCON0          equ	31	;# 
   217     0081                     OPTION_REG      equ	129	;# 
   218     0085                     TRISIO          equ	133	;# 
   219     008C                     PIE1            equ	140	;# 
   220     008E                     PCON            equ	142	;# 
   221     0090                     OSCCAL          equ	144	;# 
   222     0095                     WPU             equ	149	;# 
   223     0096                     IOC             equ	150	;# 
   224     0096                     IOCB            equ	150	;# 
   225     0099                     VRCON           equ	153	;# 
   226     009A                     EEDATA          equ	154	;# 
   227     009A                     EEDAT           equ	154	;# 
   228     009B                     EEADR           equ	155	;# 
   229     009C                     EECON1          equ	156	;# 
   230     009D                     EECON2          equ	157	;# 
   231     009E                     ADRESL          equ	158	;# 
   232     009F                     ANSEL           equ	159	;# 
   233     0000                     INDF            equ	0	;# 
   234     0001                     TMR0            equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR             equ	4	;# 
   238     0005                     GPIO            equ	5	;# 
   239     000A                     PCLATH          equ	10	;# 
   240     000B                     INTCON          equ	11	;# 
   241     000C                     PIR1            equ	12	;# 
   242     000E                     TMR1            equ	14	;# 
   243     000E                     TMR1L           equ	14	;# 
   244     000F                     TMR1H           equ	15	;# 
   245     0010                     T1CON           equ	16	;# 
   246     0019                     CMCON           equ	25	;# 
   247     001E                     ADRESH          equ	30	;# 
   248     001F                     ADCON0          equ	31	;# 
   249     0081                     OPTION_REG      equ	129	;# 
   250     0085                     TRISIO          equ	133	;# 
   251     008C                     PIE1            equ	140	;# 
   252     008E                     PCON            equ	142	;# 
   253     0090                     OSCCAL          equ	144	;# 
   254     0095                     WPU             equ	149	;# 
   255     0096                     IOC             equ	150	;# 
   256     0096                     IOCB            equ	150	;# 
   257     0099                     VRCON           equ	153	;# 
   258     009A                     EEDATA          equ	154	;# 
   259     009A                     EEDAT           equ	154	;# 
   260     009B                     EEADR           equ	155	;# 
   261     009C                     EECON1          equ	156	;# 
   262     009D                     EECON2          equ	157	;# 
   263     009E                     ADRESL          equ	158	;# 
   264     009F                     ANSEL           equ	159	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     GPIO            equ	5	;# 
   271     000A                     PCLATH          equ	10	;# 
   272     000B                     INTCON          equ	11	;# 
   273     000C                     PIR1            equ	12	;# 
   274     000E                     TMR1            equ	14	;# 
   275     000E                     TMR1L           equ	14	;# 
   276     000F                     TMR1H           equ	15	;# 
   277     0010                     T1CON           equ	16	;# 
   278     0019                     CMCON           equ	25	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISIO          equ	133	;# 
   283     008C                     PIE1            equ	140	;# 
   284     008E                     PCON            equ	142	;# 
   285     0090                     OSCCAL          equ	144	;# 
   286     0095                     WPU             equ	149	;# 
   287     0096                     IOC             equ	150	;# 
   288     0096                     IOCB            equ	150	;# 
   289     0099                     VRCON           equ	153	;# 
   290     009A                     EEDATA          equ	154	;# 
   291     009A                     EEDAT           equ	154	;# 
   292     009B                     EEADR           equ	155	;# 
   293     009C                     EECON1          equ	156	;# 
   294     009D                     EECON2          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ANSEL           equ	159	;# 
   297                           
   298                           	psect	strings
   299     039F                     __pstrings:
   300     039F                     stringtab:
   301     039F                     __stringtab:
   302     039F                     stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305     039F                     stringdir:
   306     039F  3003               	movlw	high stringdir
   307     03A0  008A               	movwf	10
   308     03A1  0804               	movf	4,w
   309     03A2  0A84               	incf	4,f
   310     03A3  0782               	addwf	2,f
   311     03A4                     __stringbase:
   312     03A4  3400               	retlw	0
   313     03A5                     __end_of__stringtab:
   314     03A5                     _MAX7219_No_Table:
   315     03A5  347E               	retlw	126
   316     03A6  3430               	retlw	48
   317     03A7  346D               	retlw	109
   318     03A8  3479               	retlw	121
   319     03A9  3433               	retlw	51
   320     03AA  345B               	retlw	91
   321     03AB  345F               	retlw	95
   322     03AC  3470               	retlw	112
   323     03AD  347F               	retlw	127
   324     03AE  347B               	retlw	123
   325     03AF                     __end_of_MAX7219_No_Table:
   326     000B                     _INTCONbits     set	11
   327     0005                     _GPIO           set	5
   328     001E                     _ADRESH         set	30
   329     001F                     _ADCON0         set	31
   330     0096                     _IOCB           set	150
   331     0095                     _WPU            set	149
   332     0081                     _OPTION_REG     set	129
   333     0085                     _TRISIO         set	133
   334     009E                     _ADRESL         set	158
   335     009F                     _ANSEL          set	159
   336                           
   337                           	psect	cinit
   338     000C                     start_initialization:	
   339                           ; #config settings
   340                           
   341     000C                     __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344     000C  1283               	bcf	3,5	;RP0=0, select bank0
   345     000D  01C8               	clrf	__pbssBANK0& (0+127)
   346     000E  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   347     000F  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   348     0010  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   349     0011  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   350     0012                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353     0012                     __end_of__initialization:
   354     0012  0183               	clrf	3
   355     0013  2814               	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358     0048                     __pbssBANK0:
   359     0048                     _Counter:
   360     0048                     	ds	2
   361     004A                     _DispenserOn:
   362     004A                     	ds	1
   363     004B                     _DIO_State:
   364     004B                     	ds	1
   365     004C                     _BCD_Enabled:
   366     004C                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0000                     __pcstackCOMMON:
   370     0000                     ??_MAX7219_Init:
   371     0000                     ??_Adc_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0000                     ??_Dio_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0000                     ??_Gpio_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0000                     ??_SPI_Init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0000                     ??___lwdiv:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0000                     ??___lwmod:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           	psect	cstackBANK0
   391     0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0020                     ?_MAX7219_Init:
   395     0020                     ?_MAX7219_ClearDisplay:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0020                     ?_Adc_Init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0020                     ?_Adc_StartConversion:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     ?_Dio_Pin_Read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0020                     ?_Dio_init:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0020                     ?_Gpio_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ?_SPI_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     ?_ISR:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0020                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0020                     ??_Dio_Pin_Read:	
   423                           ; 2 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427     0020                     	ds	1
   428     0021                     Dio_Pin_Read@pinNumber:
   429                           
   430                           ; 1 bytes @ 0x1
   431     0021                     	ds	1
   432     0022                     ??_ISR:
   433                           
   434                           ; 1 bytes @ 0x2
   435     0022                     	ds	3
   436     0025                     ISR@i:
   437                           
   438                           ; 2 bytes @ 0x5
   439     0025                     	ds	2
   440     0027                     ?_Dio_Pin_Write:
   441     0027                     ?_Dio_Config:	
   442                           ; 1 bytes @ 0x7
   443                           
   444     0027                     ?_Adc_ReadResult:	
   445                           ; 1 bytes @ 0x7
   446                           
   447     0027                     ?___lwdiv:	
   448                           ; 2 bytes @ 0x7
   449                           
   450     0027                     Dio_Pin_Write@state:	
   451                           ; 2 bytes @ 0x7
   452                           
   453     0027                     Dio_Config@direction:	
   454                           ; 1 bytes @ 0x7
   455                           
   456     0027                     ___lwdiv@divisor:	
   457                           ; 1 bytes @ 0x7
   458                           
   459     0027                     ??_Adc_StartConversion:	
   460                           ; 2 bytes @ 0x7
   461                           
   462                           
   463                           ; 1 bytes @ 0x7
   464     0027                     	ds	1
   465     0028                     Adc_StartConversion@channel:
   466     0028                     Dio_Config@state:	
   467                           ; 1 bytes @ 0x8
   468                           
   469     0028                     ??_Dio_Pin_Write:	
   470                           ; 1 bytes @ 0x8
   471                           
   472                           
   473                           ; 1 bytes @ 0x8
   474     0028                     	ds	1
   475     0029                     Dio_Pin_Write@pinNumber:
   476     0029                     Dio_Config@pullType:	
   477                           ; 1 bytes @ 0x9
   478                           
   479     0029                     ___lwdiv@dividend:	
   480                           ; 1 bytes @ 0x9
   481                           
   482     0029                     ??_Adc_ReadResult:	
   483                           ; 2 bytes @ 0x9
   484                           
   485                           
   486                           ; 1 bytes @ 0x9
   487     0029                     	ds	1
   488     002A                     ?_SPI_Send_16bit:
   489     002A                     SPI_Send_16bit@data:	
   490                           ; 1 bytes @ 0xA
   491                           
   492     002A                     ??_Dio_Config:	
   493                           ; 2 bytes @ 0xA
   494                           
   495                           
   496                           ; 1 bytes @ 0xA
   497     002A                     	ds	1
   498     002B                     ___lwdiv@quotient:
   499                           
   500                           ; 2 bytes @ 0xB
   501     002B                     	ds	1
   502     002C                     ??_SPI_Send_16bit:
   503                           
   504                           ; 1 bytes @ 0xC
   505     002C                     	ds	1
   506     002D                     ___lwdiv@counter:
   507                           
   508                           ; 1 bytes @ 0xD
   509     002D                     	ds	1
   510     002E                     ?___lwmod:
   511     002E                     _Dio_Config$71:	
   512                           ; 2 bytes @ 0xE
   513                           
   514     002E                     ___lwmod@divisor:	
   515                           ; 2 bytes @ 0xE
   516                           
   517                           
   518                           ; 2 bytes @ 0xE
   519     002E                     	ds	2
   520     0030                     ?___lmul:
   521     0030                     Dio_Config@pinNumber:	
   522                           ; 4 bytes @ 0x10
   523                           
   524     0030                     ___lwmod@dividend:	
   525                           ; 1 bytes @ 0x10
   526                           
   527     0030                     ___lmul@multiplier:	
   528                           ; 2 bytes @ 0x10
   529                           
   530                           
   531                           ; 4 bytes @ 0x10
   532     0030                     	ds	1
   533     0031                     SPI_Send_16bit@bit:
   534                           
   535                           ; 2 bytes @ 0x11
   536     0031                     	ds	1
   537     0032                     ___lwmod@counter:
   538                           
   539                           ; 1 bytes @ 0x12
   540     0032                     	ds	1
   541     0033                     ?_MAX7219_DisplayData:
   542     0033                     MAX7219_DisplayData@character:	
   543                           ; 1 bytes @ 0x13
   544                           
   545     0033                     ??_MAX7219_ClearDisplay:	
   546                           ; 1 bytes @ 0x13
   547                           
   548                           
   549                           ; 1 bytes @ 0x13
   550     0033                     	ds	1
   551     0034                     ___lmul@multiplicand:
   552     0034                     ??_MAX7219_DisplayData:	
   553                           ; 4 bytes @ 0x14
   554                           
   555                           
   556                           ; 1 bytes @ 0x14
   557     0034                     	ds	1
   558     0035                     MAX7219_ClearDisplay@i:
   559                           
   560                           ; 1 bytes @ 0x15
   561     0035                     	ds	3
   562     0038                     MAX7219_DisplayData@digit:
   563     0038                     ??___lmul:	
   564                           ; 1 bytes @ 0x18
   565                           
   566                           
   567                           ; 1 bytes @ 0x18
   568     0038                     	ds	1
   569     0039                     ___lmul@product:
   570                           
   571                           ; 4 bytes @ 0x19
   572     0039                     	ds	4
   573     003D                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x1D
   576     003D                     	ds	8
   577     0045                     _main$776:
   578                           
   579                           ; 2 bytes @ 0x25
   580     0045                     	ds	2
   581     0047                     main@i:
   582                           
   583                           ; 1 bytes @ 0x27
   584     0047                     	ds	1
   585                           
   586                           	psect	maintext
   587     0014                     __pmaintext:	
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 29 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               1   39[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2  162[None  ] int 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : B00/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0
   607 ;;      Params:         0       0
   608 ;;      Locals:         0       3
   609 ;;      Temps:          0       8
   610 ;;      Totals:         0      11
   611 ;;Total ram usage:       11 bytes
   612 ;; Hardware stack levels required when called: 5
   613 ;; This function calls:
   614 ;;		_Adc_Init
   615 ;;		_Adc_ReadResult
   616 ;;		_Adc_StartConversion
   617 ;;		_Dio_Pin_Write
   618 ;;		_Dio_init
   619 ;;		_Gpio_Init
   620 ;;		_MAX7219_ClearDisplay
   621 ;;		_MAX7219_DisplayData
   622 ;;		_MAX7219_Init
   623 ;;		_SPI_Init
   624 ;;		___lmul
   625 ;;		___lwdiv
   626 ;;		___lwmod
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     0014                     _main:	
   633                           ;psect for function _main
   634                           
   635                           
   636                           ;main.c: 30:         Gpio_Init();
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   640     0014  2368               	fcall	_Gpio_Init
   641                           
   642                           ;main.c: 31:         Dio_init();
   643     0015  23AF               	fcall	_Dio_init
   644                           
   645                           ;main.c: 32:         Adc_Init();
   646     0016  23BE               	fcall	_Adc_Init
   647                           
   648                           ;main.c: 33:         SPI_Init();
   649     0017  2327               	fcall	_SPI_Init
   650                           
   651                           ;main.c: 34:       MAX7219_Init();
   652     0018  2308               	fcall	_MAX7219_Init
   653                           
   654                           ;main.c: 35:    IOCB |= (1 << 3);
   655     0019  1683               	bsf	3,5	;RP0=1, select bank1
   656     001A  1596               	bsf	22,3	;volatile
   657                           
   658                           ;main.c: 37:     INTCONbits.GIE = 1;
   659     001B  178B               	bsf	11,7	;volatile
   660                           
   661                           ;main.c: 38:     INTCONbits.PEIE = 1;
   662     001C  170B               	bsf	11,6	;volatile
   663                           
   664                           ;main.c: 39:     INTCONbits.GPIE = 1;
   665     001D  158B               	bsf	11,3	;volatile
   666     001E                     l1289:
   667                           
   668                           ;main.c: 57:         while(DispenserOn){
   669     001E  1283               	bcf	3,5	;RP0=0, select bank0
   670     001F  084A               	movf	_DispenserOn,w
   671     0020  1903               	btfsc	3,2
   672     0021  281E               	goto	l1289
   673                           
   674                           ;main.c: 58:             Adc_StartConversion(ADC_CHANNEL_AN0);
   675     0022  3000               	movlw	0
   676     0023  238E               	fcall	_Adc_StartConversion
   677                           
   678                           ;main.c: 60:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x04,0x1D); MAX7219
      +                          _DisplayData(0x03,0x15);;
   679     0024  233F               	fcall	_MAX7219_ClearDisplay
   680     0025  301D               	movlw	29
   681     0026  1283               	bcf	3,5	;RP0=0, select bank0
   682     0027  00B3               	movwf	MAX7219_DisplayData@character
   683     0028  3004               	movlw	4
   684     0029  2355               	fcall	_MAX7219_DisplayData
   685     002A  3015               	movlw	21
   686     002B  1283               	bcf	3,5	;RP0=0, select bank0
   687     002C  00B3               	movwf	MAX7219_DisplayData@character
   688     002D  3003               	movlw	3
   689     002E  2355               	fcall	_MAX7219_DisplayData
   690                           
   691                           ;main.c: 63:             for(uint8 i=0; (i<100)&&DispenserOn;i++ )
   692     002F  1283               	bcf	3,5	;RP0=0, select bank0
   693     0030  01C7               	clrf	main@i
   694     0031  2841               	goto	l1253
   695     0032                     l1255:
   696     0032  084A               	movf	_DispenserOn,w
   697     0033  1903               	btfsc	3,2
   698     0034  2845               	goto	l1257
   699                           
   700                           ;main.c: 64:                 {_delay((unsigned long)((10)*(4000000/4000.0)));}
   701     0035  300D               	movlw	13
   702     0036  00BE               	movwf	??_main+1
   703     0037  30FB               	movlw	251
   704     0038  00BD               	movwf	??_main
   705     0039                     u1097:
   706     0039  0BBD               	decfsz	??_main,f
   707     003A  2839               	goto	u1097
   708     003B  0BBE               	decfsz	??_main+1,f
   709     003C  2839               	goto	u1097
   710     003D  283E               	nop2
   711     003E  3001               	movlw	1
   712     003F  1283               	bcf	3,5	;RP0=0, select bank0
   713     0040  07C7               	addwf	main@i,f
   714     0041                     l1253:
   715     0041  3064               	movlw	100
   716     0042  0247               	subwf	main@i,w
   717     0043  1C03               	btfss	3,0
   718     0044  2832               	goto	l1255
   719     0045                     l1257:
   720                           
   721                           ;main.c: 66:             MAX7219_ClearDisplay();
   722     0045  233F               	fcall	_MAX7219_ClearDisplay
   723                           
   724                           ;main.c: 69:             Dio_Pin_Write (4,1);
   725     0046  1283               	bcf	3,5	;RP0=0, select bank0
   726     0047  01A7               	clrf	Dio_Pin_Write@state
   727     0048  0AA7               	incf	Dio_Pin_Write@state,f
   728     0049  3004               	movlw	4
   729     004A  22E8               	fcall	_Dio_Pin_Write
   730                           
   731                           ;main.c: 72:             Counter = 1 + ((uint32)89*Adc_ReadResult()/1024);
   732     004B  228F               	fcall	_Adc_ReadResult
   733     004C  1283               	bcf	3,5	;RP0=0, select bank0
   734     004D  0827               	movf	?_Adc_ReadResult,w
   735     004E  00BD               	movwf	??_main
   736     004F  0828               	movf	?_Adc_ReadResult+1,w
   737     0050  00BE               	movwf	??_main+1
   738     0051  01BF               	clrf	??_main+2
   739     0052  01C0               	clrf	??_main+3
   740     0053  0840               	movf	??_main+3,w
   741     0054  00B3               	movwf	___lmul@multiplier+3
   742     0055  083F               	movf	??_main+2,w
   743     0056  00B2               	movwf	___lmul@multiplier+2
   744     0057  083E               	movf	??_main+1,w
   745     0058  00B1               	movwf	___lmul@multiplier+1
   746     0059  083D               	movf	??_main,w
   747     005A  00B0               	movwf	___lmul@multiplier
   748     005B  3000               	movlw	0
   749     005C  00B7               	movwf	___lmul@multiplicand+3
   750     005D  3000               	movlw	0
   751     005E  00B6               	movwf	___lmul@multiplicand+2
   752     005F  3000               	movlw	0
   753     0060  00B5               	movwf	___lmul@multiplicand+1
   754     0061  3059               	movlw	89
   755     0062  00B4               	movwf	___lmul@multiplicand
   756     0063  21E3               	fcall	___lmul
   757     0064  1283               	bcf	3,5	;RP0=0, select bank0
   758     0065  0830               	movf	?___lmul,w
   759     0066  00C1               	movwf	??_main+4
   760     0067  0831               	movf	?___lmul+1,w
   761     0068  00C2               	movwf	??_main+5
   762     0069  0832               	movf	?___lmul+2,w
   763     006A  00C3               	movwf	??_main+6
   764     006B  0833               	movf	?___lmul+3,w
   765     006C  00C4               	movwf	??_main+7
   766     006D  300A               	movlw	10
   767     006E                     u1005:
   768     006E  1003               	clrc
   769     006F  0CC4               	rrf	??_main+7,f
   770     0070  0CC3               	rrf	??_main+6,f
   771     0071  0CC2               	rrf	??_main+5,f
   772     0072  0CC1               	rrf	??_main+4,f
   773     0073  3EFF               	addlw	-1
   774     0074  1D03               	skipz
   775     0075  286E               	goto	u1005
   776     0076  0841               	movf	??_main+4,w
   777     0077  3E01               	addlw	1
   778     0078  00C8               	movwf	_Counter
   779     0079  0842               	movf	??_main+5,w
   780     007A  1803               	skipnc
   781     007B  3E01               	addlw	1
   782     007C  3E00               	addlw	0
   783     007D  00C9               	movwf	_Counter+1
   784                           
   785                           ;main.c: 74:             for(;(Counter>0)&&DispenserOn;Counter--){
   786     007E  2900               	goto	l1273
   787     007F                     l1275:
   788     007F  084A               	movf	_DispenserOn,w
   789     0080  1903               	btfsc	3,2
   790     0081  2904               	goto	l1277
   791                           
   792                           ;main.c: 75:                 MAX7219_DisplayData(0x04, MAX7219_No_Table[Counter/600]);
   793     0082  3058               	movlw	88
   794     0083  00A7               	movwf	___lwdiv@divisor
   795     0084  3002               	movlw	2
   796     0085  00A8               	movwf	___lwdiv@divisor+1
   797     0086  0849               	movf	_Counter+1,w
   798     0087  00AA               	movwf	___lwdiv@dividend+1
   799     0088  0848               	movf	_Counter,w
   800     0089  00A9               	movwf	___lwdiv@dividend
   801     008A  2223               	fcall	___lwdiv
   802     008B  1283               	bcf	3,5	;RP0=0, select bank0
   803     008C  0827               	movf	?___lwdiv,w
   804     008D  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   805     008E  0084               	movwf	4
   806     008F  239F               	fcall	stringdir
   807     0090  00B3               	movwf	MAX7219_DisplayData@character
   808     0091  3004               	movlw	4
   809     0092  2355               	fcall	_MAX7219_DisplayData
   810                           
   811                           ;main.c: 76:                 MAX7219_DisplayData(0x03, MAX7219_No_Table[(Counter/60)%10]
      +                          );
   812     0093  300A               	movlw	10
   813     0094  1283               	bcf	3,5	;RP0=0, select bank0
   814     0095  00AE               	movwf	___lwmod@divisor
   815     0096  3000               	movlw	0
   816     0097  00AF               	movwf	___lwmod@divisor+1
   817     0098  303C               	movlw	60
   818     0099  00A7               	movwf	___lwdiv@divisor
   819     009A  3000               	movlw	0
   820     009B  00A8               	movwf	___lwdiv@divisor+1
   821     009C  0849               	movf	_Counter+1,w
   822     009D  00AA               	movwf	___lwdiv@dividend+1
   823     009E  0848               	movf	_Counter,w
   824     009F  00A9               	movwf	___lwdiv@dividend
   825     00A0  2223               	fcall	___lwdiv
   826     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   827     00A2  0828               	movf	?___lwdiv+1,w
   828     00A3  00B1               	movwf	___lwmod@dividend+1
   829     00A4  0827               	movf	?___lwdiv,w
   830     00A5  00B0               	movwf	___lwmod@dividend
   831     00A6  225E               	fcall	___lwmod
   832     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   833     00A8  082E               	movf	?___lwmod,w
   834     00A9  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   835     00AA  0084               	movwf	4
   836     00AB  239F               	fcall	stringdir
   837     00AC  00B3               	movwf	MAX7219_DisplayData@character
   838     00AD  3003               	movlw	3
   839     00AE  2355               	fcall	_MAX7219_DisplayData
   840                           
   841                           ;main.c: 77:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[(Counter%60)/10]
      +                          );
   842     00AF  300A               	movlw	10
   843     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   844     00B1  00A7               	movwf	___lwdiv@divisor
   845     00B2  3000               	movlw	0
   846     00B3  00A8               	movwf	___lwdiv@divisor+1
   847     00B4  0849               	movf	_Counter+1,w
   848     00B5  00B1               	movwf	___lwmod@dividend+1
   849     00B6  0848               	movf	_Counter,w
   850     00B7  00B0               	movwf	___lwmod@dividend
   851     00B8  303C               	movlw	60
   852     00B9  00AE               	movwf	___lwmod@divisor
   853     00BA  3000               	movlw	0
   854     00BB  00AF               	movwf	___lwmod@divisor+1
   855     00BC  225E               	fcall	___lwmod
   856     00BD  1283               	bcf	3,5	;RP0=0, select bank0
   857     00BE  082F               	movf	?___lwmod+1,w
   858     00BF  00AA               	movwf	___lwdiv@dividend+1
   859     00C0  082E               	movf	?___lwmod,w
   860     00C1  00A9               	movwf	___lwdiv@dividend
   861     00C2  2223               	fcall	___lwdiv
   862     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   863     00C4  0827               	movf	?___lwdiv,w
   864     00C5  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   865     00C6  0084               	movwf	4
   866     00C7  239F               	fcall	stringdir
   867     00C8  00B3               	movwf	MAX7219_DisplayData@character
   868     00C9  3002               	movlw	2
   869     00CA  2355               	fcall	_MAX7219_DisplayData
   870                           
   871                           ;main.c: 78:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   872     00CB  1283               	bcf	3,5	;RP0=0, select bank0
   873     00CC  0849               	movf	_Counter+1,w
   874     00CD  00B1               	movwf	___lwmod@dividend+1
   875     00CE  0848               	movf	_Counter,w
   876     00CF  00B0               	movwf	___lwmod@dividend
   877     00D0  303C               	movlw	60
   878     00D1  00AE               	movwf	___lwmod@divisor
   879     00D2  3000               	movlw	0
   880     00D3  00AF               	movwf	___lwmod@divisor+1
   881     00D4  225E               	fcall	___lwmod
   882     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   883     00D6  082F               	movf	?___lwmod+1,w
   884     00D7  00C6               	movwf	_main$776+1
   885     00D8  082E               	movf	?___lwmod,w
   886     00D9  00C5               	movwf	_main$776
   887                           
   888                           ;main.c: 78:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   889     00DA  300A               	movlw	10
   890     00DB  00AE               	movwf	___lwmod@divisor
   891     00DC  3000               	movlw	0
   892     00DD  00AF               	movwf	___lwmod@divisor+1
   893     00DE  0846               	movf	_main$776+1,w
   894     00DF  00B1               	movwf	___lwmod@dividend+1
   895     00E0  0845               	movf	_main$776,w
   896     00E1  00B0               	movwf	___lwmod@dividend
   897     00E2  225E               	fcall	___lwmod
   898     00E3  1283               	bcf	3,5	;RP0=0, select bank0
   899     00E4  082E               	movf	?___lwmod,w
   900     00E5  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   901     00E6  0084               	movwf	4
   902     00E7  239F               	fcall	stringdir
   903     00E8  00B3               	movwf	MAX7219_DisplayData@character
   904     00E9  3001               	movlw	1
   905     00EA  2355               	fcall	_MAX7219_DisplayData
   906                           
   907                           ;main.c: 79:                 _delay((unsigned long)((900)*(4000000/4000.0)));
   908     00EB  3005               	movlw	5
   909     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   910     00ED  00BF               	movwf	??_main+2
   911     00EE  3091               	movlw	145
   912     00EF  00BE               	movwf	??_main+1
   913     00F0  30CF               	movlw	207
   914     00F1  00BD               	movwf	??_main
   915     00F2                     u1107:
   916     00F2  0BBD               	decfsz	??_main,f
   917     00F3  28F2               	goto	u1107
   918     00F4  0BBE               	decfsz	??_main+1,f
   919     00F5  28F2               	goto	u1107
   920     00F6  0BBF               	decfsz	??_main+2,f
   921     00F7  28F2               	goto	u1107
   922     00F8  28F9               	nop2
   923                           
   924                           ;main.c: 80:             }
   925     00F9  3001               	movlw	1
   926     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   927     00FB  02C8               	subwf	_Counter,f
   928     00FC  3000               	movlw	0
   929     00FD  1C03               	skipc
   930     00FE  03C9               	decf	_Counter+1,f
   931     00FF  02C9               	subwf	_Counter+1,f
   932     0100                     l1273:
   933     0100  0848               	movf	_Counter,w
   934     0101  0449               	iorwf	_Counter+1,w
   935     0102  1D03               	btfss	3,2
   936     0103  287F               	goto	l1275
   937     0104                     l1277:
   938                           
   939                           ;main.c: 81:             Dio_Pin_Write (4, 0);
   940     0104  01A7               	clrf	Dio_Pin_Write@state
   941     0105  3004               	movlw	4
   942     0106  22E8               	fcall	_Dio_Pin_Write
   943                           
   944                           ;main.c: 82:             DispenserOn=0;
   945     0107  1283               	bcf	3,5	;RP0=0, select bank0
   946     0108  01CA               	clrf	_DispenserOn
   947                           
   948                           ;main.c: 83:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x05,0x1D); MAX7219
      +                          _DisplayData(0x04,0x47); MAX7219_DisplayData(0x03,0x47);;
   949     0109  233F               	fcall	_MAX7219_ClearDisplay
   950     010A  301D               	movlw	29
   951     010B  1283               	bcf	3,5	;RP0=0, select bank0
   952     010C  00B3               	movwf	MAX7219_DisplayData@character
   953     010D  3005               	movlw	5
   954     010E  2355               	fcall	_MAX7219_DisplayData
   955     010F  3047               	movlw	71
   956     0110  1283               	bcf	3,5	;RP0=0, select bank0
   957     0111  00B3               	movwf	MAX7219_DisplayData@character
   958     0112  3004               	movlw	4
   959     0113  2355               	fcall	_MAX7219_DisplayData
   960     0114  3047               	movlw	71
   961     0115  1283               	bcf	3,5	;RP0=0, select bank0
   962     0116  00B3               	movwf	MAX7219_DisplayData@character
   963     0117  3003               	movlw	3
   964     0118  2355               	fcall	_MAX7219_DisplayData
   965     0119  281E               	goto	l1289
   966     011A                     __end_of_main:
   967                           
   968                           	psect	text1
   969     025E                     __ptext1:	
   970 ;; *************** function ___lwmod *****************
   971 ;; Defined at:
   972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  divisor         2   14[BANK0 ] unsigned int 
   975 ;;  dividend        2   16[BANK0 ] unsigned int 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  counter         1   18[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  2   14[BANK0 ] unsigned int 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0
   987 ;;      Params:         0       4
   988 ;;      Locals:         0       1
   989 ;;      Temps:          0       0
   990 ;;      Totals:         0       5
   991 ;;Total ram usage:        5 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001     025E                     ___lwmod:	
  1002                           ;psect for function ___lwmod
  1003                           
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1007     025E  1283               	bcf	3,5	;RP0=0, select bank0
  1008     025F  082E               	movf	___lwmod@divisor,w
  1009     0260  042F               	iorwf	___lwmod@divisor+1,w
  1010     0261  1903               	btfsc	3,2
  1011     0262  2A8A               	goto	l1219
  1012     0263  3001               	movlw	1
  1013     0264  00B2               	movwf	___lwmod@counter
  1014     0265                     l1209:
  1015     0265  1BAF               	btfsc	___lwmod@divisor+1,7
  1016     0266  2A71               	goto	l1211
  1017     0267  3001               	movlw	1
  1018     0268                     u915:
  1019     0268  1003               	clrc
  1020     0269  0DAE               	rlf	___lwmod@divisor,f
  1021     026A  0DAF               	rlf	___lwmod@divisor+1,f
  1022     026B  3EFF               	addlw	-1
  1023     026C  1D03               	skipz
  1024     026D  2A68               	goto	u915
  1025     026E  3001               	movlw	1
  1026     026F  07B2               	addwf	___lwmod@counter,f
  1027     0270  2A65               	goto	l1209
  1028     0271                     l1211:
  1029     0271  082F               	movf	___lwmod@divisor+1,w
  1030     0272  0231               	subwf	___lwmod@dividend+1,w
  1031     0273  1D03               	skipz
  1032     0274  2A77               	goto	u935
  1033     0275  082E               	movf	___lwmod@divisor,w
  1034     0276  0230               	subwf	___lwmod@dividend,w
  1035     0277                     u935:
  1036     0277  1C03               	skipc
  1037     0278  2A7F               	goto	l1215
  1038     0279  082E               	movf	___lwmod@divisor,w
  1039     027A  02B0               	subwf	___lwmod@dividend,f
  1040     027B  082F               	movf	___lwmod@divisor+1,w
  1041     027C  1C03               	skipc
  1042     027D  03B1               	decf	___lwmod@dividend+1,f
  1043     027E  02B1               	subwf	___lwmod@dividend+1,f
  1044     027F                     l1215:
  1045     027F  3001               	movlw	1
  1046     0280                     u945:
  1047     0280  1003               	clrc
  1048     0281  0CAF               	rrf	___lwmod@divisor+1,f
  1049     0282  0CAE               	rrf	___lwmod@divisor,f
  1050     0283  3EFF               	addlw	-1
  1051     0284  1D03               	skipz
  1052     0285  2A80               	goto	u945
  1053     0286  3001               	movlw	1
  1054     0287  02B2               	subwf	___lwmod@counter,f
  1055     0288  1D03               	btfss	3,2
  1056     0289  2A71               	goto	l1211
  1057     028A                     l1219:
  1058     028A  0831               	movf	___lwmod@dividend+1,w
  1059     028B  00AF               	movwf	?___lwmod+1
  1060     028C  0830               	movf	___lwmod@dividend,w
  1061     028D  00AE               	movwf	?___lwmod
  1062     028E  0008               	return
  1063     028F                     __end_of___lwmod:
  1064                           
  1065                           	psect	text2
  1066     0223                     __ptext2:	
  1067 ;; *************** function ___lwdiv *****************
  1068 ;; Defined at:
  1069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  divisor         2    7[BANK0 ] unsigned int 
  1072 ;;  dividend        2    9[BANK0 ] unsigned int 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  quotient        2   11[BANK0 ] unsigned int 
  1075 ;;  counter         1   13[BANK0 ] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2    7[BANK0 ] unsigned int 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0
  1085 ;;      Params:         0       4
  1086 ;;      Locals:         0       3
  1087 ;;      Temps:          0       0
  1088 ;;      Totals:         0       7
  1089 ;;Total ram usage:        7 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 2
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099     0223                     ___lwdiv:	
  1100                           ;psect for function ___lwdiv
  1101                           
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1105     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1106     0224  01AB               	clrf	___lwdiv@quotient
  1107     0225  01AC               	clrf	___lwdiv@quotient+1
  1108     0226  0827               	movf	___lwdiv@divisor,w
  1109     0227  0428               	iorwf	___lwdiv@divisor+1,w
  1110     0228  1903               	btfsc	3,2
  1111     0229  2A59               	goto	l1197
  1112     022A  3001               	movlw	1
  1113     022B  00AD               	movwf	___lwdiv@counter
  1114     022C                     l1185:
  1115     022C  1BA8               	btfsc	___lwdiv@divisor+1,7
  1116     022D  2A38               	goto	l1187
  1117     022E  3001               	movlw	1
  1118     022F                     u845:
  1119     022F  1003               	clrc
  1120     0230  0DA7               	rlf	___lwdiv@divisor,f
  1121     0231  0DA8               	rlf	___lwdiv@divisor+1,f
  1122     0232  3EFF               	addlw	-1
  1123     0233  1D03               	skipz
  1124     0234  2A2F               	goto	u845
  1125     0235  3001               	movlw	1
  1126     0236  07AD               	addwf	___lwdiv@counter,f
  1127     0237  2A2C               	goto	l1185
  1128     0238                     l1187:
  1129     0238  3001               	movlw	1
  1130     0239                     u865:
  1131     0239  1003               	clrc
  1132     023A  0DAB               	rlf	___lwdiv@quotient,f
  1133     023B  0DAC               	rlf	___lwdiv@quotient+1,f
  1134     023C  3EFF               	addlw	-1
  1135     023D  1D03               	skipz
  1136     023E  2A39               	goto	u865
  1137     023F  0828               	movf	___lwdiv@divisor+1,w
  1138     0240  022A               	subwf	___lwdiv@dividend+1,w
  1139     0241  1D03               	skipz
  1140     0242  2A45               	goto	u875
  1141     0243  0827               	movf	___lwdiv@divisor,w
  1142     0244  0229               	subwf	___lwdiv@dividend,w
  1143     0245                     u875:
  1144     0245  1C03               	skipc
  1145     0246  2A4E               	goto	l1193
  1146     0247  0827               	movf	___lwdiv@divisor,w
  1147     0248  02A9               	subwf	___lwdiv@dividend,f
  1148     0249  0828               	movf	___lwdiv@divisor+1,w
  1149     024A  1C03               	skipc
  1150     024B  03AA               	decf	___lwdiv@dividend+1,f
  1151     024C  02AA               	subwf	___lwdiv@dividend+1,f
  1152     024D  142B               	bsf	___lwdiv@quotient,0
  1153     024E                     l1193:
  1154     024E  3001               	movlw	1
  1155     024F                     u885:
  1156     024F  1003               	clrc
  1157     0250  0CA8               	rrf	___lwdiv@divisor+1,f
  1158     0251  0CA7               	rrf	___lwdiv@divisor,f
  1159     0252  3EFF               	addlw	-1
  1160     0253  1D03               	skipz
  1161     0254  2A4F               	goto	u885
  1162     0255  3001               	movlw	1
  1163     0256  02AD               	subwf	___lwdiv@counter,f
  1164     0257  1D03               	btfss	3,2
  1165     0258  2A38               	goto	l1187
  1166     0259                     l1197:
  1167     0259  082C               	movf	___lwdiv@quotient+1,w
  1168     025A  00A8               	movwf	?___lwdiv+1
  1169     025B  082B               	movf	___lwdiv@quotient,w
  1170     025C  00A7               	movwf	?___lwdiv
  1171     025D  0008               	return
  1172     025E                     __end_of___lwdiv:
  1173                           
  1174                           	psect	text3
  1175     01E3                     __ptext3:	
  1176 ;; *************** function ___lmul *****************
  1177 ;; Defined at:
  1178 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  multiplier      4   16[BANK0 ] unsigned long 
  1181 ;;  multiplicand    4   20[BANK0 ] unsigned long 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  product         4   25[BANK0 ] unsigned long 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  4   16[BANK0 ] unsigned long 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0
  1193 ;;      Params:         0       8
  1194 ;;      Locals:         0       4
  1195 ;;      Temps:          0       1
  1196 ;;      Totals:         0      13
  1197 ;;Total ram usage:       13 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 2
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207     01E3                     ___lmul:	
  1208                           ;psect for function ___lmul
  1209                           
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1213     01E3  3000               	movlw	0
  1214     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1215     01E5  00BC               	movwf	___lmul@product+3
  1216     01E6  3000               	movlw	0
  1217     01E7  00BB               	movwf	___lmul@product+2
  1218     01E8  3000               	movlw	0
  1219     01E9  00BA               	movwf	___lmul@product+1
  1220     01EA  3000               	movlw	0
  1221     01EB  00B9               	movwf	___lmul@product
  1222     01EC                     l1163:
  1223     01EC  1C30               	btfss	___lmul@multiplier,0
  1224     01ED  2A02               	goto	l1167
  1225     01EE  0834               	movf	___lmul@multiplicand,w
  1226     01EF  07B9               	addwf	___lmul@product,f
  1227     01F0  0835               	movf	___lmul@multiplicand+1,w
  1228     01F1  1103               	clrz
  1229     01F2  1803               	skipnc
  1230     01F3  3E01               	addlw	1
  1231     01F4  1D03               	btfss	3,2
  1232     01F5  07BA               	addwf	___lmul@product+1,f
  1233     01F6  0836               	movf	___lmul@multiplicand+2,w
  1234     01F7  1103               	clrz
  1235     01F8  1803               	skipnc
  1236     01F9  3E01               	addlw	1
  1237     01FA  1D03               	btfss	3,2
  1238     01FB  07BB               	addwf	___lmul@product+2,f
  1239     01FC  0837               	movf	___lmul@multiplicand+3,w
  1240     01FD  1103               	clrz
  1241     01FE  1803               	skipnc
  1242     01FF  3E01               	addlw	1
  1243     0200  1D03               	btfss	3,2
  1244     0201  07BC               	addwf	___lmul@product+3,f
  1245     0202                     l1167:
  1246     0202  3001               	movlw	1
  1247     0203  00B8               	movwf	??___lmul
  1248     0204                     u805:
  1249     0204  1003               	clrc
  1250     0205  0DB4               	rlf	___lmul@multiplicand,f
  1251     0206  0DB5               	rlf	___lmul@multiplicand+1,f
  1252     0207  0DB6               	rlf	___lmul@multiplicand+2,f
  1253     0208  0DB7               	rlf	___lmul@multiplicand+3,f
  1254     0209  0BB8               	decfsz	??___lmul,f
  1255     020A  2A04               	goto	u805
  1256     020B  3001               	movlw	1
  1257     020C                     u815:
  1258     020C  1003               	clrc
  1259     020D  0CB3               	rrf	___lmul@multiplier+3,f
  1260     020E  0CB2               	rrf	___lmul@multiplier+2,f
  1261     020F  0CB1               	rrf	___lmul@multiplier+1,f
  1262     0210  0CB0               	rrf	___lmul@multiplier,f
  1263     0211  3EFF               	addlw	-1
  1264     0212  1D03               	skipz
  1265     0213  2A0C               	goto	u815
  1266     0214  0833               	movf	___lmul@multiplier+3,w
  1267     0215  0432               	iorwf	___lmul@multiplier+2,w
  1268     0216  0431               	iorwf	___lmul@multiplier+1,w
  1269     0217  0430               	iorwf	___lmul@multiplier,w
  1270     0218  1D03               	skipz
  1271     0219  29EC               	goto	l1163
  1272     021A  083C               	movf	___lmul@product+3,w
  1273     021B  00B3               	movwf	?___lmul+3
  1274     021C  083B               	movf	___lmul@product+2,w
  1275     021D  00B2               	movwf	?___lmul+2
  1276     021E  083A               	movf	___lmul@product+1,w
  1277     021F  00B1               	movwf	?___lmul+1
  1278     0220  0839               	movf	___lmul@product,w
  1279     0221  00B0               	movwf	?___lmul
  1280     0222  0008               	return
  1281     0223                     __end_of___lmul:
  1282                           
  1283                           	psect	text4
  1284     0327                     __ptext4:	
  1285 ;; *************** function _SPI_Init *****************
  1286 ;; Defined at:
  1287 ;;		line 12 in file "SERVICE/scr/Spi.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0
  1301 ;;      Params:         0       0
  1302 ;;      Locals:         0       0
  1303 ;;      Temps:          0       0
  1304 ;;      Totals:         0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 3
  1308 ;; This function calls:
  1309 ;;		_Dio_Config
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315     0327                     _SPI_Init:	
  1316                           ;psect for function _SPI_Init
  1317                           
  1318                           
  1319                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1323     0327  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0328  01A7               	clrf	Dio_Config@direction
  1325     0329  0AA7               	incf	Dio_Config@direction,f
  1326     032A  01A8               	clrf	Dio_Config@state
  1327     032B  0AA8               	incf	Dio_Config@state,f
  1328     032C  01A9               	clrf	Dio_Config@pullType
  1329     032D  3001               	movlw	1
  1330     032E  211A               	fcall	_Dio_Config
  1331                           
  1332                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
  1333     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0330  01A7               	clrf	Dio_Config@direction
  1335     0331  0AA7               	incf	Dio_Config@direction,f
  1336     0332  01A8               	clrf	Dio_Config@state
  1337     0333  01A9               	clrf	Dio_Config@pullType
  1338     0334  3002               	movlw	2
  1339     0335  211A               	fcall	_Dio_Config
  1340                           
  1341                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
  1342     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1343     0337  01A7               	clrf	Dio_Config@direction
  1344     0338  0AA7               	incf	Dio_Config@direction,f
  1345     0339  01A8               	clrf	Dio_Config@state
  1346     033A  0AA8               	incf	Dio_Config@state,f
  1347     033B  01A9               	clrf	Dio_Config@pullType
  1348     033C  3005               	movlw	5
  1349     033D  211A               	fcall	_Dio_Config
  1350     033E  0008               	return
  1351     033F                     __end_of_SPI_Init:
  1352                           
  1353                           	psect	text5
  1354     0308                     __ptext5:	
  1355 ;; *************** function _MAX7219_Init *****************
  1356 ;; Defined at:
  1357 ;;		line 8 in file "HAL/scr/max7219.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0
  1371 ;;      Params:         0       0
  1372 ;;      Locals:         0       0
  1373 ;;      Temps:          0       0
  1374 ;;      Totals:         0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 4
  1378 ;; This function calls:
  1379 ;;		_SPI_Send_16bit
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385     0308                     _MAX7219_Init:	
  1386                           ;psect for function _MAX7219_Init
  1387                           
  1388                           
  1389                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1393     0308  3000               	movlw	0
  1394     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1395     030A  00AA               	movwf	SPI_Send_16bit@data
  1396     030B  3009               	movlw	9
  1397     030C  00AB               	movwf	SPI_Send_16bit@data+1
  1398     030D  2190               	fcall	_SPI_Send_16bit
  1399                           
  1400                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
  1401     030E  300F               	movlw	15
  1402     030F  1283               	bcf	3,5	;RP0=0, select bank0
  1403     0310  00AA               	movwf	SPI_Send_16bit@data
  1404     0311  300A               	movlw	10
  1405     0312  00AB               	movwf	SPI_Send_16bit@data+1
  1406     0313  2190               	fcall	_SPI_Send_16bit
  1407                           
  1408                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
  1409     0314  30F7               	movlw	247
  1410     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0316  00AA               	movwf	SPI_Send_16bit@data
  1412     0317  30FB               	movlw	251
  1413     0318  00AB               	movwf	SPI_Send_16bit@data+1
  1414     0319  2190               	fcall	_SPI_Send_16bit
  1415                           
  1416                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
  1417     031A  3001               	movlw	1
  1418     031B  1283               	bcf	3,5	;RP0=0, select bank0
  1419     031C  00AA               	movwf	SPI_Send_16bit@data
  1420     031D  300C               	movlw	12
  1421     031E  00AB               	movwf	SPI_Send_16bit@data+1
  1422     031F  2190               	fcall	_SPI_Send_16bit
  1423                           
  1424                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
  1425     0320  3000               	movlw	0
  1426     0321  1283               	bcf	3,5	;RP0=0, select bank0
  1427     0322  00AA               	movwf	SPI_Send_16bit@data
  1428     0323  300F               	movlw	15
  1429     0324  00AB               	movwf	SPI_Send_16bit@data+1
  1430     0325  2190               	fcall	_SPI_Send_16bit
  1431     0326  0008               	return
  1432     0327                     __end_of_MAX7219_Init:
  1433                           
  1434                           	psect	text6
  1435     0355                     __ptext6:	
  1436 ;; *************** function _MAX7219_DisplayData *****************
  1437 ;; Defined at:
  1438 ;;		line 26 in file "HAL/scr/max7219.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  digit           1    wreg     unsigned char 
  1441 ;;  character       1   19[BANK0 ] unsigned char 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  digit           1   24[BANK0 ] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0
  1453 ;;      Params:         0       1
  1454 ;;      Locals:         0       1
  1455 ;;      Temps:          0       4
  1456 ;;      Totals:         0       6
  1457 ;;Total ram usage:        6 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 4
  1460 ;; This function calls:
  1461 ;;		_SPI_Send_16bit
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467     0355                     _MAX7219_DisplayData:	
  1468                           ;psect for function _MAX7219_DisplayData
  1469                           
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1473                           ;MAX7219_DisplayData@digit stored from wreg
  1474     0355  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0356  00B8               	movwf	MAX7219_DisplayData@digit
  1476                           
  1477                           ;HAL/scr/max7219.c: 27:     SPI_Send_16bit((digit) << 8 | character);
  1478     0357  0833               	movf	MAX7219_DisplayData@character,w
  1479     0358  00B4               	movwf	??_MAX7219_DisplayData
  1480     0359  01B5               	clrf	??_MAX7219_DisplayData+1
  1481     035A  0838               	movf	MAX7219_DisplayData@digit,w
  1482     035B  00B6               	movwf	??_MAX7219_DisplayData+2
  1483     035C  01B7               	clrf	??_MAX7219_DisplayData+3
  1484     035D  0836               	movf	??_MAX7219_DisplayData+2,w
  1485     035E  00B7               	movwf	??_MAX7219_DisplayData+3
  1486     035F  01B6               	clrf	??_MAX7219_DisplayData+2
  1487     0360  0834               	movf	??_MAX7219_DisplayData,w
  1488     0361  0436               	iorwf	??_MAX7219_DisplayData+2,w
  1489     0362  00AA               	movwf	SPI_Send_16bit@data
  1490     0363  0835               	movf	??_MAX7219_DisplayData+1,w
  1491     0364  0437               	iorwf	??_MAX7219_DisplayData+3,w
  1492     0365  00AB               	movwf	SPI_Send_16bit@data+1
  1493     0366  2190               	fcall	_SPI_Send_16bit
  1494     0367  0008               	return
  1495     0368                     __end_of_MAX7219_DisplayData:
  1496                           
  1497                           	psect	text7
  1498     033F                     __ptext7:	
  1499 ;; *************** function _MAX7219_ClearDisplay *****************
  1500 ;; Defined at:
  1501 ;;		line 19 in file "HAL/scr/max7219.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  i               1   21[BANK0 ] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0
  1515 ;;      Params:         0       0
  1516 ;;      Locals:         0       1
  1517 ;;      Temps:          0       2
  1518 ;;      Totals:         0       3
  1519 ;;Total ram usage:        3 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 4
  1522 ;; This function calls:
  1523 ;;		_SPI_Send_16bit
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529     033F                     _MAX7219_ClearDisplay:	
  1530                           ;psect for function _MAX7219_ClearDisplay
  1531                           
  1532                           
  1533                           ;HAL/scr/max7219.c: 20:     for (uint8_t i = 0x01; i <= 0x08; i++) {
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _MAX7219_ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1537     033F  3001               	movlw	1
  1538     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0341  00B5               	movwf	MAX7219_ClearDisplay@i
  1540     0342                     l1083:
  1541                           
  1542                           ;HAL/scr/max7219.c: 21:         SPI_Send_16bit((i << 8) );
  1543     0342  0835               	movf	MAX7219_ClearDisplay@i,w
  1544     0343  00B3               	movwf	??_MAX7219_ClearDisplay
  1545     0344  01B4               	clrf	??_MAX7219_ClearDisplay+1
  1546     0345  0833               	movf	??_MAX7219_ClearDisplay,w
  1547     0346  00B4               	movwf	??_MAX7219_ClearDisplay+1
  1548     0347  01B3               	clrf	??_MAX7219_ClearDisplay
  1549     0348  0833               	movf	??_MAX7219_ClearDisplay,w
  1550     0349  00AA               	movwf	SPI_Send_16bit@data
  1551     034A  0834               	movf	??_MAX7219_ClearDisplay+1,w
  1552     034B  00AB               	movwf	SPI_Send_16bit@data+1
  1553     034C  2190               	fcall	_SPI_Send_16bit
  1554                           
  1555                           ;HAL/scr/max7219.c: 22:     }
  1556     034D  3001               	movlw	1
  1557     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1558     034F  07B5               	addwf	MAX7219_ClearDisplay@i,f
  1559     0350  3009               	movlw	9
  1560     0351  0235               	subwf	MAX7219_ClearDisplay@i,w
  1561     0352  1803               	btfsc	3,0
  1562     0353  0008               	return
  1563     0354  2B42               	goto	l1083
  1564     0355                     __end_of_MAX7219_ClearDisplay:
  1565                           
  1566                           	psect	text8
  1567     0190                     __ptext8:	
  1568 ;; *************** function _SPI_Send_16bit *****************
  1569 ;; Defined at:
  1570 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  data            2   10[BANK0 ] unsigned short 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  bit             2   17[BANK0 ] int 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0
  1584 ;;      Params:         0       2
  1585 ;;      Locals:         0       2
  1586 ;;      Temps:          0       5
  1587 ;;      Totals:         0       9
  1588 ;;Total ram usage:        9 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 3
  1591 ;; This function calls:
  1592 ;;		_Dio_Pin_Write
  1593 ;; This function is called by:
  1594 ;;		_MAX7219_Init
  1595 ;;		_MAX7219_ClearDisplay
  1596 ;;		_MAX7219_DisplayData
  1597 ;;		_MAX7219_Shutdown
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601     0190                     _SPI_Send_16bit:	
  1602                           ;psect for function _SPI_Send_16bit
  1603                           
  1604                           
  1605                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1609     0190  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0191  01A7               	clrf	Dio_Pin_Write@state
  1611     0192  3005               	movlw	5
  1612     0193  22E8               	fcall	_Dio_Pin_Write
  1613                           
  1614                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
  1615     0194  1283               	bcf	3,5	;RP0=0, select bank0
  1616     0195  01B1               	clrf	SPI_Send_16bit@bit
  1617     0196  01B2               	clrf	SPI_Send_16bit@bit+1
  1618     0197                     l1033:
  1619                           
  1620                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
  1621     0197  1283               	bcf	3,5	;RP0=0, select bank0
  1622     0198  0831               	movf	SPI_Send_16bit@bit,w
  1623     0199  3C0F               	sublw	15
  1624     019A  00AC               	movwf	??_SPI_Send_16bit
  1625     019B  0AAC               	incf	??_SPI_Send_16bit,f
  1626     019C  3001               	movlw	1
  1627     019D  00AD               	movwf	??_SPI_Send_16bit+1
  1628     019E  3000               	movlw	0
  1629     019F  00AE               	movwf	??_SPI_Send_16bit+2
  1630     01A0  29A4               	goto	u584
  1631     01A1                     u585:
  1632     01A1  1003               	clrc
  1633     01A2  0DAD               	rlf	??_SPI_Send_16bit+1,f
  1634     01A3  0DAE               	rlf	??_SPI_Send_16bit+2,f
  1635     01A4                     u584:
  1636     01A4  0BAC               	decfsz	??_SPI_Send_16bit,f
  1637     01A5  29A1               	goto	u585
  1638     01A6  082A               	movf	SPI_Send_16bit@data,w
  1639     01A7  052D               	andwf	??_SPI_Send_16bit+1,w
  1640     01A8  00AF               	movwf	??_SPI_Send_16bit+3
  1641     01A9  082B               	movf	SPI_Send_16bit@data+1,w
  1642     01AA  052E               	andwf	??_SPI_Send_16bit+2,w
  1643     01AB  00B0               	movwf	??_SPI_Send_16bit+4
  1644     01AC  082F               	movf	??_SPI_Send_16bit+3,w
  1645     01AD  0430               	iorwf	??_SPI_Send_16bit+4,w
  1646     01AE  1903               	btfsc	3,2
  1647     01AF  29B3               	goto	l1037
  1648                           
  1649                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
  1650     01B0  01A7               	clrf	Dio_Pin_Write@state
  1651     01B1  0AA7               	incf	Dio_Pin_Write@state,f
  1652     01B2  29B4               	goto	L1
  1653     01B3                     l1037:	
  1654                           ;SERVICE/scr/Spi.c: 45:         } else {
  1655                           
  1656                           
  1657                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
  1658     01B3  01A7               	clrf	Dio_Pin_Write@state
  1659     01B4                     L1:
  1660     01B4  3001               	movlw	1
  1661     01B5  22E8               	fcall	_Dio_Pin_Write
  1662                           
  1663                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
  1664     01B6  3010               	movlw	16
  1665     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1666     01B8  00AC               	movwf	??_SPI_Send_16bit
  1667     01B9                     u1117:
  1668     01B9  0BAC               	decfsz	??_SPI_Send_16bit,f
  1669     01BA  29B9               	goto	u1117
  1670     01BB  0000               	nop
  1671     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1672     01BD  01A7               	clrf	Dio_Pin_Write@state
  1673     01BE  0AA7               	incf	Dio_Pin_Write@state,f
  1674     01BF  3002               	movlw	2
  1675     01C0  22E8               	fcall	_Dio_Pin_Write
  1676     01C1  3010               	movlw	16
  1677     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1678     01C3  00AC               	movwf	??_SPI_Send_16bit
  1679     01C4                     u1127:
  1680     01C4  0BAC               	decfsz	??_SPI_Send_16bit,f
  1681     01C5  29C4               	goto	u1127
  1682     01C6  0000               	nop
  1683     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1684     01C8  01A7               	clrf	Dio_Pin_Write@state
  1685     01C9  3002               	movlw	2
  1686     01CA  22E8               	fcall	_Dio_Pin_Write
  1687                           
  1688                           ;SERVICE/scr/Spi.c: 50:     }
  1689     01CB  3001               	movlw	1
  1690     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1691     01CD  07B1               	addwf	SPI_Send_16bit@bit,f
  1692     01CE  1803               	skipnc
  1693     01CF  0AB2               	incf	SPI_Send_16bit@bit+1,f
  1694     01D0  3000               	movlw	0
  1695     01D1  07B2               	addwf	SPI_Send_16bit@bit+1,f
  1696     01D2  0832               	movf	SPI_Send_16bit@bit+1,w
  1697     01D3  3A80               	xorlw	128
  1698     01D4  00DF               	movwf	95
  1699     01D5  3080               	movlw	128
  1700     01D6  025F               	subwf	95,w
  1701     01D7  1D03               	skipz
  1702     01D8  29DB               	goto	u605
  1703     01D9  3010               	movlw	16
  1704     01DA  0231               	subwf	SPI_Send_16bit@bit,w
  1705     01DB                     u605:
  1706     01DB  1C03               	skipc
  1707     01DC  2997               	goto	l1033
  1708                           
  1709                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
  1710     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1711     01DE  01A7               	clrf	Dio_Pin_Write@state
  1712     01DF  0AA7               	incf	Dio_Pin_Write@state,f
  1713     01E0  3005               	movlw	5
  1714     01E1  22E8               	fcall	_Dio_Pin_Write
  1715     01E2  0008               	return
  1716     01E3                     __end_of_SPI_Send_16bit:
  1717                           
  1718                           	psect	text9
  1719     02E8                     __ptext9:	
  1720 ;; *************** function _Dio_Pin_Write *****************
  1721 ;; Defined at:
  1722 ;;		line 30 in file "MCAL/scr/Dio.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  pinNumber       1    wreg     unsigned char 
  1725 ;;  state           1    7[BANK0 ] unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  pinNumber       1    9[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0
  1737 ;;      Params:         0       1
  1738 ;;      Locals:         0       1
  1739 ;;      Temps:          0       1
  1740 ;;      Totals:         0       3
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 2
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_SPI_Send_16bit
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752     02E8                     _Dio_Pin_Write:	
  1753                           ;psect for function _Dio_Pin_Write
  1754                           
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
  1758                           ;Dio_Pin_Write@pinNumber stored from wreg
  1759     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1760     02E9  00A9               	movwf	Dio_Pin_Write@pinNumber
  1761                           
  1762                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1763     02EA  0327               	decf	Dio_Pin_Write@state,w
  1764     02EB  1D03               	btfss	3,2
  1765     02EC  2AF9               	goto	l1021
  1766                           
  1767                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1768     02ED  3001               	movlw	1
  1769     02EE  00A8               	movwf	??_Dio_Pin_Write
  1770     02EF  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1771     02F0  2AF3               	goto	u564
  1772     02F1                     u565:
  1773     02F1  1003               	clrc
  1774     02F2  0DA8               	rlf	??_Dio_Pin_Write,f
  1775     02F3                     u564:
  1776     02F3  3EFF               	addlw	-1
  1777     02F4  1D03               	skipz
  1778     02F5  2AF1               	goto	u565
  1779     02F6  0828               	movf	??_Dio_Pin_Write,w
  1780     02F7  04CB               	iorwf	_DIO_State,f
  1781                           
  1782                           ;MCAL/scr/Dio.c: 34:     }
  1783     02F8  2B05               	goto	l1023
  1784     02F9                     l1021:
  1785                           
  1786                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1787     02F9  3001               	movlw	1
  1788     02FA  00A8               	movwf	??_Dio_Pin_Write
  1789     02FB  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1790     02FC  2AFF               	goto	u574
  1791     02FD                     u575:
  1792     02FD  1003               	clrc
  1793     02FE  0DA8               	rlf	??_Dio_Pin_Write,f
  1794     02FF                     u574:
  1795     02FF  3EFF               	addlw	-1
  1796     0300  1D03               	skipz
  1797     0301  2AFD               	goto	u575
  1798     0302  0828               	movf	??_Dio_Pin_Write,w
  1799     0303  3AFF               	xorlw	255
  1800     0304  05CB               	andwf	_DIO_State,f
  1801     0305                     l1023:
  1802                           
  1803                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1804     0305  084B               	movf	_DIO_State,w
  1805     0306  0085               	movwf	5	;volatile
  1806     0307  0008               	return
  1807     0308                     __end_of_Dio_Pin_Write:
  1808                           
  1809                           	psect	text10
  1810     0368                     __ptext10:	
  1811 ;; *************** function _Gpio_Init *****************
  1812 ;; Defined at:
  1813 ;;		line 23 in file "MCAL/scr/gpio.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0
  1827 ;;      Params:         0       0
  1828 ;;      Locals:         0       0
  1829 ;;      Temps:          0       0
  1830 ;;      Totals:         0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 2
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     0368                     _Gpio_Init:	
  1842                           ;psect for function _Gpio_Init
  1843                           
  1844                           
  1845                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  1849     0368  1683               	bsf	3,5	;RP0=1, select bank1
  1850     0369  141F               	bsf	31,0	;volatile
  1851                           
  1852                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  1853     036A  1405               	bsf	5,0	;volatile
  1854                           
  1855                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  1856     036B  30FD               	movlw	253
  1857     036C  059F               	andwf	31,f	;volatile
  1858                           
  1859                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  1860     036D  30FD               	movlw	253
  1861     036E  0585               	andwf	5,f	;volatile
  1862                           
  1863                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  1864     036F  30FB               	movlw	251
  1865     0370  059F               	andwf	31,f	;volatile
  1866                           
  1867                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  1868     0371  30FB               	movlw	251
  1869     0372  0585               	andwf	5,f	;volatile
  1870                           
  1871                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  1872     0373  1585               	bsf	5,3	;volatile
  1873                           
  1874                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  1875     0374  30F7               	movlw	247
  1876     0375  059F               	andwf	31,f	;volatile
  1877                           
  1878                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  1879     0376  30EF               	movlw	239
  1880     0377  0585               	andwf	5,f	;volatile
  1881                           
  1882                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  1883     0378  30DF               	movlw	223
  1884     0379  0585               	andwf	5,f	;volatile
  1885     037A  0008               	return
  1886     037B                     __end_of_Gpio_Init:
  1887                           
  1888                           	psect	text11
  1889     03AF                     __ptext11:	
  1890 ;; *************** function _Dio_init *****************
  1891 ;; Defined at:
  1892 ;;		line 60 in file "MCAL/scr/Dio.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0
  1906 ;;      Params:         0       0
  1907 ;;      Locals:         0       0
  1908 ;;      Temps:          0       0
  1909 ;;      Totals:         0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 3
  1913 ;; This function calls:
  1914 ;;		_Dio_Config
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     03AF                     _Dio_init:	
  1921                           ;psect for function _Dio_init
  1922                           
  1923                           
  1924                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1928     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1929     03B0  01A7               	clrf	Dio_Config@direction
  1930     03B1  01A8               	clrf	Dio_Config@state
  1931     03B2  01A9               	clrf	Dio_Config@pullType
  1932     03B3  0AA9               	incf	Dio_Config@pullType,f
  1933     03B4  3003               	movlw	3
  1934     03B5  211A               	fcall	_Dio_Config
  1935                           
  1936                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  1937     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1938     03B7  01A7               	clrf	Dio_Config@direction
  1939     03B8  0AA7               	incf	Dio_Config@direction,f
  1940     03B9  01A8               	clrf	Dio_Config@state
  1941     03BA  01A9               	clrf	Dio_Config@pullType
  1942     03BB  3004               	movlw	4
  1943     03BC  211A               	fcall	_Dio_Config
  1944     03BD  0008               	return
  1945     03BE                     __end_of_Dio_init:
  1946                           
  1947                           	psect	text12
  1948     011A                     __ptext12:	
  1949 ;; *************** function _Dio_Config *****************
  1950 ;; Defined at:
  1951 ;;		line 41 in file "MCAL/scr/Dio.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  pinNumber       1    wreg     unsigned char 
  1954 ;;  direction       1    7[BANK0 ] unsigned char 
  1955 ;;  state           1    8[BANK0 ] unsigned char 
  1956 ;;  pullType        1    9[BANK0 ] unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  pinNumber       1   16[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, btemp+1
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0
  1968 ;;      Params:         0       3
  1969 ;;      Locals:         0       3
  1970 ;;      Temps:          0       4
  1971 ;;      Totals:         0      10
  1972 ;;Total ram usage:       10 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 2
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_Dio_init
  1979 ;;		_SPI_Init
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983     011A                     _Dio_Config:	
  1984                           ;psect for function _Dio_Config
  1985                           
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  1989                           ;Dio_Config@pinNumber stored from wreg
  1990     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1991     011B  00B0               	movwf	Dio_Config@pinNumber
  1992                           
  1993                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  1994     011C  0827               	movf	Dio_Config@direction,w
  1995     011D  1903               	btfsc	3,2
  1996     011E  2933               	goto	l1055
  1997     011F  3001               	movlw	1
  1998     0120  00AA               	movwf	??_Dio_Config
  1999     0121  0A30               	incf	Dio_Config@pinNumber,w
  2000     0122  2925               	goto	u624
  2001     0123                     u625:
  2002     0123  1003               	clrc
  2003     0124  0DAA               	rlf	??_Dio_Config,f
  2004     0125                     u624:
  2005     0125  3EFF               	addlw	-1
  2006     0126  1D03               	skipz
  2007     0127  2923               	goto	u625
  2008     0128  082A               	movf	??_Dio_Config,w
  2009     0129  3AFF               	xorlw	255
  2010     012A  1683               	bsf	3,5	;RP0=1, select bank1
  2011     012B  0505               	andwf	5,w	;volatile
  2012     012C  1283               	bcf	3,5	;RP0=0, select bank0
  2013     012D  00AB               	movwf	??_Dio_Config+1
  2014     012E  01AC               	clrf	??_Dio_Config+2
  2015     012F  082B               	movf	??_Dio_Config+1,w
  2016     0130  00AE               	movwf	_Dio_Config$71
  2017     0131  082C               	movf	??_Dio_Config+2,w
  2018     0132  2949               	goto	L2
  2019     0133                     l1055:
  2020     0133  0A30               	incf	Dio_Config@pinNumber,w
  2021     0134  00DF               	movwf	95
  2022     0135  3001               	movlw	1
  2023     0136  00AA               	movwf	??_Dio_Config
  2024     0137  3000               	movlw	0
  2025     0138  00AB               	movwf	??_Dio_Config+1
  2026     0139  293D               	goto	u634
  2027     013A                     u635:
  2028     013A  1003               	clrc
  2029     013B  0DAA               	rlf	??_Dio_Config,f
  2030     013C  0DAB               	rlf	??_Dio_Config+1,f
  2031     013D                     u634:
  2032     013D  0BDF               	decfsz	95,f
  2033     013E  293A               	goto	u635
  2034     013F  082A               	movf	??_Dio_Config,w
  2035     0140  1683               	bsf	3,5	;RP0=1, select bank1
  2036     0141  0405               	iorwf	5,w	;volatile
  2037     0142  1283               	bcf	3,5	;RP0=0, select bank0
  2038     0143  00AC               	movwf	??_Dio_Config+2
  2039     0144  082B               	movf	??_Dio_Config+1,w
  2040     0145  00AD               	movwf	??_Dio_Config+3
  2041     0146  082C               	movf	??_Dio_Config+2,w
  2042     0147  00AE               	movwf	_Dio_Config$71
  2043     0148  082D               	movf	??_Dio_Config+3,w
  2044     0149                     L2:
  2045     0149  00AF               	movwf	_Dio_Config$71+1
  2046     014A  082E               	movf	_Dio_Config$71,w
  2047     014B  1683               	bsf	3,5	;RP0=1, select bank1
  2048     014C  0085               	movwf	5	;volatile
  2049                           
  2050                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  2051     014D  1283               	bcf	3,5	;RP0=0, select bank0
  2052     014E  0327               	decf	Dio_Config@direction,w
  2053     014F  1D03               	btfss	3,2
  2054     0150  296E               	goto	l1069
  2055                           
  2056                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  2057     0151  0328               	decf	Dio_Config@state,w
  2058     0152  1D03               	btfss	3,2
  2059     0153  2960               	goto	l1065
  2060                           
  2061                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  2062     0154  3001               	movlw	1
  2063     0155  00AA               	movwf	??_Dio_Config
  2064     0156  0A30               	incf	Dio_Config@pinNumber,w
  2065     0157  295A               	goto	u664
  2066     0158                     u665:
  2067     0158  1003               	clrc
  2068     0159  0DAA               	rlf	??_Dio_Config,f
  2069     015A                     u664:
  2070     015A  3EFF               	addlw	-1
  2071     015B  1D03               	skipz
  2072     015C  2958               	goto	u665
  2073     015D  082A               	movf	??_Dio_Config,w
  2074     015E  04CB               	iorwf	_DIO_State,f
  2075                           
  2076                           ;MCAL/scr/Dio.c: 48:         } else {
  2077     015F  296C               	goto	l1067
  2078     0160                     l1065:
  2079                           
  2080                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  2081     0160  3001               	movlw	1
  2082     0161  00AA               	movwf	??_Dio_Config
  2083     0162  0A30               	incf	Dio_Config@pinNumber,w
  2084     0163  2966               	goto	u674
  2085     0164                     u675:
  2086     0164  1003               	clrc
  2087     0165  0DAA               	rlf	??_Dio_Config,f
  2088     0166                     u674:
  2089     0166  3EFF               	addlw	-1
  2090     0167  1D03               	skipz
  2091     0168  2964               	goto	u675
  2092     0169  082A               	movf	??_Dio_Config,w
  2093     016A  3AFF               	xorlw	255
  2094     016B  05CB               	andwf	_DIO_State,f
  2095     016C                     l1067:
  2096                           
  2097                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  2098     016C  084B               	movf	_DIO_State,w
  2099     016D  0085               	movwf	5	;volatile
  2100     016E                     l1069:
  2101                           
  2102                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  2103     016E  0329               	decf	Dio_Config@pullType,w
  2104     016F  1D03               	btfss	3,2
  2105     0170  2982               	goto	l1073
  2106                           
  2107                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  2108     0171  307F               	movlw	127
  2109     0172  1683               	bsf	3,5	;RP0=1, select bank1
  2110     0173  0581               	andwf	1,f	;volatile
  2111                           
  2112                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  2113     0174  3001               	movlw	1
  2114     0175  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0176  00AA               	movwf	??_Dio_Config
  2116     0177  0A30               	incf	Dio_Config@pinNumber,w
  2117     0178  297B               	goto	u694
  2118     0179                     u695:
  2119     0179  1003               	clrc
  2120     017A  0DAA               	rlf	??_Dio_Config,f
  2121     017B                     u694:
  2122     017B  3EFF               	addlw	-1
  2123     017C  1D03               	skipz
  2124     017D  2979               	goto	u695
  2125     017E  082A               	movf	??_Dio_Config,w
  2126     017F  1683               	bsf	3,5	;RP0=1, select bank1
  2127     0180  0495               	iorwf	21,f	;volatile
  2128                           
  2129                           ;MCAL/scr/Dio.c: 56:     } else {
  2130     0181  0008               	return
  2131     0182                     l1073:
  2132                           
  2133                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  2134     0182  3001               	movlw	1
  2135     0183  00AA               	movwf	??_Dio_Config
  2136     0184  0A30               	incf	Dio_Config@pinNumber,w
  2137     0185  2988               	goto	u704
  2138     0186                     u705:
  2139     0186  1003               	clrc
  2140     0187  0DAA               	rlf	??_Dio_Config,f
  2141     0188                     u704:
  2142     0188  3EFF               	addlw	-1
  2143     0189  1D03               	skipz
  2144     018A  2986               	goto	u705
  2145     018B  082A               	movf	??_Dio_Config,w
  2146     018C  3AFF               	xorlw	255
  2147     018D  1683               	bsf	3,5	;RP0=1, select bank1
  2148     018E  0595               	andwf	21,f	;volatile
  2149     018F  0008               	return
  2150     0190                     __end_of_Dio_Config:
  2151                           
  2152                           	psect	text13
  2153     038E                     __ptext13:	
  2154 ;; *************** function _Adc_StartConversion *****************
  2155 ;; Defined at:
  2156 ;;		line 87 in file "MCAL/scr/Adc.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  channel         1    wreg     enum E11
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  channel         1    8[BANK0 ] enum E11
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0
  2170 ;;      Params:         0       0
  2171 ;;      Locals:         0       1
  2172 ;;      Temps:          0       1
  2173 ;;      Totals:         0       2
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 2
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184     038E                     _Adc_StartConversion:	
  2185                           ;psect for function _Adc_StartConversion
  2186                           
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _Adc_StartConversion: [wreg+status,2+status,0]
  2190                           ;Adc_StartConversion@channel stored from wreg
  2191     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2192     038F  00A8               	movwf	Adc_StartConversion@channel
  2193                           
  2194                           ;MCAL/scr/Adc.c: 90:     ADCON0 &= ~( 0b11 << 2);
  2195     0390  30F3               	movlw	243
  2196     0391  059F               	andwf	31,f	;volatile
  2197                           
  2198                           ;MCAL/scr/Adc.c: 91:     ADCON0 |= (channel << 2);
  2199     0392  0828               	movf	Adc_StartConversion@channel,w	;volatile
  2200     0393  00A7               	movwf	??_Adc_StartConversion
  2201     0394  3001               	movlw	1
  2202     0395                     u725:
  2203     0395  1003               	clrc
  2204     0396  0DA7               	rlf	??_Adc_StartConversion,f
  2205     0397  3EFF               	addlw	-1
  2206     0398  1D03               	skipz
  2207     0399  2B95               	goto	u725
  2208     039A  1003               	clrc
  2209     039B  0D27               	rlf	??_Adc_StartConversion,w
  2210     039C  049F               	iorwf	31,f	;volatile
  2211                           
  2212                           ;MCAL/scr/Adc.c: 92:     ADCON0 |= (1 << 1);
  2213     039D  149F               	bsf	31,1	;volatile
  2214     039E  0008               	return
  2215     039F                     __end_of_Adc_StartConversion:
  2216                           
  2217                           	psect	text14
  2218     028F                     __ptext14:	
  2219 ;; *************** function _Adc_ReadResult *****************
  2220 ;; Defined at:
  2221 ;;		line 96 in file "MCAL/scr/Adc.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2    7[BANK0 ] unsigned short 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0
  2235 ;;      Params:         0       2
  2236 ;;      Locals:         0       0
  2237 ;;      Temps:          0       7
  2238 ;;      Totals:         0       9
  2239 ;;Total ram usage:        9 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 2
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249     028F                     _Adc_ReadResult:	
  2250                           ;psect for function _Adc_ReadResult
  2251                           
  2252     028F                     l61:	
  2253                           ;MCAL/scr/Adc.c: 97:     while (ADCON0 & (1 << 1));
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _Adc_ReadResult: [wreg+status,2+status,0]
  2257                           
  2258     028F  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0290  189F               	btfsc	31,1	;volatile
  2260     0291  2A8F               	goto	l61
  2261                           
  2262                           ;MCAL/scr/Adc.c: 100:     if (ADCON0 & (1 << 7)) {
  2263     0292  1F9F               	btfss	31,7	;volatile
  2264     0293  2A9B               	goto	l1135
  2265                           
  2266                           ;MCAL/scr/Adc.c: 102:         return (uint16)((ADRESH << 8) | ADRESL);
  2267     0294  081E               	movf	30,w	;volatile
  2268     0295  00A8               	movwf	?_Adc_ReadResult+1
  2269     0296  1683               	bsf	3,5	;RP0=1, select bank1
  2270     0297  081E               	movf	30,w	;volatile
  2271     0298  1283               	bcf	3,5	;RP0=0, select bank0
  2272     0299  00A7               	movwf	?_Adc_ReadResult
  2273     029A  0008               	return
  2274     029B                     l1135:
  2275                           
  2276                           ;MCAL/scr/Adc.c: 105:         return (uint16)((ADRESH << 2) | (ADRESL >> 6));
  2277     029B  1683               	bsf	3,5	;RP0=1, select bank1
  2278     029C  081E               	movf	30,w	;volatile
  2279     029D  1283               	bcf	3,5	;RP0=0, select bank0
  2280     029E  00A9               	movwf	??_Adc_ReadResult
  2281     029F  3006               	movlw	6
  2282     02A0                     u755:
  2283     02A0  1003               	clrc
  2284     02A1  0CA9               	rrf	??_Adc_ReadResult,f
  2285     02A2  3EFF               	addlw	-1
  2286     02A3  1D03               	skipz
  2287     02A4  2AA0               	goto	u755
  2288     02A5  0829               	movf	??_Adc_ReadResult,w
  2289     02A6  00AA               	movwf	??_Adc_ReadResult+1
  2290     02A7  01AB               	clrf	??_Adc_ReadResult+2
  2291     02A8  081E               	movf	30,w	;volatile
  2292     02A9  00AC               	movwf	??_Adc_ReadResult+3
  2293     02AA  01AD               	clrf	??_Adc_ReadResult+4
  2294     02AB  1003               	clrc
  2295     02AC  0DAC               	rlf	??_Adc_ReadResult+3,f
  2296     02AD  0DAD               	rlf	??_Adc_ReadResult+4,f
  2297     02AE  1003               	clrc
  2298     02AF  0DAC               	rlf	??_Adc_ReadResult+3,f
  2299     02B0  0DAD               	rlf	??_Adc_ReadResult+4,f
  2300     02B1  082A               	movf	??_Adc_ReadResult+1,w
  2301     02B2  042C               	iorwf	??_Adc_ReadResult+3,w
  2302     02B3  00AE               	movwf	??_Adc_ReadResult+5
  2303     02B4  082B               	movf	??_Adc_ReadResult+2,w
  2304     02B5  042D               	iorwf	??_Adc_ReadResult+4,w
  2305     02B6  00AF               	movwf	??_Adc_ReadResult+6
  2306     02B7  082E               	movf	??_Adc_ReadResult+5,w
  2307     02B8  00A7               	movwf	?_Adc_ReadResult
  2308     02B9  082F               	movf	??_Adc_ReadResult+6,w
  2309     02BA  00A8               	movwf	?_Adc_ReadResult+1
  2310     02BB  0008               	return
  2311     02BC                     __end_of_Adc_ReadResult:
  2312                           
  2313                           	psect	text15
  2314     03BE                     __ptext15:	
  2315 ;; *************** function _Adc_Init *****************
  2316 ;; Defined at:
  2317 ;;		line 53 in file "MCAL/scr/Adc.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0
  2331 ;;      Params:         0       0
  2332 ;;      Locals:         0       0
  2333 ;;      Temps:          0       0
  2334 ;;      Totals:         0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 2
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345     03BE                     _Adc_Init:	
  2346                           ;psect for function _Adc_Init
  2347                           
  2348                           
  2349                           ;MCAL/scr/Adc.c: 54: ADCON0 |= (1 << 0);
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  2353     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2354     03BF  141F               	bsf	31,0	;volatile
  2355                           
  2356                           ;MCAL/scr/Adc.c: 59:     (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  2357     03C0  30BF               	movlw	191
  2358     03C1  059F               	andwf	31,f	;volatile
  2359     03C2  081F               	movf	31,w	;volatile
  2360                           
  2361                           ;MCAL/scr/Adc.c: 62:     (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/
      +                          1000 )) >= 1600) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 /
      +                           ((4000000)/1000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 
      +                          : ((32000000 / ((4000000)/1000 )) >= 1600) ? 0b010 : ((64000000 / ((4000000)/1000 )) >= 
      +                          1600) ? 0b110 : 0b110) << 4) );
  2362     03C3  308F               	movlw	143
  2363     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2364     03C5  059F               	andwf	31,f	;volatile
  2365     03C6  161F               	bsf	31,4	;volatile
  2366                           
  2367                           ;MCAL/scr/Adc.c: 82:         ADCON0 &= ~(1 << 7);
  2368     03C7  307F               	movlw	127
  2369     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2370     03C9  059F               	andwf	31,f	;volatile
  2371     03CA  0008               	return
  2372     03CB                     __end_of_Adc_Init:
  2373                           
  2374                           	psect	text16
  2375     02BC                     __ptext16:	
  2376 ;; *************** function _ISR *****************
  2377 ;; Defined at:
  2378 ;;		line 89 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  i               2    5[BANK0 ] unsigned short 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0
  2392 ;;      Params:         0       0
  2393 ;;      Locals:         0       2
  2394 ;;      Temps:          0       3
  2395 ;;      Totals:         0       5
  2396 ;;Total ram usage:        5 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 1
  2399 ;; This function calls:
  2400 ;;		_Dio_Pin_Read
  2401 ;; This function is called by:
  2402 ;;		Interrupt level 1
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     02BC                     _ISR:	
  2407                           ;psect for function _ISR
  2408                           
  2409                           
  2410                           ;main.c: 91:     if (INTCONbits.GPIF) {
  2411     02BC  1C0B               	btfss	11,0	;volatile
  2412     02BD  2AE0               	goto	i1l189
  2413                           
  2414                           ;main.c: 93:         uint16 i = 0 ;
  2415     02BE  01A5               	clrf	ISR@i
  2416     02BF  01A6               	clrf	ISR@i+1
  2417     02C0                     i1l1299:	
  2418                           ;main.c: 94:               while(!Dio_Pin_Read(3)){
  2419                           
  2420                           
  2421                           ;main.c: 94:               while(!Dio_Pin_Read(3)){
  2422     02C0  3003               	movlw	3
  2423     02C1  237B               	fcall	_Dio_Pin_Read
  2424     02C2  3A00               	xorlw	0
  2425     02C3  1D03               	btfss	3,2
  2426     02C4  2ADF               	goto	i1l188
  2427                           
  2428                           ;main.c: 95:                   i++;
  2429     02C5  3001               	movlw	1
  2430     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2431     02C7  07A5               	addwf	ISR@i,f
  2432     02C8  1803               	skipnc
  2433     02C9  0AA6               	incf	ISR@i+1,f
  2434     02CA  3000               	movlw	0
  2435     02CB  07A6               	addwf	ISR@i+1,f
  2436                           
  2437                           ;main.c: 96:                   _delay((unsigned long)(((100))*(4000000/4000000.0)));
  2438     02CC  3021               	movlw	33
  2439     02CD  00A2               	movwf	??_ISR
  2440     02CE                     u113_27:
  2441     02CE  0BA2               	decfsz	??_ISR,f
  2442     02CF  2ACE               	goto	u113_27
  2443                           
  2444                           ;main.c: 97:                   if(i>3000){
  2445     02D0  300B               	movlw	11
  2446     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2447     02D2  0226               	subwf	ISR@i+1,w
  2448     02D3  30B9               	movlw	185
  2449     02D4  1903               	skipnz
  2450     02D5  0225               	subwf	ISR@i,w
  2451     02D6  1C03               	skipc
  2452     02D7  2AC0               	goto	i1l1299
  2453                           
  2454                           ;main.c: 98:                       DispenserOn = !DispenserOn;
  2455     02D8  084A               	movf	_DispenserOn,w
  2456     02D9  1D03               	btfss	3,2
  2457     02DA  2ADD               	goto	u106_20
  2458     02DB  3001               	movlw	1
  2459     02DC  2ADE               	goto	u107_20
  2460     02DD                     u106_20:
  2461     02DD  3000               	movlw	0
  2462     02DE                     u107_20:
  2463     02DE  00CA               	movwf	_DispenserOn
  2464     02DF                     i1l188:	
  2465                           ;main.c: 99:                       break;}
  2466                           
  2467                           
  2468                           ;main.c: 103:         INTCONbits.GPIF = 0;
  2469     02DF  100B               	bcf	11,0	;volatile
  2470     02E0                     i1l189:
  2471     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2472     02E1  0824               	movf	??_ISR+2,w
  2473     02E2  008A               	movwf	10
  2474     02E3  0E23               	swapf	??_ISR+1,w
  2475     02E4  0083               	movwf	3
  2476     02E5  0EDE               	swapf	94,f
  2477     02E6  0E5E               	swapf	94,w
  2478     02E7  0009               	retfie
  2479     02E8                     __end_of_ISR:
  2480                           
  2481                           	psect	intentry
  2482     0004                     __pintentry:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2485                           
  2486     0004                     interrupt_function:
  2487     005E                     saved_w         set	btemp
  2488     0004  00DE               	movwf	btemp
  2489     0005  0E03               	swapf	3,w
  2490     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0007  00A3               	movwf	??_ISR+1
  2492     0008  080A               	movf	10,w
  2493     0009  00A4               	movwf	??_ISR+2
  2494     000A  2ABC               	ljmp	_ISR
  2495                           
  2496                           	psect	text17
  2497     037B                     __ptext17:	
  2498 ;; *************** function _Dio_Pin_Read *****************
  2499 ;; Defined at:
  2500 ;;		line 19 in file "MCAL/scr/Dio.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  pinNumber       1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  pinNumber       1    1[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0
  2514 ;;      Params:         0       0
  2515 ;;      Locals:         0       1
  2516 ;;      Temps:          0       1
  2517 ;;      Totals:         0       2
  2518 ;;Total ram usage:        2 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_ISR
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527     037B                     _Dio_Pin_Read:	
  2528                           ;psect for function _Dio_Pin_Read
  2529                           
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _Dio_Pin_Read: [wreg+status,2+status,0]
  2533                           ;Dio_Pin_Read@pinNumber stored from wreg
  2534     037B  1283               	bcf	3,5	;RP0=0, select bank0
  2535     037C  00A1               	movwf	Dio_Pin_Read@pinNumber
  2536                           
  2537                           ;MCAL/scr/Dio.c: 20:         if (GPIO & (1 << pinNumber)) {
  2538     037D  3001               	movlw	1
  2539     037E  00A0               	movwf	??_Dio_Pin_Read
  2540     037F  0A21               	incf	Dio_Pin_Read@pinNumber,w
  2541     0380  2B83               	goto	u76_24
  2542     0381                     u76_25:
  2543     0381  1003               	clrc
  2544     0382  0DA0               	rlf	??_Dio_Pin_Read,f
  2545     0383                     u76_24:
  2546     0383  3EFF               	addlw	-1
  2547     0384  1D03               	skipz
  2548     0385  2B81               	goto	u76_25
  2549     0386  0820               	movf	??_Dio_Pin_Read,w
  2550     0387  0505               	andwf	5,w	;volatile
  2551     0388  1903               	btfsc	3,2
  2552     0389  2B8C               	goto	i1l1147
  2553                           
  2554                           ;MCAL/scr/Dio.c: 21:             return 1;
  2555     038A  3001               	movlw	1
  2556     038B  0008               	return
  2557     038C                     i1l1147:
  2558                           
  2559                           ;MCAL/scr/Dio.c: 23:             return 0;
  2560     038C  3000               	movlw	0
  2561     038D  0008               	return
  2562     038E                     __end_of_Dio_Pin_Read:
  2563     0000                     ___latbits      equ	0
  2564     005E                     btemp           set	94	;btemp
  2565     005E                     wtemp0          set	94
  2566                           
  2567                           	psect	config
  2568                           
  2569                           ;Config register CONFIG @ 0x2007
  2570                           ;	Oscillator Selection bits
  2571                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2572                           ;	Watchdog Timer Enable bit
  2573                           ;	WDTE = OFF, WDT disabled
  2574                           ;	Power-Up Timer Enable bit
  2575                           ;	PWRTE = OFF, PWRT disabled
  2576                           ;	GP3/MCLR pin function select
  2577                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2578                           ;	Brown-out Detect Enable bit
  2579                           ;	BOREN = OFF, BOD disabled
  2580                           ;	Code Protection bit
  2581                           ;	CP = OFF, Program Memory code protection is disabled
  2582                           ;	Data Code Protection bit
  2583                           ;	CPD = OFF, Data memory code protection is disabled
  2584     2007                     	org	8199
  2585     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     40      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lmul
    ___lwmod->___lwdiv
    ___lmul->_Adc_ReadResult
    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _MAX7219_DisplayData->_SPI_Send_16bit
    _MAX7219_DisplayData->___lwmod
    _MAX7219_ClearDisplay->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_Dio_Pin_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2025
                                             29 BANK0     11    11      0
                           _Adc_Init
                     _Adc_ReadResult
                _Adc_StartConversion
                      _Dio_Pin_Write
                           _Dio_init
                          _Gpio_Init
               _MAX7219_ClearDisplay
                _MAX7219_DisplayData
                       _MAX7219_Init
                           _SPI_Init
                             ___lmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                             14 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                             16 BANK0     13     5      8
                     _Adc_ReadResult (ARG)
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     186
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (1) _MAX7219_DisplayData                                  6     5      1     246
                                             19 BANK0      6     5      1
                     _SPI_Send_16bit
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _MAX7219_ClearDisplay                                 3     3      0     254
                                             19 BANK0      3     3      0
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     186
                                             10 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      88
                                              7 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              7 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_StartConversion                                  2     2      0      29
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Adc_ReadResult                                       9     7      2       0
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0      53
                                              2 BANK0      5     5      0
                       _Dio_Pin_Read
 ---------------------------------------------------------------------------------
 (5) _Dio_Pin_Read                                         2     2      0      29
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_ReadResult
   _Adc_StartConversion
   _Dio_Pin_Write
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_ClearDisplay
     _SPI_Send_16bit
       _Dio_Pin_Write
   _MAX7219_DisplayData
     _SPI_Send_16bit
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   _MAX7219_Init
     _SPI_Send_16bit
   _SPI_Init
     _Dio_Config
   ___lmul
     _Adc_ReadResult (ARG)
   ___lwdiv
   ___lwmod

 _ISR (ROOT)
   _Dio_Pin_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     40      45     72.6%
STACK                0      0       0      0.0%
DATA                 0      0      45      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 21:50:17 2024

        __end_of_Dio_Pin_Read 038E                             pc 0002                            l61 028F  
                          fsr 0004         __end_of_Dio_Pin_Write 0308                _SPI_Send_16bit 0190  
                         _ISR 02BC                           u605 01DB                           u704 0188  
                         u624 0125                           u705 0186                           u625 0123  
                         u634 013D                           u635 013A                           u564 02F3  
                         u725 0395                           u565 02F1                           u805 0204  
                         u574 02FF                           u575 02FD                           u815 020C  
                         u664 015A                           u584 01A4                           u665 0158  
                         u585 01A1                           u674 0166                           u755 02A0  
                         u675 0164                           u915 0268                           u845 022F  
                         u694 017B                           u695 0179                           u935 0277  
                         u865 0239                           u945 0280                           u875 0245  
                         u885 024F                           _WPU 0095                           fsr0 0004  
                        ?_ISR 0020                          ISR@i 0025                          l1021 02F9  
                        l1023 0305                          l1033 0197                          l1211 0271  
                        l1037 01B3                          l1135 029B                          l1055 0133  
                        l1215 027F                          l1073 0182                          l1065 0160  
                        l1209 0265                          l1067 016C                          l1083 0342  
                        l1163 01EC                          l1219 028A                          l1069 016E  
                        l1253 0041                          l1167 0202                          l1255 0032  
                        l1193 024E                          l1185 022C                          l1273 0100  
                        l1257 0045                          l1187 0238                          l1275 007F  
                        l1197 0259                          l1277 0104                          l1289 001E  
                        u1005 006E                          u1107 00F2                          u1117 01B9  
                        u1127 01C4                          _IOCB 0096                          u1097 0039  
                        _GPIO 0005                          _main 0014                          btemp 005E  
                  _Dio_Config 011A                          start 000B                         ??_ISR 0022  
      __end_of_SPI_Send_16bit 01E3                         ?_main 0020                         _ANSEL 009F  
             __end_of___lwdiv 025E               __end_of___lwmod 028F                         i1l188 02DF  
                       i1l189 02E0                         u76_24 0383                         u76_25 0381  
         ___lmul@multiplicand 0034              __end_of_Adc_Init 03CB                         main@i 0047  
            __end_of_SPI_Init 033F                         pclath 000A          __end_of_MAX7219_Init 0327  
                       status 0003                         wtemp0 005E  __end_of_MAX7219_ClearDisplay 0355  
            __end_of_Dio_init 03BE               __initialization 000C                  __end_of_main 011A  
             ?_SPI_Send_16bit 002A                        ??_main 003D                        _ADCON0 001F  
            ??_Adc_ReadResult 0029                        _ADRESH 001E                        _ADRESL 009E  
                      i1l1147 038C                        i1l1299 02C0                        u113_27 02CE  
                      u106_20 02DD                        u107_20 02DE                        _TRISIO 0085  
                 ?_Dio_Config 0027                   _DispenserOn 004A                        ___lmul 01E3  
                   ??___lwdiv 0000                     ??___lwmod 0000            SPI_Send_16bit@data 002A  
                      saved_w 005E           _MAX7219_DisplayData 0355                  _Dio_Pin_Read 037B  
     __end_of__initialization 0012      MAX7219_DisplayData@digit 0038          ?_MAX7219_DisplayData 0033  
              __pcstackCOMMON 0000                     ?_Adc_Init 0020             __end_of_Gpio_Init 037B  
                   ?_SPI_Init 0020          _MAX7219_ClearDisplay 033F                     ?_Dio_init 0020  
                  __pbssBANK0 0048         MAX7219_ClearDisplay@i 0035         ??_MAX7219_DisplayData 0034  
                  __pmaintext 0014                       ?___lmul 0030        Dio_Pin_Write@pinNumber 0029  
                  __pintentry 0004                    ??_Adc_Init 0000                ___lmul@product 0039  
                  ??_SPI_Init 0000                  _MAX7219_Init 0308         ?_MAX7219_ClearDisplay 0020  
          Dio_Config@pullType 0029                    ??_Dio_init 0000                    __stringtab 039F  
                     _Counter 0048              ??_SPI_Send_16bit 002C                       ___lwdiv 0223  
                     ___lwmod 025E                       __ptext1 025E                       __ptext2 0223  
                     __ptext3 01E3                       __ptext4 0327                       __ptext5 0308  
                     __ptext6 0355                       __ptext7 033F                       __ptext8 0190  
                     __ptext9 02E8                     _DIO_State 004B          end_of_initialization 0012  
               _Dio_Config$71 002E                  ??_Dio_Config 002A                 _Dio_Pin_Write 02E8  
      ??_MAX7219_ClearDisplay 0033            __end_of_Dio_Config 0190           _Adc_StartConversion 038E  
        ?_Adc_StartConversion 0020                __end_of___lmul 0223                ?_Dio_Pin_Write 0027  
                   _Gpio_Init 0368           start_initialization 000C  MAX7219_DisplayData@character 0033  
                 __end_of_ISR 02E8                   _BCD_Enabled 004C         ??_Adc_StartConversion 0027  
                    ??___lmul 0038             SPI_Send_16bit@bit 0031                    ?_Gpio_Init 0020  
                   ___latbits 0000                 __pcstackBANK0 0020   __end_of_MAX7219_DisplayData 0368  
            _MAX7219_No_Table 03A5           Dio_Config@direction 0027              ___lwdiv@dividend 0029  
             Dio_Config@state 0028               ??_Dio_Pin_Write 0028                      ?___lwdiv 0027  
                    ?___lwmod 002E                     __pstrings 039F           Dio_Config@pinNumber 0030  
            ___lwdiv@quotient 002B             interrupt_function 0004                      _Adc_Init 03BE  
                    _SPI_Init 0327                   __stringbase 03A4                   ??_Gpio_Init 0000  
                    _Dio_init 03AF                 ?_Dio_Pin_Read 0020            Dio_Pin_Write@state 0027  
           ___lmul@multiplier 0030                _Adc_ReadResult 028F            __end_of__stringtab 03A5  
                    _main$776 0045               ___lwdiv@divisor 0027                ??_Dio_Pin_Read 0020  
             ___lwdiv@counter 002D                      __ptext10 0368                      __ptext11 03AF  
                    __ptext12 011A                      __ptext13 038E                      __ptext14 028F  
                    __ptext15 03BE                      __ptext16 02BC                      __ptext17 037B  
      __end_of_Adc_ReadResult 02BC                 ?_MAX7219_Init 0020                    _INTCONbits 000B  
    __end_of_MAX7219_No_Table 03AF                      intlevel1 0000              ___lwmod@dividend 0030  
 __end_of_Adc_StartConversion 039F               ?_Adc_ReadResult 0027                     stringcode 039F  
  Adc_StartConversion@channel 0028         Dio_Pin_Read@pinNumber 0021                ??_MAX7219_Init 0000  
                  _OPTION_REG 0081               ___lwmod@divisor 002E               ___lwmod@counter 0032  
                    stringdir 039F                      stringtab 039F  
