

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 23:08:59 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x5E,2
    30     0000                     
    31                           ; Generated 17/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F675 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     GPIO            equ	5	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0019                     CMCON           equ	25	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISIO          equ	133	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008E                     PCON            equ	142	;# 
    93     0090                     OSCCAL          equ	144	;# 
    94     0095                     WPU             equ	149	;# 
    95     0096                     IOC             equ	150	;# 
    96     0096                     IOCB            equ	150	;# 
    97     0099                     VRCON           equ	153	;# 
    98     009A                     EEDATA          equ	154	;# 
    99     009A                     EEDAT           equ	154	;# 
   100     009B                     EEADR           equ	155	;# 
   101     009C                     EECON1          equ	156	;# 
   102     009D                     EECON2          equ	157	;# 
   103     009E                     ADRESL          equ	158	;# 
   104     009F                     ANSEL           equ	159	;# 
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     GPIO            equ	5	;# 
   111     000A                     PCLATH          equ	10	;# 
   112     000B                     INTCON          equ	11	;# 
   113     000C                     PIR1            equ	12	;# 
   114     000E                     TMR1            equ	14	;# 
   115     000E                     TMR1L           equ	14	;# 
   116     000F                     TMR1H           equ	15	;# 
   117     0010                     T1CON           equ	16	;# 
   118     0019                     CMCON           equ	25	;# 
   119     001E                     ADRESH          equ	30	;# 
   120     001F                     ADCON0          equ	31	;# 
   121     0081                     OPTION_REG      equ	129	;# 
   122     0085                     TRISIO          equ	133	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008E                     PCON            equ	142	;# 
   125     0090                     OSCCAL          equ	144	;# 
   126     0095                     WPU             equ	149	;# 
   127     0096                     IOC             equ	150	;# 
   128     0096                     IOCB            equ	150	;# 
   129     0099                     VRCON           equ	153	;# 
   130     009A                     EEDATA          equ	154	;# 
   131     009A                     EEDAT           equ	154	;# 
   132     009B                     EEADR           equ	155	;# 
   133     009C                     EECON1          equ	156	;# 
   134     009D                     EECON2          equ	157	;# 
   135     009E                     ADRESL          equ	158	;# 
   136     009F                     ANSEL           equ	159	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     GPIO            equ	5	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0019                     CMCON           equ	25	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISIO          equ	133	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008E                     PCON            equ	142	;# 
   157     0090                     OSCCAL          equ	144	;# 
   158     0095                     WPU             equ	149	;# 
   159     0096                     IOC             equ	150	;# 
   160     0096                     IOCB            equ	150	;# 
   161     0099                     VRCON           equ	153	;# 
   162     009A                     EEDATA          equ	154	;# 
   163     009A                     EEDAT           equ	154	;# 
   164     009B                     EEADR           equ	155	;# 
   165     009C                     EECON1          equ	156	;# 
   166     009D                     EECON2          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ANSEL           equ	159	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     GPIO            equ	5	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0019                     CMCON           equ	25	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISIO          equ	133	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008E                     PCON            equ	142	;# 
   189     0090                     OSCCAL          equ	144	;# 
   190     0095                     WPU             equ	149	;# 
   191     0096                     IOC             equ	150	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0099                     VRCON           equ	153	;# 
   194     009A                     EEDATA          equ	154	;# 
   195     009A                     EEDAT           equ	154	;# 
   196     009B                     EEADR           equ	155	;# 
   197     009C                     EECON1          equ	156	;# 
   198     009D                     EECON2          equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ANSEL           equ	159	;# 
   201     0000                     INDF            equ	0	;# 
   202     0001                     TMR0            equ	1	;# 
   203     0002                     PCL             equ	2	;# 
   204     0003                     STATUS          equ	3	;# 
   205     0004                     FSR             equ	4	;# 
   206     0005                     GPIO            equ	5	;# 
   207     000A                     PCLATH          equ	10	;# 
   208     000B                     INTCON          equ	11	;# 
   209     000C                     PIR1            equ	12	;# 
   210     000E                     TMR1            equ	14	;# 
   211     000E                     TMR1L           equ	14	;# 
   212     000F                     TMR1H           equ	15	;# 
   213     0010                     T1CON           equ	16	;# 
   214     0019                     CMCON           equ	25	;# 
   215     001E                     ADRESH          equ	30	;# 
   216     001F                     ADCON0          equ	31	;# 
   217     0081                     OPTION_REG      equ	129	;# 
   218     0085                     TRISIO          equ	133	;# 
   219     008C                     PIE1            equ	140	;# 
   220     008E                     PCON            equ	142	;# 
   221     0090                     OSCCAL          equ	144	;# 
   222     0095                     WPU             equ	149	;# 
   223     0096                     IOC             equ	150	;# 
   224     0096                     IOCB            equ	150	;# 
   225     0099                     VRCON           equ	153	;# 
   226     009A                     EEDATA          equ	154	;# 
   227     009A                     EEDAT           equ	154	;# 
   228     009B                     EEADR           equ	155	;# 
   229     009C                     EECON1          equ	156	;# 
   230     009D                     EECON2          equ	157	;# 
   231     009E                     ADRESL          equ	158	;# 
   232     009F                     ANSEL           equ	159	;# 
   233     0000                     INDF            equ	0	;# 
   234     0001                     TMR0            equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR             equ	4	;# 
   238     0005                     GPIO            equ	5	;# 
   239     000A                     PCLATH          equ	10	;# 
   240     000B                     INTCON          equ	11	;# 
   241     000C                     PIR1            equ	12	;# 
   242     000E                     TMR1            equ	14	;# 
   243     000E                     TMR1L           equ	14	;# 
   244     000F                     TMR1H           equ	15	;# 
   245     0010                     T1CON           equ	16	;# 
   246     0019                     CMCON           equ	25	;# 
   247     001E                     ADRESH          equ	30	;# 
   248     001F                     ADCON0          equ	31	;# 
   249     0081                     OPTION_REG      equ	129	;# 
   250     0085                     TRISIO          equ	133	;# 
   251     008C                     PIE1            equ	140	;# 
   252     008E                     PCON            equ	142	;# 
   253     0090                     OSCCAL          equ	144	;# 
   254     0095                     WPU             equ	149	;# 
   255     0096                     IOC             equ	150	;# 
   256     0096                     IOCB            equ	150	;# 
   257     0099                     VRCON           equ	153	;# 
   258     009A                     EEDATA          equ	154	;# 
   259     009A                     EEDAT           equ	154	;# 
   260     009B                     EEADR           equ	155	;# 
   261     009C                     EECON1          equ	156	;# 
   262     009D                     EECON2          equ	157	;# 
   263     009E                     ADRESL          equ	158	;# 
   264     009F                     ANSEL           equ	159	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     GPIO            equ	5	;# 
   271     000A                     PCLATH          equ	10	;# 
   272     000B                     INTCON          equ	11	;# 
   273     000C                     PIR1            equ	12	;# 
   274     000E                     TMR1            equ	14	;# 
   275     000E                     TMR1L           equ	14	;# 
   276     000F                     TMR1H           equ	15	;# 
   277     0010                     T1CON           equ	16	;# 
   278     0019                     CMCON           equ	25	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISIO          equ	133	;# 
   283     008C                     PIE1            equ	140	;# 
   284     008E                     PCON            equ	142	;# 
   285     0090                     OSCCAL          equ	144	;# 
   286     0095                     WPU             equ	149	;# 
   287     0096                     IOC             equ	150	;# 
   288     0096                     IOCB            equ	150	;# 
   289     0099                     VRCON           equ	153	;# 
   290     009A                     EEDATA          equ	154	;# 
   291     009A                     EEDAT           equ	154	;# 
   292     009B                     EEADR           equ	155	;# 
   293     009C                     EECON1          equ	156	;# 
   294     009D                     EECON2          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ANSEL           equ	159	;# 
   297                           
   298                           	psect	strings
   299     036D                     __pstrings:
   300     036D                     stringtab:
   301     036D                     __stringtab:
   302     036D                     stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305     036D                     stringdir:
   306     036D  3003               	movlw	high stringdir
   307     036E  008A               	movwf	10
   308     036F  0804               	movf	4,w
   309     0370  0A84               	incf	4,f
   310     0371  0782               	addwf	2,f
   311     0372                     __stringbase:
   312     0372  3400               	retlw	0
   313     0373                     __end_of__stringtab:
   314     0373                     _MAX7219_No_Table:
   315     0373  347E               	retlw	126
   316     0374  3430               	retlw	48
   317     0375  346D               	retlw	109
   318     0376  3479               	retlw	121
   319     0377  3433               	retlw	51
   320     0378  345B               	retlw	91
   321     0379  345F               	retlw	95
   322     037A  3470               	retlw	112
   323     037B  347F               	retlw	127
   324     037C  347B               	retlw	123
   325     037D                     __end_of_MAX7219_No_Table:
   326     000B                     _INTCONbits     set	11
   327     0005                     _GPIO           set	5
   328     001E                     _ADRESH         set	30
   329     001F                     _ADCON0         set	31
   330     0096                     _IOCB           set	150
   331     0095                     _WPU            set	149
   332     0081                     _OPTION_REG     set	129
   333     0085                     _TRISIO         set	133
   334     009E                     _ADRESL         set	158
   335     009F                     _ANSEL          set	159
   336                           
   337                           	psect	cinit
   338     000C                     start_initialization:	
   339                           ; #config settings
   340                           
   341     000C                     __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344     000C  1283               	bcf	3,5	;RP0=0, select bank0
   345     000D  01BF               	clrf	__pbssBANK0& (0+127)
   346     000E  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   347     000F  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   348     0010  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   349     0011  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   350     0012                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353     0012                     __end_of__initialization:
   354     0012  0183               	clrf	3
   355     0013  2814               	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358     003F                     __pbssBANK0:
   359     003F                     _Counter:
   360     003F                     	ds	2
   361     0041                     _DispenserOn:
   362     0041                     	ds	1
   363     0042                     _DIO_State:
   364     0042                     	ds	1
   365     0043                     _BCD_Enabled:
   366     0043                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0000                     __pcstackCOMMON:
   370     0000                     ??_MAX7219_Init:
   371     0000                     ??_Adc_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0000                     ??_Dio_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0000                     ??_Gpio_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0000                     ??_SPI_Init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0000                     ??___wmul:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0000                     ??___lwdiv:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0000                     ??___lwmod:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           	psect	cstackBANK0
   394     0020                     __pcstackBANK0:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0020                     ?_MAX7219_Init:
   398     0020                     ?_MAX7219_ClearDisplay:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0020                     ?_Adc_Init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     ?_Adc_StartConversion:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0020                     ?_Dio_Pin_Read:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0020                     ?_Dio_init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ?_Gpio_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     ?_SPI_Init:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0020                     ?_ISR:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0020                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0020                     ??_Dio_Pin_Read:	
   426                           ; 2 bytes @ 0x0
   427                           
   428                           
   429                           ; 1 bytes @ 0x0
   430     0020                     	ds	1
   431     0021                     Dio_Pin_Read@pinNumber:
   432                           
   433                           ; 1 bytes @ 0x1
   434     0021                     	ds	1
   435     0022                     ??_ISR:
   436                           
   437                           ; 1 bytes @ 0x2
   438     0022                     	ds	3
   439     0025                     ISR@i:
   440                           
   441                           ; 2 bytes @ 0x5
   442     0025                     	ds	2
   443     0027                     ?_Dio_Pin_Write:
   444     0027                     ?_Dio_Config:	
   445                           ; 1 bytes @ 0x7
   446                           
   447     0027                     ?_Adc_ReadResult:	
   448                           ; 1 bytes @ 0x7
   449                           
   450     0027                     ?___lwdiv:	
   451                           ; 2 bytes @ 0x7
   452                           
   453     0027                     Dio_Pin_Write@state:	
   454                           ; 2 bytes @ 0x7
   455                           
   456     0027                     Dio_Config@direction:	
   457                           ; 1 bytes @ 0x7
   458                           
   459     0027                     ___lwdiv@divisor:	
   460                           ; 1 bytes @ 0x7
   461                           
   462     0027                     ??_Adc_StartConversion:	
   463                           ; 2 bytes @ 0x7
   464                           
   465                           
   466                           ; 1 bytes @ 0x7
   467     0027                     	ds	1
   468     0028                     Adc_StartConversion@channel:
   469     0028                     Dio_Config@state:	
   470                           ; 1 bytes @ 0x8
   471                           
   472     0028                     ??_Dio_Pin_Write:	
   473                           ; 1 bytes @ 0x8
   474                           
   475                           
   476                           ; 1 bytes @ 0x8
   477     0028                     	ds	1
   478     0029                     Dio_Pin_Write@pinNumber:
   479     0029                     Dio_Config@pullType:	
   480                           ; 1 bytes @ 0x9
   481                           
   482     0029                     ___lwdiv@dividend:	
   483                           ; 1 bytes @ 0x9
   484                           
   485     0029                     ??_Adc_ReadResult:	
   486                           ; 2 bytes @ 0x9
   487                           
   488                           
   489                           ; 1 bytes @ 0x9
   490     0029                     	ds	1
   491     002A                     ?_SPI_Send_16bit:
   492     002A                     SPI_Send_16bit@data:	
   493                           ; 1 bytes @ 0xA
   494                           
   495     002A                     ??_Dio_Config:	
   496                           ; 2 bytes @ 0xA
   497                           
   498                           
   499                           ; 1 bytes @ 0xA
   500     002A                     	ds	1
   501     002B                     ___lwdiv@quotient:
   502                           
   503                           ; 2 bytes @ 0xB
   504     002B                     	ds	1
   505     002C                     ??_SPI_Send_16bit:
   506                           
   507                           ; 1 bytes @ 0xC
   508     002C                     	ds	1
   509     002D                     ___lwdiv@counter:
   510                           
   511                           ; 1 bytes @ 0xD
   512     002D                     	ds	1
   513     002E                     ?___lwmod:
   514     002E                     _Dio_Config$71:	
   515                           ; 2 bytes @ 0xE
   516                           
   517     002E                     ___lwmod@divisor:	
   518                           ; 2 bytes @ 0xE
   519                           
   520                           
   521                           ; 2 bytes @ 0xE
   522     002E                     	ds	2
   523     0030                     ?___wmul:
   524     0030                     Dio_Config@pinNumber:	
   525                           ; 2 bytes @ 0x10
   526                           
   527     0030                     ___wmul@multiplier:	
   528                           ; 1 bytes @ 0x10
   529                           
   530     0030                     ___lwmod@dividend:	
   531                           ; 2 bytes @ 0x10
   532                           
   533                           
   534                           ; 2 bytes @ 0x10
   535     0030                     	ds	1
   536     0031                     SPI_Send_16bit@bit:
   537                           
   538                           ; 2 bytes @ 0x11
   539     0031                     	ds	1
   540     0032                     ___lwmod@counter:
   541     0032                     ___wmul@multiplicand:	
   542                           ; 1 bytes @ 0x12
   543                           
   544                           
   545                           ; 2 bytes @ 0x12
   546     0032                     	ds	1
   547     0033                     ?_MAX7219_DisplayData:
   548     0033                     MAX7219_DisplayData@character:	
   549                           ; 1 bytes @ 0x13
   550                           
   551     0033                     ??_MAX7219_ClearDisplay:	
   552                           ; 1 bytes @ 0x13
   553                           
   554                           
   555                           ; 1 bytes @ 0x13
   556     0033                     	ds	1
   557     0034                     ___wmul@product:
   558     0034                     ??_MAX7219_DisplayData:	
   559                           ; 2 bytes @ 0x14
   560                           
   561                           
   562                           ; 1 bytes @ 0x14
   563     0034                     	ds	1
   564     0035                     MAX7219_ClearDisplay@i:
   565                           
   566                           ; 1 bytes @ 0x15
   567     0035                     	ds	3
   568     0038                     MAX7219_DisplayData@digit:
   569                           
   570                           ; 1 bytes @ 0x18
   571     0038                     	ds	1
   572     0039                     ??_main:
   573                           
   574                           ; 1 bytes @ 0x19
   575     0039                     	ds	3
   576     003C                     _main$776:
   577                           
   578                           ; 2 bytes @ 0x1C
   579     003C                     	ds	2
   580     003E                     main@i:
   581                           
   582                           ; 1 bytes @ 0x1E
   583     003E                     	ds	1
   584                           
   585                           	psect	maintext
   586     0014                     __pmaintext:	
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 29 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  i               1   30[BANK0 ] unsigned char 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  2  162[None  ] int 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : B00/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0
   606 ;;      Params:         0       0
   607 ;;      Locals:         0       3
   608 ;;      Temps:          0       3
   609 ;;      Totals:         0       6
   610 ;;Total ram usage:        6 bytes
   611 ;; Hardware stack levels required when called: 5
   612 ;; This function calls:
   613 ;;		_Adc_Init
   614 ;;		_Adc_ReadResult
   615 ;;		_Adc_StartConversion
   616 ;;		_Dio_Pin_Write
   617 ;;		_Dio_init
   618 ;;		_Gpio_Init
   619 ;;		_MAX7219_ClearDisplay
   620 ;;		_MAX7219_DisplayData
   621 ;;		_MAX7219_Init
   622 ;;		_SPI_Init
   623 ;;		___lwdiv
   624 ;;		___lwmod
   625 ;;		___wmul
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631     0014                     _main:	
   632                           ;psect for function _main
   633                           
   634                           
   635                           ;main.c: 31:         Gpio_Init();
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   639     0014  2336               	fcall	_Gpio_Init
   640                           
   641                           ;main.c: 32:         Dio_init();
   642     0015  237D               	fcall	_Dio_init
   643                           
   644                           ;main.c: 33:         Adc_Init();
   645     0016  238C               	fcall	_Adc_Init
   646                           
   647                           ;main.c: 34:         SPI_Init();
   648     0017  22F5               	fcall	_SPI_Init
   649                           
   650                           ;main.c: 35:       MAX7219_Init();
   651     0018  22D6               	fcall	_MAX7219_Init
   652                           
   653                           ;main.c: 36:    IOCB |= (1 << 3);
   654     0019  1683               	bsf	3,5	;RP0=1, select bank1
   655     001A  1596               	bsf	22,3	;volatile
   656                           
   657                           ;main.c: 38:     INTCONbits.GIE = 1;
   658     001B  178B               	bsf	11,7	;volatile
   659                           
   660                           ;main.c: 39:     INTCONbits.PEIE = 1;
   661     001C  170B               	bsf	11,6	;volatile
   662                           
   663                           ;main.c: 40:     INTCONbits.GPIE = 1;
   664     001D  158B               	bsf	11,3	;volatile
   665     001E                     l1289:
   666                           
   667                           ;main.c: 58:         while(DispenserOn){
   668     001E  1283               	bcf	3,5	;RP0=0, select bank0
   669     001F  0841               	movf	_DispenserOn,w
   670     0020  1903               	btfsc	3,2
   671     0021  281E               	goto	l1289
   672                           
   673                           ;main.c: 59:             Adc_StartConversion(ADC_CHANNEL_AN0);
   674     0022  3000               	movlw	0
   675     0023  235C               	fcall	_Adc_StartConversion
   676                           
   677                           ;main.c: 61:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x04,0x1D); MAX7219
      +                          _DisplayData(0x03,0x15);;
   678     0024  230D               	fcall	_MAX7219_ClearDisplay
   679     0025  301D               	movlw	29
   680     0026  1283               	bcf	3,5	;RP0=0, select bank0
   681     0027  00B3               	movwf	MAX7219_DisplayData@character
   682     0028  3004               	movlw	4
   683     0029  2323               	fcall	_MAX7219_DisplayData
   684     002A  3015               	movlw	21
   685     002B  1283               	bcf	3,5	;RP0=0, select bank0
   686     002C  00B3               	movwf	MAX7219_DisplayData@character
   687     002D  3003               	movlw	3
   688     002E  2323               	fcall	_MAX7219_DisplayData
   689                           
   690                           ;main.c: 64:             for(uint8 i=0; (i<100)&&DispenserOn;i++ )
   691     002F  1283               	bcf	3,5	;RP0=0, select bank0
   692     0030  01BE               	clrf	main@i
   693     0031  2841               	goto	l1253
   694     0032                     l1255:
   695     0032  0841               	movf	_DispenserOn,w
   696     0033  1903               	btfsc	3,2
   697     0034  2845               	goto	l1257
   698                           
   699                           ;main.c: 65:                 {_delay((unsigned long)((10)*(4000000/4000.0)));}
   700     0035  300D               	movlw	13
   701     0036  00BA               	movwf	??_main+1
   702     0037  30FB               	movlw	251
   703     0038  00B9               	movwf	??_main
   704     0039                     u1077:
   705     0039  0BB9               	decfsz	??_main,f
   706     003A  2839               	goto	u1077
   707     003B  0BBA               	decfsz	??_main+1,f
   708     003C  2839               	goto	u1077
   709     003D  283E               	nop2
   710     003E  3001               	movlw	1
   711     003F  1283               	bcf	3,5	;RP0=0, select bank0
   712     0040  07BE               	addwf	main@i,f
   713     0041                     l1253:
   714     0041  3064               	movlw	100
   715     0042  023E               	subwf	main@i,w
   716     0043  1C03               	btfss	3,0
   717     0044  2832               	goto	l1255
   718     0045                     l1257:
   719                           
   720                           ;main.c: 67:             MAX7219_ClearDisplay();
   721     0045  230D               	fcall	_MAX7219_ClearDisplay
   722                           
   723                           ;main.c: 70:             Dio_Pin_Write (4,1);
   724     0046  1283               	bcf	3,5	;RP0=0, select bank0
   725     0047  01A7               	clrf	Dio_Pin_Write@state
   726     0048  0AA7               	incf	Dio_Pin_Write@state,f
   727     0049  3004               	movlw	4
   728     004A  22B6               	fcall	_Dio_Pin_Write
   729                           
   730                           ;main.c: 73:             Counter = 1 + (89*Adc_ReadResult()/1024);
   731     004B  223B               	fcall	_Adc_ReadResult
   732     004C  1283               	bcf	3,5	;RP0=0, select bank0
   733     004D  0828               	movf	?_Adc_ReadResult+1,w
   734     004E  00B1               	movwf	___wmul@multiplier+1
   735     004F  0827               	movf	?_Adc_ReadResult,w
   736     0050  00B0               	movwf	___wmul@multiplier
   737     0051  3059               	movlw	89
   738     0052  00B2               	movwf	___wmul@multiplicand
   739     0053  3000               	movlw	0
   740     0054  00B3               	movwf	___wmul@multiplicand+1
   741     0055  2294               	fcall	___wmul
   742     0056  1283               	bcf	3,5	;RP0=0, select bank0
   743     0057  0830               	movf	?___wmul,w
   744     0058  00B9               	movwf	??_main
   745     0059  0831               	movf	?___wmul+1,w
   746     005A  00BA               	movwf	??_main+1
   747     005B  300A               	movlw	10
   748     005C                     u985:
   749     005C  1003               	clrc
   750     005D  0CBA               	rrf	??_main+1,f
   751     005E  0CB9               	rrf	??_main,f
   752     005F  3EFF               	addlw	-1
   753     0060  1D03               	skipz
   754     0061  285C               	goto	u985
   755     0062  0839               	movf	??_main,w
   756     0063  3E01               	addlw	1
   757     0064  00BF               	movwf	_Counter
   758     0065  083A               	movf	??_main+1,w
   759     0066  1803               	skipnc
   760     0067  3E01               	addlw	1
   761     0068  3E00               	addlw	0
   762     0069  00C0               	movwf	_Counter+1
   763                           
   764                           ;main.c: 75:             for(;(Counter>0)&&DispenserOn;Counter--){
   765     006A  28EC               	goto	l1273
   766     006B                     l1275:
   767     006B  0841               	movf	_DispenserOn,w
   768     006C  1903               	btfsc	3,2
   769     006D  28F0               	goto	l1277
   770                           
   771                           ;main.c: 76:                 MAX7219_DisplayData(0x04, MAX7219_No_Table[Counter/600]);
   772     006E  3058               	movlw	88
   773     006F  00A7               	movwf	___lwdiv@divisor
   774     0070  3002               	movlw	2
   775     0071  00A8               	movwf	___lwdiv@divisor+1
   776     0072  0840               	movf	_Counter+1,w
   777     0073  00AA               	movwf	___lwdiv@dividend+1
   778     0074  083F               	movf	_Counter,w
   779     0075  00A9               	movwf	___lwdiv@dividend
   780     0076  21CF               	fcall	___lwdiv
   781     0077  1283               	bcf	3,5	;RP0=0, select bank0
   782     0078  0827               	movf	?___lwdiv,w
   783     0079  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   784     007A  0084               	movwf	4
   785     007B  236D               	fcall	stringdir
   786     007C  00B3               	movwf	MAX7219_DisplayData@character
   787     007D  3004               	movlw	4
   788     007E  2323               	fcall	_MAX7219_DisplayData
   789                           
   790                           ;main.c: 77:                 MAX7219_DisplayData(0x03, MAX7219_No_Table[(Counter/60)%10]
      +                          );
   791     007F  300A               	movlw	10
   792     0080  1283               	bcf	3,5	;RP0=0, select bank0
   793     0081  00AE               	movwf	___lwmod@divisor
   794     0082  3000               	movlw	0
   795     0083  00AF               	movwf	___lwmod@divisor+1
   796     0084  303C               	movlw	60
   797     0085  00A7               	movwf	___lwdiv@divisor
   798     0086  3000               	movlw	0
   799     0087  00A8               	movwf	___lwdiv@divisor+1
   800     0088  0840               	movf	_Counter+1,w
   801     0089  00AA               	movwf	___lwdiv@dividend+1
   802     008A  083F               	movf	_Counter,w
   803     008B  00A9               	movwf	___lwdiv@dividend
   804     008C  21CF               	fcall	___lwdiv
   805     008D  1283               	bcf	3,5	;RP0=0, select bank0
   806     008E  0828               	movf	?___lwdiv+1,w
   807     008F  00B1               	movwf	___lwmod@dividend+1
   808     0090  0827               	movf	?___lwdiv,w
   809     0091  00B0               	movwf	___lwmod@dividend
   810     0092  220A               	fcall	___lwmod
   811     0093  1283               	bcf	3,5	;RP0=0, select bank0
   812     0094  082E               	movf	?___lwmod,w
   813     0095  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   814     0096  0084               	movwf	4
   815     0097  236D               	fcall	stringdir
   816     0098  00B3               	movwf	MAX7219_DisplayData@character
   817     0099  3003               	movlw	3
   818     009A  2323               	fcall	_MAX7219_DisplayData
   819                           
   820                           ;main.c: 78:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[(Counter%60)/10]
      +                          );
   821     009B  300A               	movlw	10
   822     009C  1283               	bcf	3,5	;RP0=0, select bank0
   823     009D  00A7               	movwf	___lwdiv@divisor
   824     009E  3000               	movlw	0
   825     009F  00A8               	movwf	___lwdiv@divisor+1
   826     00A0  0840               	movf	_Counter+1,w
   827     00A1  00B1               	movwf	___lwmod@dividend+1
   828     00A2  083F               	movf	_Counter,w
   829     00A3  00B0               	movwf	___lwmod@dividend
   830     00A4  303C               	movlw	60
   831     00A5  00AE               	movwf	___lwmod@divisor
   832     00A6  3000               	movlw	0
   833     00A7  00AF               	movwf	___lwmod@divisor+1
   834     00A8  220A               	fcall	___lwmod
   835     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   836     00AA  082F               	movf	?___lwmod+1,w
   837     00AB  00AA               	movwf	___lwdiv@dividend+1
   838     00AC  082E               	movf	?___lwmod,w
   839     00AD  00A9               	movwf	___lwdiv@dividend
   840     00AE  21CF               	fcall	___lwdiv
   841     00AF  1283               	bcf	3,5	;RP0=0, select bank0
   842     00B0  0827               	movf	?___lwdiv,w
   843     00B1  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   844     00B2  0084               	movwf	4
   845     00B3  236D               	fcall	stringdir
   846     00B4  00B3               	movwf	MAX7219_DisplayData@character
   847     00B5  3002               	movlw	2
   848     00B6  2323               	fcall	_MAX7219_DisplayData
   849                           
   850                           ;main.c: 79:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   851     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   852     00B8  0840               	movf	_Counter+1,w
   853     00B9  00B1               	movwf	___lwmod@dividend+1
   854     00BA  083F               	movf	_Counter,w
   855     00BB  00B0               	movwf	___lwmod@dividend
   856     00BC  303C               	movlw	60
   857     00BD  00AE               	movwf	___lwmod@divisor
   858     00BE  3000               	movlw	0
   859     00BF  00AF               	movwf	___lwmod@divisor+1
   860     00C0  220A               	fcall	___lwmod
   861     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   862     00C2  082F               	movf	?___lwmod+1,w
   863     00C3  00BD               	movwf	_main$776+1
   864     00C4  082E               	movf	?___lwmod,w
   865     00C5  00BC               	movwf	_main$776
   866                           
   867                           ;main.c: 79:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[(Counter%60)%10]
      +                          );
   868     00C6  300A               	movlw	10
   869     00C7  00AE               	movwf	___lwmod@divisor
   870     00C8  3000               	movlw	0
   871     00C9  00AF               	movwf	___lwmod@divisor+1
   872     00CA  083D               	movf	_main$776+1,w
   873     00CB  00B1               	movwf	___lwmod@dividend+1
   874     00CC  083C               	movf	_main$776,w
   875     00CD  00B0               	movwf	___lwmod@dividend
   876     00CE  220A               	fcall	___lwmod
   877     00CF  1283               	bcf	3,5	;RP0=0, select bank0
   878     00D0  082E               	movf	?___lwmod,w
   879     00D1  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   880     00D2  0084               	movwf	4
   881     00D3  236D               	fcall	stringdir
   882     00D4  00B3               	movwf	MAX7219_DisplayData@character
   883     00D5  3001               	movlw	1
   884     00D6  2323               	fcall	_MAX7219_DisplayData
   885                           
   886                           ;main.c: 80:                 _delay((unsigned long)((900)*(4000000/4000.0)));
   887     00D7  3005               	movlw	5
   888     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   889     00D9  00BB               	movwf	??_main+2
   890     00DA  3091               	movlw	145
   891     00DB  00BA               	movwf	??_main+1
   892     00DC  30CF               	movlw	207
   893     00DD  00B9               	movwf	??_main
   894     00DE                     u1087:
   895     00DE  0BB9               	decfsz	??_main,f
   896     00DF  28DE               	goto	u1087
   897     00E0  0BBA               	decfsz	??_main+1,f
   898     00E1  28DE               	goto	u1087
   899     00E2  0BBB               	decfsz	??_main+2,f
   900     00E3  28DE               	goto	u1087
   901     00E4  28E5               	nop2
   902                           
   903                           ;main.c: 81:             }
   904     00E5  3001               	movlw	1
   905     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   906     00E7  02BF               	subwf	_Counter,f
   907     00E8  3000               	movlw	0
   908     00E9  1C03               	skipc
   909     00EA  03C0               	decf	_Counter+1,f
   910     00EB  02C0               	subwf	_Counter+1,f
   911     00EC                     l1273:
   912     00EC  083F               	movf	_Counter,w
   913     00ED  0440               	iorwf	_Counter+1,w
   914     00EE  1D03               	btfss	3,2
   915     00EF  286B               	goto	l1275
   916     00F0                     l1277:
   917                           
   918                           ;main.c: 82:             Dio_Pin_Write (4, 0);
   919     00F0  01A7               	clrf	Dio_Pin_Write@state
   920     00F1  3004               	movlw	4
   921     00F2  22B6               	fcall	_Dio_Pin_Write
   922                           
   923                           ;main.c: 83:             DispenserOn=0;
   924     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   925     00F4  01C1               	clrf	_DispenserOn
   926                           
   927                           ;main.c: 84:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x05,0x1D); MAX7219
      +                          _DisplayData(0x04,0x47); MAX7219_DisplayData(0x03,0x47);;
   928     00F5  230D               	fcall	_MAX7219_ClearDisplay
   929     00F6  301D               	movlw	29
   930     00F7  1283               	bcf	3,5	;RP0=0, select bank0
   931     00F8  00B3               	movwf	MAX7219_DisplayData@character
   932     00F9  3005               	movlw	5
   933     00FA  2323               	fcall	_MAX7219_DisplayData
   934     00FB  3047               	movlw	71
   935     00FC  1283               	bcf	3,5	;RP0=0, select bank0
   936     00FD  00B3               	movwf	MAX7219_DisplayData@character
   937     00FE  3004               	movlw	4
   938     00FF  2323               	fcall	_MAX7219_DisplayData
   939     0100  3047               	movlw	71
   940     0101  1283               	bcf	3,5	;RP0=0, select bank0
   941     0102  00B3               	movwf	MAX7219_DisplayData@character
   942     0103  3003               	movlw	3
   943     0104  2323               	fcall	_MAX7219_DisplayData
   944     0105  281E               	goto	l1289
   945     0106                     __end_of_main:
   946                           
   947                           	psect	text1
   948     0294                     __ptext1:	
   949 ;; *************** function ___wmul *****************
   950 ;; Defined at:
   951 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  multiplier      2   16[BANK0 ] unsigned int 
   954 ;;  multiplicand    2   18[BANK0 ] unsigned int 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  product         2   20[BANK0 ] unsigned int 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2   16[BANK0 ] unsigned int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0
   966 ;;      Params:         0       4
   967 ;;      Locals:         0       2
   968 ;;      Temps:          0       0
   969 ;;      Totals:         0       6
   970 ;;Total ram usage:        6 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 2
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980     0294                     ___wmul:	
   981                           ;psect for function ___wmul
   982                           
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   986     0294  1283               	bcf	3,5	;RP0=0, select bank0
   987     0295  01B4               	clrf	___wmul@product
   988     0296  01B5               	clrf	___wmul@product+1
   989     0297                     l1163:
   990     0297  1C30               	btfss	___wmul@multiplier,0
   991     0298  2A9F               	goto	l275
   992     0299  0832               	movf	___wmul@multiplicand,w
   993     029A  07B4               	addwf	___wmul@product,f
   994     029B  1803               	skipnc
   995     029C  0AB5               	incf	___wmul@product+1,f
   996     029D  0833               	movf	___wmul@multiplicand+1,w
   997     029E  07B5               	addwf	___wmul@product+1,f
   998     029F                     l275:
   999     029F  3001               	movlw	1
  1000     02A0                     u785:
  1001     02A0  1003               	clrc
  1002     02A1  0DB2               	rlf	___wmul@multiplicand,f
  1003     02A2  0DB3               	rlf	___wmul@multiplicand+1,f
  1004     02A3  3EFF               	addlw	-1
  1005     02A4  1D03               	skipz
  1006     02A5  2AA0               	goto	u785
  1007     02A6  3001               	movlw	1
  1008     02A7                     u795:
  1009     02A7  1003               	clrc
  1010     02A8  0CB1               	rrf	___wmul@multiplier+1,f
  1011     02A9  0CB0               	rrf	___wmul@multiplier,f
  1012     02AA  3EFF               	addlw	-1
  1013     02AB  1D03               	skipz
  1014     02AC  2AA7               	goto	u795
  1015     02AD  0830               	movf	___wmul@multiplier,w
  1016     02AE  0431               	iorwf	___wmul@multiplier+1,w
  1017     02AF  1D03               	btfss	3,2
  1018     02B0  2A97               	goto	l1163
  1019     02B1  0835               	movf	___wmul@product+1,w
  1020     02B2  00B1               	movwf	?___wmul+1
  1021     02B3  0834               	movf	___wmul@product,w
  1022     02B4  00B0               	movwf	?___wmul
  1023     02B5  0008               	return
  1024     02B6                     __end_of___wmul:
  1025                           
  1026                           	psect	text2
  1027     020A                     __ptext2:	
  1028 ;; *************** function ___lwmod *****************
  1029 ;; Defined at:
  1030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  divisor         2   14[BANK0 ] unsigned int 
  1033 ;;  dividend        2   16[BANK0 ] unsigned int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  counter         1   18[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   14[BANK0 ] unsigned int 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0
  1045 ;;      Params:         0       4
  1046 ;;      Locals:         0       1
  1047 ;;      Temps:          0       0
  1048 ;;      Totals:         0       5
  1049 ;;Total ram usage:        5 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059     020A                     ___lwmod:	
  1060                           ;psect for function ___lwmod
  1061                           
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1065     020A  1283               	bcf	3,5	;RP0=0, select bank0
  1066     020B  082E               	movf	___lwmod@divisor,w
  1067     020C  042F               	iorwf	___lwmod@divisor+1,w
  1068     020D  1903               	btfsc	3,2
  1069     020E  2A36               	goto	l1219
  1070     020F  3001               	movlw	1
  1071     0210  00B2               	movwf	___lwmod@counter
  1072     0211                     l1209:
  1073     0211  1BAF               	btfsc	___lwmod@divisor+1,7
  1074     0212  2A1D               	goto	l1211
  1075     0213  3001               	movlw	1
  1076     0214                     u895:
  1077     0214  1003               	clrc
  1078     0215  0DAE               	rlf	___lwmod@divisor,f
  1079     0216  0DAF               	rlf	___lwmod@divisor+1,f
  1080     0217  3EFF               	addlw	-1
  1081     0218  1D03               	skipz
  1082     0219  2A14               	goto	u895
  1083     021A  3001               	movlw	1
  1084     021B  07B2               	addwf	___lwmod@counter,f
  1085     021C  2A11               	goto	l1209
  1086     021D                     l1211:
  1087     021D  082F               	movf	___lwmod@divisor+1,w
  1088     021E  0231               	subwf	___lwmod@dividend+1,w
  1089     021F  1D03               	skipz
  1090     0220  2A23               	goto	u915
  1091     0221  082E               	movf	___lwmod@divisor,w
  1092     0222  0230               	subwf	___lwmod@dividend,w
  1093     0223                     u915:
  1094     0223  1C03               	skipc
  1095     0224  2A2B               	goto	l1215
  1096     0225  082E               	movf	___lwmod@divisor,w
  1097     0226  02B0               	subwf	___lwmod@dividend,f
  1098     0227  082F               	movf	___lwmod@divisor+1,w
  1099     0228  1C03               	skipc
  1100     0229  03B1               	decf	___lwmod@dividend+1,f
  1101     022A  02B1               	subwf	___lwmod@dividend+1,f
  1102     022B                     l1215:
  1103     022B  3001               	movlw	1
  1104     022C                     u925:
  1105     022C  1003               	clrc
  1106     022D  0CAF               	rrf	___lwmod@divisor+1,f
  1107     022E  0CAE               	rrf	___lwmod@divisor,f
  1108     022F  3EFF               	addlw	-1
  1109     0230  1D03               	skipz
  1110     0231  2A2C               	goto	u925
  1111     0232  3001               	movlw	1
  1112     0233  02B2               	subwf	___lwmod@counter,f
  1113     0234  1D03               	btfss	3,2
  1114     0235  2A1D               	goto	l1211
  1115     0236                     l1219:
  1116     0236  0831               	movf	___lwmod@dividend+1,w
  1117     0237  00AF               	movwf	?___lwmod+1
  1118     0238  0830               	movf	___lwmod@dividend,w
  1119     0239  00AE               	movwf	?___lwmod
  1120     023A  0008               	return
  1121     023B                     __end_of___lwmod:
  1122                           
  1123                           	psect	text3
  1124     01CF                     __ptext3:	
  1125 ;; *************** function ___lwdiv *****************
  1126 ;; Defined at:
  1127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  divisor         2    7[BANK0 ] unsigned int 
  1130 ;;  dividend        2    9[BANK0 ] unsigned int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  quotient        2   11[BANK0 ] unsigned int 
  1133 ;;  counter         1   13[BANK0 ] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2    7[BANK0 ] unsigned int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0
  1143 ;;      Params:         0       4
  1144 ;;      Locals:         0       3
  1145 ;;      Temps:          0       0
  1146 ;;      Totals:         0       7
  1147 ;;Total ram usage:        7 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157     01CF                     ___lwdiv:	
  1158                           ;psect for function ___lwdiv
  1159                           
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1163     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1164     01D0  01AB               	clrf	___lwdiv@quotient
  1165     01D1  01AC               	clrf	___lwdiv@quotient+1
  1166     01D2  0827               	movf	___lwdiv@divisor,w
  1167     01D3  0428               	iorwf	___lwdiv@divisor+1,w
  1168     01D4  1903               	btfsc	3,2
  1169     01D5  2A05               	goto	l1197
  1170     01D6  3001               	movlw	1
  1171     01D7  00AD               	movwf	___lwdiv@counter
  1172     01D8                     l1185:
  1173     01D8  1BA8               	btfsc	___lwdiv@divisor+1,7
  1174     01D9  29E4               	goto	l1187
  1175     01DA  3001               	movlw	1
  1176     01DB                     u825:
  1177     01DB  1003               	clrc
  1178     01DC  0DA7               	rlf	___lwdiv@divisor,f
  1179     01DD  0DA8               	rlf	___lwdiv@divisor+1,f
  1180     01DE  3EFF               	addlw	-1
  1181     01DF  1D03               	skipz
  1182     01E0  29DB               	goto	u825
  1183     01E1  3001               	movlw	1
  1184     01E2  07AD               	addwf	___lwdiv@counter,f
  1185     01E3  29D8               	goto	l1185
  1186     01E4                     l1187:
  1187     01E4  3001               	movlw	1
  1188     01E5                     u845:
  1189     01E5  1003               	clrc
  1190     01E6  0DAB               	rlf	___lwdiv@quotient,f
  1191     01E7  0DAC               	rlf	___lwdiv@quotient+1,f
  1192     01E8  3EFF               	addlw	-1
  1193     01E9  1D03               	skipz
  1194     01EA  29E5               	goto	u845
  1195     01EB  0828               	movf	___lwdiv@divisor+1,w
  1196     01EC  022A               	subwf	___lwdiv@dividend+1,w
  1197     01ED  1D03               	skipz
  1198     01EE  29F1               	goto	u855
  1199     01EF  0827               	movf	___lwdiv@divisor,w
  1200     01F0  0229               	subwf	___lwdiv@dividend,w
  1201     01F1                     u855:
  1202     01F1  1C03               	skipc
  1203     01F2  29FA               	goto	l1193
  1204     01F3  0827               	movf	___lwdiv@divisor,w
  1205     01F4  02A9               	subwf	___lwdiv@dividend,f
  1206     01F5  0828               	movf	___lwdiv@divisor+1,w
  1207     01F6  1C03               	skipc
  1208     01F7  03AA               	decf	___lwdiv@dividend+1,f
  1209     01F8  02AA               	subwf	___lwdiv@dividend+1,f
  1210     01F9  142B               	bsf	___lwdiv@quotient,0
  1211     01FA                     l1193:
  1212     01FA  3001               	movlw	1
  1213     01FB                     u865:
  1214     01FB  1003               	clrc
  1215     01FC  0CA8               	rrf	___lwdiv@divisor+1,f
  1216     01FD  0CA7               	rrf	___lwdiv@divisor,f
  1217     01FE  3EFF               	addlw	-1
  1218     01FF  1D03               	skipz
  1219     0200  29FB               	goto	u865
  1220     0201  3001               	movlw	1
  1221     0202  02AD               	subwf	___lwdiv@counter,f
  1222     0203  1D03               	btfss	3,2
  1223     0204  29E4               	goto	l1187
  1224     0205                     l1197:
  1225     0205  082C               	movf	___lwdiv@quotient+1,w
  1226     0206  00A8               	movwf	?___lwdiv+1
  1227     0207  082B               	movf	___lwdiv@quotient,w
  1228     0208  00A7               	movwf	?___lwdiv
  1229     0209  0008               	return
  1230     020A                     __end_of___lwdiv:
  1231                           
  1232                           	psect	text4
  1233     02F5                     __ptext4:	
  1234 ;; *************** function _SPI_Init *****************
  1235 ;; Defined at:
  1236 ;;		line 12 in file "SERVICE/scr/Spi.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0
  1250 ;;      Params:         0       0
  1251 ;;      Locals:         0       0
  1252 ;;      Temps:          0       0
  1253 ;;      Totals:         0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 3
  1257 ;; This function calls:
  1258 ;;		_Dio_Config
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264     02F5                     _SPI_Init:	
  1265                           ;psect for function _SPI_Init
  1266                           
  1267                           
  1268                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1272     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1273     02F6  01A7               	clrf	Dio_Config@direction
  1274     02F7  0AA7               	incf	Dio_Config@direction,f
  1275     02F8  01A8               	clrf	Dio_Config@state
  1276     02F9  0AA8               	incf	Dio_Config@state,f
  1277     02FA  01A9               	clrf	Dio_Config@pullType
  1278     02FB  3001               	movlw	1
  1279     02FC  2106               	fcall	_Dio_Config
  1280                           
  1281                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
  1282     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1283     02FE  01A7               	clrf	Dio_Config@direction
  1284     02FF  0AA7               	incf	Dio_Config@direction,f
  1285     0300  01A8               	clrf	Dio_Config@state
  1286     0301  01A9               	clrf	Dio_Config@pullType
  1287     0302  3002               	movlw	2
  1288     0303  2106               	fcall	_Dio_Config
  1289                           
  1290                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
  1291     0304  1283               	bcf	3,5	;RP0=0, select bank0
  1292     0305  01A7               	clrf	Dio_Config@direction
  1293     0306  0AA7               	incf	Dio_Config@direction,f
  1294     0307  01A8               	clrf	Dio_Config@state
  1295     0308  0AA8               	incf	Dio_Config@state,f
  1296     0309  01A9               	clrf	Dio_Config@pullType
  1297     030A  3005               	movlw	5
  1298     030B  2106               	fcall	_Dio_Config
  1299     030C  0008               	return
  1300     030D                     __end_of_SPI_Init:
  1301                           
  1302                           	psect	text5
  1303     02D6                     __ptext5:	
  1304 ;; *************** function _MAX7219_Init *****************
  1305 ;; Defined at:
  1306 ;;		line 8 in file "HAL/scr/max7219.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0
  1320 ;;      Params:         0       0
  1321 ;;      Locals:         0       0
  1322 ;;      Temps:          0       0
  1323 ;;      Totals:         0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 4
  1327 ;; This function calls:
  1328 ;;		_SPI_Send_16bit
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     02D6                     _MAX7219_Init:	
  1335                           ;psect for function _MAX7219_Init
  1336                           
  1337                           
  1338                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1342     02D6  3000               	movlw	0
  1343     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1344     02D8  00AA               	movwf	SPI_Send_16bit@data
  1345     02D9  3009               	movlw	9
  1346     02DA  00AB               	movwf	SPI_Send_16bit@data+1
  1347     02DB  217C               	fcall	_SPI_Send_16bit
  1348                           
  1349                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
  1350     02DC  300F               	movlw	15
  1351     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1352     02DE  00AA               	movwf	SPI_Send_16bit@data
  1353     02DF  300A               	movlw	10
  1354     02E0  00AB               	movwf	SPI_Send_16bit@data+1
  1355     02E1  217C               	fcall	_SPI_Send_16bit
  1356                           
  1357                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
  1358     02E2  30F7               	movlw	247
  1359     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1360     02E4  00AA               	movwf	SPI_Send_16bit@data
  1361     02E5  30FB               	movlw	251
  1362     02E6  00AB               	movwf	SPI_Send_16bit@data+1
  1363     02E7  217C               	fcall	_SPI_Send_16bit
  1364                           
  1365                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
  1366     02E8  3001               	movlw	1
  1367     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1368     02EA  00AA               	movwf	SPI_Send_16bit@data
  1369     02EB  300C               	movlw	12
  1370     02EC  00AB               	movwf	SPI_Send_16bit@data+1
  1371     02ED  217C               	fcall	_SPI_Send_16bit
  1372                           
  1373                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
  1374     02EE  3000               	movlw	0
  1375     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1376     02F0  00AA               	movwf	SPI_Send_16bit@data
  1377     02F1  300F               	movlw	15
  1378     02F2  00AB               	movwf	SPI_Send_16bit@data+1
  1379     02F3  217C               	fcall	_SPI_Send_16bit
  1380     02F4  0008               	return
  1381     02F5                     __end_of_MAX7219_Init:
  1382                           
  1383                           	psect	text6
  1384     0323                     __ptext6:	
  1385 ;; *************** function _MAX7219_DisplayData *****************
  1386 ;; Defined at:
  1387 ;;		line 26 in file "HAL/scr/max7219.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  digit           1    wreg     unsigned char 
  1390 ;;  character       1   19[BANK0 ] unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  digit           1   24[BANK0 ] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0
  1402 ;;      Params:         0       1
  1403 ;;      Locals:         0       1
  1404 ;;      Temps:          0       4
  1405 ;;      Totals:         0       6
  1406 ;;Total ram usage:        6 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 4
  1409 ;; This function calls:
  1410 ;;		_SPI_Send_16bit
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     0323                     _MAX7219_DisplayData:	
  1417                           ;psect for function _MAX7219_DisplayData
  1418                           
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1422                           ;MAX7219_DisplayData@digit stored from wreg
  1423     0323  1283               	bcf	3,5	;RP0=0, select bank0
  1424     0324  00B8               	movwf	MAX7219_DisplayData@digit
  1425                           
  1426                           ;HAL/scr/max7219.c: 27:     SPI_Send_16bit((digit) << 8 | character);
  1427     0325  0833               	movf	MAX7219_DisplayData@character,w
  1428     0326  00B4               	movwf	??_MAX7219_DisplayData
  1429     0327  01B5               	clrf	??_MAX7219_DisplayData+1
  1430     0328  0838               	movf	MAX7219_DisplayData@digit,w
  1431     0329  00B6               	movwf	??_MAX7219_DisplayData+2
  1432     032A  01B7               	clrf	??_MAX7219_DisplayData+3
  1433     032B  0836               	movf	??_MAX7219_DisplayData+2,w
  1434     032C  00B7               	movwf	??_MAX7219_DisplayData+3
  1435     032D  01B6               	clrf	??_MAX7219_DisplayData+2
  1436     032E  0834               	movf	??_MAX7219_DisplayData,w
  1437     032F  0436               	iorwf	??_MAX7219_DisplayData+2,w
  1438     0330  00AA               	movwf	SPI_Send_16bit@data
  1439     0331  0835               	movf	??_MAX7219_DisplayData+1,w
  1440     0332  0437               	iorwf	??_MAX7219_DisplayData+3,w
  1441     0333  00AB               	movwf	SPI_Send_16bit@data+1
  1442     0334  217C               	fcall	_SPI_Send_16bit
  1443     0335  0008               	return
  1444     0336                     __end_of_MAX7219_DisplayData:
  1445                           
  1446                           	psect	text7
  1447     030D                     __ptext7:	
  1448 ;; *************** function _MAX7219_ClearDisplay *****************
  1449 ;; Defined at:
  1450 ;;		line 19 in file "HAL/scr/max7219.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  i               1   21[BANK0 ] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0
  1464 ;;      Params:         0       0
  1465 ;;      Locals:         0       1
  1466 ;;      Temps:          0       2
  1467 ;;      Totals:         0       3
  1468 ;;Total ram usage:        3 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 4
  1471 ;; This function calls:
  1472 ;;		_SPI_Send_16bit
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     030D                     _MAX7219_ClearDisplay:	
  1479                           ;psect for function _MAX7219_ClearDisplay
  1480                           
  1481                           
  1482                           ;HAL/scr/max7219.c: 20:     for (uint8_t i = 0x01; i <= 0x08; i++) {
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _MAX7219_ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1486     030D  3001               	movlw	1
  1487     030E  1283               	bcf	3,5	;RP0=0, select bank0
  1488     030F  00B5               	movwf	MAX7219_ClearDisplay@i
  1489     0310                     l1083:
  1490                           
  1491                           ;HAL/scr/max7219.c: 21:         SPI_Send_16bit((i << 8) );
  1492     0310  0835               	movf	MAX7219_ClearDisplay@i,w
  1493     0311  00B3               	movwf	??_MAX7219_ClearDisplay
  1494     0312  01B4               	clrf	??_MAX7219_ClearDisplay+1
  1495     0313  0833               	movf	??_MAX7219_ClearDisplay,w
  1496     0314  00B4               	movwf	??_MAX7219_ClearDisplay+1
  1497     0315  01B3               	clrf	??_MAX7219_ClearDisplay
  1498     0316  0833               	movf	??_MAX7219_ClearDisplay,w
  1499     0317  00AA               	movwf	SPI_Send_16bit@data
  1500     0318  0834               	movf	??_MAX7219_ClearDisplay+1,w
  1501     0319  00AB               	movwf	SPI_Send_16bit@data+1
  1502     031A  217C               	fcall	_SPI_Send_16bit
  1503                           
  1504                           ;HAL/scr/max7219.c: 22:     }
  1505     031B  3001               	movlw	1
  1506     031C  1283               	bcf	3,5	;RP0=0, select bank0
  1507     031D  07B5               	addwf	MAX7219_ClearDisplay@i,f
  1508     031E  3009               	movlw	9
  1509     031F  0235               	subwf	MAX7219_ClearDisplay@i,w
  1510     0320  1803               	btfsc	3,0
  1511     0321  0008               	return
  1512     0322  2B10               	goto	l1083
  1513     0323                     __end_of_MAX7219_ClearDisplay:
  1514                           
  1515                           	psect	text8
  1516     017C                     __ptext8:	
  1517 ;; *************** function _SPI_Send_16bit *****************
  1518 ;; Defined at:
  1519 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  data            2   10[BANK0 ] unsigned short 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  bit             2   17[BANK0 ] int 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0
  1533 ;;      Params:         0       2
  1534 ;;      Locals:         0       2
  1535 ;;      Temps:          0       5
  1536 ;;      Totals:         0       9
  1537 ;;Total ram usage:        9 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 3
  1540 ;; This function calls:
  1541 ;;		_Dio_Pin_Write
  1542 ;; This function is called by:
  1543 ;;		_MAX7219_Init
  1544 ;;		_MAX7219_ClearDisplay
  1545 ;;		_MAX7219_DisplayData
  1546 ;;		_MAX7219_Shutdown
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550     017C                     _SPI_Send_16bit:	
  1551                           ;psect for function _SPI_Send_16bit
  1552                           
  1553                           
  1554                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
  1555                           
  1556                           ;incstack = 0
  1557                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1558     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1559     017D  01A7               	clrf	Dio_Pin_Write@state
  1560     017E  3005               	movlw	5
  1561     017F  22B6               	fcall	_Dio_Pin_Write
  1562                           
  1563                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
  1564     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1565     0181  01B1               	clrf	SPI_Send_16bit@bit
  1566     0182  01B2               	clrf	SPI_Send_16bit@bit+1
  1567     0183                     l1033:
  1568                           
  1569                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
  1570     0183  1283               	bcf	3,5	;RP0=0, select bank0
  1571     0184  0831               	movf	SPI_Send_16bit@bit,w
  1572     0185  3C0F               	sublw	15
  1573     0186  00AC               	movwf	??_SPI_Send_16bit
  1574     0187  0AAC               	incf	??_SPI_Send_16bit,f
  1575     0188  3001               	movlw	1
  1576     0189  00AD               	movwf	??_SPI_Send_16bit+1
  1577     018A  3000               	movlw	0
  1578     018B  00AE               	movwf	??_SPI_Send_16bit+2
  1579     018C  2990               	goto	u574
  1580     018D                     u575:
  1581     018D  1003               	clrc
  1582     018E  0DAD               	rlf	??_SPI_Send_16bit+1,f
  1583     018F  0DAE               	rlf	??_SPI_Send_16bit+2,f
  1584     0190                     u574:
  1585     0190  0BAC               	decfsz	??_SPI_Send_16bit,f
  1586     0191  298D               	goto	u575
  1587     0192  082A               	movf	SPI_Send_16bit@data,w
  1588     0193  052D               	andwf	??_SPI_Send_16bit+1,w
  1589     0194  00AF               	movwf	??_SPI_Send_16bit+3
  1590     0195  082B               	movf	SPI_Send_16bit@data+1,w
  1591     0196  052E               	andwf	??_SPI_Send_16bit+2,w
  1592     0197  00B0               	movwf	??_SPI_Send_16bit+4
  1593     0198  082F               	movf	??_SPI_Send_16bit+3,w
  1594     0199  0430               	iorwf	??_SPI_Send_16bit+4,w
  1595     019A  1903               	btfsc	3,2
  1596     019B  299F               	goto	l1037
  1597                           
  1598                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
  1599     019C  01A7               	clrf	Dio_Pin_Write@state
  1600     019D  0AA7               	incf	Dio_Pin_Write@state,f
  1601     019E  29A0               	goto	L1
  1602     019F                     l1037:	
  1603                           ;SERVICE/scr/Spi.c: 45:         } else {
  1604                           
  1605                           
  1606                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
  1607     019F  01A7               	clrf	Dio_Pin_Write@state
  1608     01A0                     L1:
  1609     01A0  3001               	movlw	1
  1610     01A1  22B6               	fcall	_Dio_Pin_Write
  1611                           
  1612                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
  1613     01A2  3010               	movlw	16
  1614     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1615     01A4  00AC               	movwf	??_SPI_Send_16bit
  1616     01A5                     u1097:
  1617     01A5  0BAC               	decfsz	??_SPI_Send_16bit,f
  1618     01A6  29A5               	goto	u1097
  1619     01A7  0000               	nop
  1620     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1621     01A9  01A7               	clrf	Dio_Pin_Write@state
  1622     01AA  0AA7               	incf	Dio_Pin_Write@state,f
  1623     01AB  3002               	movlw	2
  1624     01AC  22B6               	fcall	_Dio_Pin_Write
  1625     01AD  3010               	movlw	16
  1626     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1627     01AF  00AC               	movwf	??_SPI_Send_16bit
  1628     01B0                     u1107:
  1629     01B0  0BAC               	decfsz	??_SPI_Send_16bit,f
  1630     01B1  29B0               	goto	u1107
  1631     01B2  0000               	nop
  1632     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1633     01B4  01A7               	clrf	Dio_Pin_Write@state
  1634     01B5  3002               	movlw	2
  1635     01B6  22B6               	fcall	_Dio_Pin_Write
  1636                           
  1637                           ;SERVICE/scr/Spi.c: 50:     }
  1638     01B7  3001               	movlw	1
  1639     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1640     01B9  07B1               	addwf	SPI_Send_16bit@bit,f
  1641     01BA  1803               	skipnc
  1642     01BB  0AB2               	incf	SPI_Send_16bit@bit+1,f
  1643     01BC  3000               	movlw	0
  1644     01BD  07B2               	addwf	SPI_Send_16bit@bit+1,f
  1645     01BE  0832               	movf	SPI_Send_16bit@bit+1,w
  1646     01BF  3A80               	xorlw	128
  1647     01C0  00DF               	movwf	95
  1648     01C1  3080               	movlw	128
  1649     01C2  025F               	subwf	95,w
  1650     01C3  1D03               	skipz
  1651     01C4  29C7               	goto	u595
  1652     01C5  3010               	movlw	16
  1653     01C6  0231               	subwf	SPI_Send_16bit@bit,w
  1654     01C7                     u595:
  1655     01C7  1C03               	skipc
  1656     01C8  2983               	goto	l1033
  1657                           
  1658                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
  1659     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1660     01CA  01A7               	clrf	Dio_Pin_Write@state
  1661     01CB  0AA7               	incf	Dio_Pin_Write@state,f
  1662     01CC  3005               	movlw	5
  1663     01CD  22B6               	fcall	_Dio_Pin_Write
  1664     01CE  0008               	return
  1665     01CF                     __end_of_SPI_Send_16bit:
  1666                           
  1667                           	psect	text9
  1668     02B6                     __ptext9:	
  1669 ;; *************** function _Dio_Pin_Write *****************
  1670 ;; Defined at:
  1671 ;;		line 30 in file "MCAL/scr/Dio.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  pinNumber       1    wreg     unsigned char 
  1674 ;;  state           1    7[BANK0 ] unsigned char 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  pinNumber       1    9[BANK0 ] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0
  1686 ;;      Params:         0       1
  1687 ;;      Locals:         0       1
  1688 ;;      Temps:          0       1
  1689 ;;      Totals:         0       3
  1690 ;;Total ram usage:        3 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 2
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_SPI_Send_16bit
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     02B6                     _Dio_Pin_Write:	
  1702                           ;psect for function _Dio_Pin_Write
  1703                           
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
  1707                           ;Dio_Pin_Write@pinNumber stored from wreg
  1708     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1709     02B7  00A9               	movwf	Dio_Pin_Write@pinNumber
  1710                           
  1711                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1712     02B8  0327               	decf	Dio_Pin_Write@state,w
  1713     02B9  1D03               	btfss	3,2
  1714     02BA  2AC7               	goto	l1021
  1715                           
  1716                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1717     02BB  3001               	movlw	1
  1718     02BC  00A8               	movwf	??_Dio_Pin_Write
  1719     02BD  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1720     02BE  2AC1               	goto	u554
  1721     02BF                     u555:
  1722     02BF  1003               	clrc
  1723     02C0  0DA8               	rlf	??_Dio_Pin_Write,f
  1724     02C1                     u554:
  1725     02C1  3EFF               	addlw	-1
  1726     02C2  1D03               	skipz
  1727     02C3  2ABF               	goto	u555
  1728     02C4  0828               	movf	??_Dio_Pin_Write,w
  1729     02C5  04C2               	iorwf	_DIO_State,f
  1730                           
  1731                           ;MCAL/scr/Dio.c: 34:     }
  1732     02C6  2AD3               	goto	l1023
  1733     02C7                     l1021:
  1734                           
  1735                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1736     02C7  3001               	movlw	1
  1737     02C8  00A8               	movwf	??_Dio_Pin_Write
  1738     02C9  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1739     02CA  2ACD               	goto	u564
  1740     02CB                     u565:
  1741     02CB  1003               	clrc
  1742     02CC  0DA8               	rlf	??_Dio_Pin_Write,f
  1743     02CD                     u564:
  1744     02CD  3EFF               	addlw	-1
  1745     02CE  1D03               	skipz
  1746     02CF  2ACB               	goto	u565
  1747     02D0  0828               	movf	??_Dio_Pin_Write,w
  1748     02D1  3AFF               	xorlw	255
  1749     02D2  05C2               	andwf	_DIO_State,f
  1750     02D3                     l1023:
  1751                           
  1752                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1753     02D3  0842               	movf	_DIO_State,w
  1754     02D4  0085               	movwf	5	;volatile
  1755     02D5  0008               	return
  1756     02D6                     __end_of_Dio_Pin_Write:
  1757                           
  1758                           	psect	text10
  1759     0336                     __ptext10:	
  1760 ;; *************** function _Gpio_Init *****************
  1761 ;; Defined at:
  1762 ;;		line 23 in file "MCAL/scr/gpio.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0
  1776 ;;      Params:         0       0
  1777 ;;      Locals:         0       0
  1778 ;;      Temps:          0       0
  1779 ;;      Totals:         0       0
  1780 ;;Total ram usage:        0 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790     0336                     _Gpio_Init:	
  1791                           ;psect for function _Gpio_Init
  1792                           
  1793                           
  1794                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  1798     0336  1683               	bsf	3,5	;RP0=1, select bank1
  1799     0337  141F               	bsf	31,0	;volatile
  1800                           
  1801                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  1802     0338  1405               	bsf	5,0	;volatile
  1803                           
  1804                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  1805     0339  30FD               	movlw	253
  1806     033A  059F               	andwf	31,f	;volatile
  1807                           
  1808                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  1809     033B  30FD               	movlw	253
  1810     033C  0585               	andwf	5,f	;volatile
  1811                           
  1812                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  1813     033D  30FB               	movlw	251
  1814     033E  059F               	andwf	31,f	;volatile
  1815                           
  1816                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  1817     033F  30FB               	movlw	251
  1818     0340  0585               	andwf	5,f	;volatile
  1819                           
  1820                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  1821     0341  1585               	bsf	5,3	;volatile
  1822                           
  1823                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  1824     0342  30F7               	movlw	247
  1825     0343  059F               	andwf	31,f	;volatile
  1826                           
  1827                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  1828     0344  30EF               	movlw	239
  1829     0345  0585               	andwf	5,f	;volatile
  1830                           
  1831                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  1832     0346  30DF               	movlw	223
  1833     0347  0585               	andwf	5,f	;volatile
  1834     0348  0008               	return
  1835     0349                     __end_of_Gpio_Init:
  1836                           
  1837                           	psect	text11
  1838     037D                     __ptext11:	
  1839 ;; *************** function _Dio_init *****************
  1840 ;; Defined at:
  1841 ;;		line 60 in file "MCAL/scr/Dio.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0
  1855 ;;      Params:         0       0
  1856 ;;      Locals:         0       0
  1857 ;;      Temps:          0       0
  1858 ;;      Totals:         0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 3
  1862 ;; This function calls:
  1863 ;;		_Dio_Config
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869     037D                     _Dio_init:	
  1870                           ;psect for function _Dio_init
  1871                           
  1872                           
  1873                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1877     037D  1283               	bcf	3,5	;RP0=0, select bank0
  1878     037E  01A7               	clrf	Dio_Config@direction
  1879     037F  01A8               	clrf	Dio_Config@state
  1880     0380  01A9               	clrf	Dio_Config@pullType
  1881     0381  0AA9               	incf	Dio_Config@pullType,f
  1882     0382  3003               	movlw	3
  1883     0383  2106               	fcall	_Dio_Config
  1884                           
  1885                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  1886     0384  1283               	bcf	3,5	;RP0=0, select bank0
  1887     0385  01A7               	clrf	Dio_Config@direction
  1888     0386  0AA7               	incf	Dio_Config@direction,f
  1889     0387  01A8               	clrf	Dio_Config@state
  1890     0388  01A9               	clrf	Dio_Config@pullType
  1891     0389  3004               	movlw	4
  1892     038A  2106               	fcall	_Dio_Config
  1893     038B  0008               	return
  1894     038C                     __end_of_Dio_init:
  1895                           
  1896                           	psect	text12
  1897     0106                     __ptext12:	
  1898 ;; *************** function _Dio_Config *****************
  1899 ;; Defined at:
  1900 ;;		line 41 in file "MCAL/scr/Dio.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  pinNumber       1    wreg     unsigned char 
  1903 ;;  direction       1    7[BANK0 ] unsigned char 
  1904 ;;  state           1    8[BANK0 ] unsigned char 
  1905 ;;  pullType        1    9[BANK0 ] unsigned char 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  pinNumber       1   16[BANK0 ] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, btemp+1
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0
  1917 ;;      Params:         0       3
  1918 ;;      Locals:         0       3
  1919 ;;      Temps:          0       4
  1920 ;;      Totals:         0      10
  1921 ;;Total ram usage:       10 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_Dio_init
  1928 ;;		_SPI_Init
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932     0106                     _Dio_Config:	
  1933                           ;psect for function _Dio_Config
  1934                           
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  1938                           ;Dio_Config@pinNumber stored from wreg
  1939     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1940     0107  00B0               	movwf	Dio_Config@pinNumber
  1941                           
  1942                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  1943     0108  0827               	movf	Dio_Config@direction,w
  1944     0109  1903               	btfsc	3,2
  1945     010A  291F               	goto	l1055
  1946     010B  3001               	movlw	1
  1947     010C  00AA               	movwf	??_Dio_Config
  1948     010D  0A30               	incf	Dio_Config@pinNumber,w
  1949     010E  2911               	goto	u614
  1950     010F                     u615:
  1951     010F  1003               	clrc
  1952     0110  0DAA               	rlf	??_Dio_Config,f
  1953     0111                     u614:
  1954     0111  3EFF               	addlw	-1
  1955     0112  1D03               	skipz
  1956     0113  290F               	goto	u615
  1957     0114  082A               	movf	??_Dio_Config,w
  1958     0115  3AFF               	xorlw	255
  1959     0116  1683               	bsf	3,5	;RP0=1, select bank1
  1960     0117  0505               	andwf	5,w	;volatile
  1961     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1962     0119  00AB               	movwf	??_Dio_Config+1
  1963     011A  01AC               	clrf	??_Dio_Config+2
  1964     011B  082B               	movf	??_Dio_Config+1,w
  1965     011C  00AE               	movwf	_Dio_Config$71
  1966     011D  082C               	movf	??_Dio_Config+2,w
  1967     011E  2935               	goto	L2
  1968     011F                     l1055:
  1969     011F  0A30               	incf	Dio_Config@pinNumber,w
  1970     0120  00DF               	movwf	95
  1971     0121  3001               	movlw	1
  1972     0122  00AA               	movwf	??_Dio_Config
  1973     0123  3000               	movlw	0
  1974     0124  00AB               	movwf	??_Dio_Config+1
  1975     0125  2929               	goto	u624
  1976     0126                     u625:
  1977     0126  1003               	clrc
  1978     0127  0DAA               	rlf	??_Dio_Config,f
  1979     0128  0DAB               	rlf	??_Dio_Config+1,f
  1980     0129                     u624:
  1981     0129  0BDF               	decfsz	95,f
  1982     012A  2926               	goto	u625
  1983     012B  082A               	movf	??_Dio_Config,w
  1984     012C  1683               	bsf	3,5	;RP0=1, select bank1
  1985     012D  0405               	iorwf	5,w	;volatile
  1986     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1987     012F  00AC               	movwf	??_Dio_Config+2
  1988     0130  082B               	movf	??_Dio_Config+1,w
  1989     0131  00AD               	movwf	??_Dio_Config+3
  1990     0132  082C               	movf	??_Dio_Config+2,w
  1991     0133  00AE               	movwf	_Dio_Config$71
  1992     0134  082D               	movf	??_Dio_Config+3,w
  1993     0135                     L2:
  1994     0135  00AF               	movwf	_Dio_Config$71+1
  1995     0136  082E               	movf	_Dio_Config$71,w
  1996     0137  1683               	bsf	3,5	;RP0=1, select bank1
  1997     0138  0085               	movwf	5	;volatile
  1998                           
  1999                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  2000     0139  1283               	bcf	3,5	;RP0=0, select bank0
  2001     013A  0327               	decf	Dio_Config@direction,w
  2002     013B  1D03               	btfss	3,2
  2003     013C  295A               	goto	l1069
  2004                           
  2005                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  2006     013D  0328               	decf	Dio_Config@state,w
  2007     013E  1D03               	btfss	3,2
  2008     013F  294C               	goto	l1065
  2009                           
  2010                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  2011     0140  3001               	movlw	1
  2012     0141  00AA               	movwf	??_Dio_Config
  2013     0142  0A30               	incf	Dio_Config@pinNumber,w
  2014     0143  2946               	goto	u654
  2015     0144                     u655:
  2016     0144  1003               	clrc
  2017     0145  0DAA               	rlf	??_Dio_Config,f
  2018     0146                     u654:
  2019     0146  3EFF               	addlw	-1
  2020     0147  1D03               	skipz
  2021     0148  2944               	goto	u655
  2022     0149  082A               	movf	??_Dio_Config,w
  2023     014A  04C2               	iorwf	_DIO_State,f
  2024                           
  2025                           ;MCAL/scr/Dio.c: 48:         } else {
  2026     014B  2958               	goto	l1067
  2027     014C                     l1065:
  2028                           
  2029                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  2030     014C  3001               	movlw	1
  2031     014D  00AA               	movwf	??_Dio_Config
  2032     014E  0A30               	incf	Dio_Config@pinNumber,w
  2033     014F  2952               	goto	u664
  2034     0150                     u665:
  2035     0150  1003               	clrc
  2036     0151  0DAA               	rlf	??_Dio_Config,f
  2037     0152                     u664:
  2038     0152  3EFF               	addlw	-1
  2039     0153  1D03               	skipz
  2040     0154  2950               	goto	u665
  2041     0155  082A               	movf	??_Dio_Config,w
  2042     0156  3AFF               	xorlw	255
  2043     0157  05C2               	andwf	_DIO_State,f
  2044     0158                     l1067:
  2045                           
  2046                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  2047     0158  0842               	movf	_DIO_State,w
  2048     0159  0085               	movwf	5	;volatile
  2049     015A                     l1069:
  2050                           
  2051                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  2052     015A  0329               	decf	Dio_Config@pullType,w
  2053     015B  1D03               	btfss	3,2
  2054     015C  296E               	goto	l1073
  2055                           
  2056                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  2057     015D  307F               	movlw	127
  2058     015E  1683               	bsf	3,5	;RP0=1, select bank1
  2059     015F  0581               	andwf	1,f	;volatile
  2060                           
  2061                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  2062     0160  3001               	movlw	1
  2063     0161  1283               	bcf	3,5	;RP0=0, select bank0
  2064     0162  00AA               	movwf	??_Dio_Config
  2065     0163  0A30               	incf	Dio_Config@pinNumber,w
  2066     0164  2967               	goto	u684
  2067     0165                     u685:
  2068     0165  1003               	clrc
  2069     0166  0DAA               	rlf	??_Dio_Config,f
  2070     0167                     u684:
  2071     0167  3EFF               	addlw	-1
  2072     0168  1D03               	skipz
  2073     0169  2965               	goto	u685
  2074     016A  082A               	movf	??_Dio_Config,w
  2075     016B  1683               	bsf	3,5	;RP0=1, select bank1
  2076     016C  0495               	iorwf	21,f	;volatile
  2077                           
  2078                           ;MCAL/scr/Dio.c: 56:     } else {
  2079     016D  0008               	return
  2080     016E                     l1073:
  2081                           
  2082                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  2083     016E  3001               	movlw	1
  2084     016F  00AA               	movwf	??_Dio_Config
  2085     0170  0A30               	incf	Dio_Config@pinNumber,w
  2086     0171  2974               	goto	u694
  2087     0172                     u695:
  2088     0172  1003               	clrc
  2089     0173  0DAA               	rlf	??_Dio_Config,f
  2090     0174                     u694:
  2091     0174  3EFF               	addlw	-1
  2092     0175  1D03               	skipz
  2093     0176  2972               	goto	u695
  2094     0177  082A               	movf	??_Dio_Config,w
  2095     0178  3AFF               	xorlw	255
  2096     0179  1683               	bsf	3,5	;RP0=1, select bank1
  2097     017A  0595               	andwf	21,f	;volatile
  2098     017B  0008               	return
  2099     017C                     __end_of_Dio_Config:
  2100                           
  2101                           	psect	text13
  2102     035C                     __ptext13:	
  2103 ;; *************** function _Adc_StartConversion *****************
  2104 ;; Defined at:
  2105 ;;		line 87 in file "MCAL/scr/Adc.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  channel         1    wreg     enum E11
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  channel         1    8[BANK0 ] enum E11
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0
  2119 ;;      Params:         0       0
  2120 ;;      Locals:         0       1
  2121 ;;      Temps:          0       1
  2122 ;;      Totals:         0       2
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 2
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133     035C                     _Adc_StartConversion:	
  2134                           ;psect for function _Adc_StartConversion
  2135                           
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _Adc_StartConversion: [wreg+status,2+status,0]
  2139                           ;Adc_StartConversion@channel stored from wreg
  2140     035C  1283               	bcf	3,5	;RP0=0, select bank0
  2141     035D  00A8               	movwf	Adc_StartConversion@channel
  2142                           
  2143                           ;MCAL/scr/Adc.c: 90:     ADCON0 &= ~( 0b11 << 2);
  2144     035E  30F3               	movlw	243
  2145     035F  059F               	andwf	31,f	;volatile
  2146                           
  2147                           ;MCAL/scr/Adc.c: 91:     ADCON0 |= (channel << 2);
  2148     0360  0828               	movf	Adc_StartConversion@channel,w	;volatile
  2149     0361  00A7               	movwf	??_Adc_StartConversion
  2150     0362  3001               	movlw	1
  2151     0363                     u715:
  2152     0363  1003               	clrc
  2153     0364  0DA7               	rlf	??_Adc_StartConversion,f
  2154     0365  3EFF               	addlw	-1
  2155     0366  1D03               	skipz
  2156     0367  2B63               	goto	u715
  2157     0368  1003               	clrc
  2158     0369  0D27               	rlf	??_Adc_StartConversion,w
  2159     036A  049F               	iorwf	31,f	;volatile
  2160                           
  2161                           ;MCAL/scr/Adc.c: 92:     ADCON0 |= (1 << 1);
  2162     036B  149F               	bsf	31,1	;volatile
  2163     036C  0008               	return
  2164     036D                     __end_of_Adc_StartConversion:
  2165                           
  2166                           	psect	text14
  2167     023B                     __ptext14:	
  2168 ;; *************** function _Adc_ReadResult *****************
  2169 ;; Defined at:
  2170 ;;		line 96 in file "MCAL/scr/Adc.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2    7[BANK0 ] unsigned short 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0
  2184 ;;      Params:         0       2
  2185 ;;      Locals:         0       0
  2186 ;;      Temps:          0       7
  2187 ;;      Totals:         0       9
  2188 ;;Total ram usage:        9 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 2
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198     023B                     _Adc_ReadResult:	
  2199                           ;psect for function _Adc_ReadResult
  2200                           
  2201     023B                     l61:	
  2202                           ;MCAL/scr/Adc.c: 97:     while (ADCON0 & (1 << 1));
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _Adc_ReadResult: [wreg+status,2+status,0]
  2206                           
  2207     023B  1283               	bcf	3,5	;RP0=0, select bank0
  2208     023C  189F               	btfsc	31,1	;volatile
  2209     023D  2A3B               	goto	l61
  2210                           
  2211                           ;MCAL/scr/Adc.c: 100:     if (ADCON0 & (1 << 7)) {
  2212     023E  1F9F               	btfss	31,7	;volatile
  2213     023F  2A47               	goto	l1135
  2214                           
  2215                           ;MCAL/scr/Adc.c: 102:         return (uint16)((ADRESH << 8) | ADRESL);
  2216     0240  081E               	movf	30,w	;volatile
  2217     0241  00A8               	movwf	?_Adc_ReadResult+1
  2218     0242  1683               	bsf	3,5	;RP0=1, select bank1
  2219     0243  081E               	movf	30,w	;volatile
  2220     0244  1283               	bcf	3,5	;RP0=0, select bank0
  2221     0245  00A7               	movwf	?_Adc_ReadResult
  2222     0246  0008               	return
  2223     0247                     l1135:
  2224                           
  2225                           ;MCAL/scr/Adc.c: 105:         return (uint16)((ADRESH << 2) | (ADRESL >> 6));
  2226     0247  1683               	bsf	3,5	;RP0=1, select bank1
  2227     0248  081E               	movf	30,w	;volatile
  2228     0249  1283               	bcf	3,5	;RP0=0, select bank0
  2229     024A  00A9               	movwf	??_Adc_ReadResult
  2230     024B  3006               	movlw	6
  2231     024C                     u745:
  2232     024C  1003               	clrc
  2233     024D  0CA9               	rrf	??_Adc_ReadResult,f
  2234     024E  3EFF               	addlw	-1
  2235     024F  1D03               	skipz
  2236     0250  2A4C               	goto	u745
  2237     0251  0829               	movf	??_Adc_ReadResult,w
  2238     0252  00AA               	movwf	??_Adc_ReadResult+1
  2239     0253  01AB               	clrf	??_Adc_ReadResult+2
  2240     0254  081E               	movf	30,w	;volatile
  2241     0255  00AC               	movwf	??_Adc_ReadResult+3
  2242     0256  01AD               	clrf	??_Adc_ReadResult+4
  2243     0257  1003               	clrc
  2244     0258  0DAC               	rlf	??_Adc_ReadResult+3,f
  2245     0259  0DAD               	rlf	??_Adc_ReadResult+4,f
  2246     025A  1003               	clrc
  2247     025B  0DAC               	rlf	??_Adc_ReadResult+3,f
  2248     025C  0DAD               	rlf	??_Adc_ReadResult+4,f
  2249     025D  082A               	movf	??_Adc_ReadResult+1,w
  2250     025E  042C               	iorwf	??_Adc_ReadResult+3,w
  2251     025F  00AE               	movwf	??_Adc_ReadResult+5
  2252     0260  082B               	movf	??_Adc_ReadResult+2,w
  2253     0261  042D               	iorwf	??_Adc_ReadResult+4,w
  2254     0262  00AF               	movwf	??_Adc_ReadResult+6
  2255     0263  082E               	movf	??_Adc_ReadResult+5,w
  2256     0264  00A7               	movwf	?_Adc_ReadResult
  2257     0265  082F               	movf	??_Adc_ReadResult+6,w
  2258     0266  00A8               	movwf	?_Adc_ReadResult+1
  2259     0267  0008               	return
  2260     0268                     __end_of_Adc_ReadResult:
  2261                           
  2262                           	psect	text15
  2263     038C                     __ptext15:	
  2264 ;; *************** function _Adc_Init *****************
  2265 ;; Defined at:
  2266 ;;		line 53 in file "MCAL/scr/Adc.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0
  2280 ;;      Params:         0       0
  2281 ;;      Locals:         0       0
  2282 ;;      Temps:          0       0
  2283 ;;      Totals:         0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 2
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294     038C                     _Adc_Init:	
  2295                           ;psect for function _Adc_Init
  2296                           
  2297                           
  2298                           ;MCAL/scr/Adc.c: 54: ADCON0 |= (1 << 0);
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  2302     038C  1283               	bcf	3,5	;RP0=0, select bank0
  2303     038D  141F               	bsf	31,0	;volatile
  2304                           
  2305                           ;MCAL/scr/Adc.c: 59:     (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  2306     038E  30BF               	movlw	191
  2307     038F  059F               	andwf	31,f	;volatile
  2308     0390  081F               	movf	31,w	;volatile
  2309                           
  2310                           ;MCAL/scr/Adc.c: 62:     (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/
      +                          1000 )) >= 1600) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 /
      +                           ((4000000)/1000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 
      +                          : ((32000000 / ((4000000)/1000 )) >= 1600) ? 0b010 : ((64000000 / ((4000000)/1000 )) >= 
      +                          1600) ? 0b110 : 0b110) << 4) );
  2311     0391  308F               	movlw	143
  2312     0392  1683               	bsf	3,5	;RP0=1, select bank1
  2313     0393  059F               	andwf	31,f	;volatile
  2314     0394  161F               	bsf	31,4	;volatile
  2315                           
  2316                           ;MCAL/scr/Adc.c: 82:         ADCON0 &= ~(1 << 7);
  2317     0395  307F               	movlw	127
  2318     0396  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0397  059F               	andwf	31,f	;volatile
  2320     0398  0008               	return
  2321     0399                     __end_of_Adc_Init:
  2322                           
  2323                           	psect	text16
  2324     0268                     __ptext16:	
  2325 ;; *************** function _ISR *****************
  2326 ;; Defined at:
  2327 ;;		line 90 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  i               2    5[BANK0 ] unsigned short 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0
  2341 ;;      Params:         0       0
  2342 ;;      Locals:         0       2
  2343 ;;      Temps:          0       3
  2344 ;;      Totals:         0       5
  2345 ;;Total ram usage:        5 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 1
  2348 ;; This function calls:
  2349 ;;		_Dio_Pin_Read
  2350 ;; This function is called by:
  2351 ;;		Interrupt level 1
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355     0268                     _ISR:	
  2356                           ;psect for function _ISR
  2357                           
  2358                           
  2359                           ;main.c: 92:     if (INTCONbits.GPIF) {
  2360     0268  1C0B               	btfss	11,0	;volatile
  2361     0269  2A8C               	goto	i1l189
  2362                           
  2363                           ;main.c: 94:         uint16 i = 0 ;
  2364     026A  01A5               	clrf	ISR@i
  2365     026B  01A6               	clrf	ISR@i+1
  2366     026C                     i1l1299:	
  2367                           ;main.c: 95:               while(!Dio_Pin_Read(3)){
  2368                           
  2369                           
  2370                           ;main.c: 95:               while(!Dio_Pin_Read(3)){
  2371     026C  3003               	movlw	3
  2372     026D  2349               	fcall	_Dio_Pin_Read
  2373     026E  3A00               	xorlw	0
  2374     026F  1D03               	btfss	3,2
  2375     0270  2A8B               	goto	i1l188
  2376                           
  2377                           ;main.c: 96:                   i++;
  2378     0271  3001               	movlw	1
  2379     0272  1283               	bcf	3,5	;RP0=0, select bank0
  2380     0273  07A5               	addwf	ISR@i,f
  2381     0274  1803               	skipnc
  2382     0275  0AA6               	incf	ISR@i+1,f
  2383     0276  3000               	movlw	0
  2384     0277  07A6               	addwf	ISR@i+1,f
  2385                           
  2386                           ;main.c: 97:                   _delay((unsigned long)(((100))*(4000000/4000000.0)));
  2387     0278  3021               	movlw	33
  2388     0279  00A2               	movwf	??_ISR
  2389     027A                     u111_27:
  2390     027A  0BA2               	decfsz	??_ISR,f
  2391     027B  2A7A               	goto	u111_27
  2392                           
  2393                           ;main.c: 98:                   if(i>3000){
  2394     027C  300B               	movlw	11
  2395     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2396     027E  0226               	subwf	ISR@i+1,w
  2397     027F  30B9               	movlw	185
  2398     0280  1903               	skipnz
  2399     0281  0225               	subwf	ISR@i,w
  2400     0282  1C03               	skipc
  2401     0283  2A6C               	goto	i1l1299
  2402                           
  2403                           ;main.c: 99:                       DispenserOn = !DispenserOn;
  2404     0284  0841               	movf	_DispenserOn,w
  2405     0285  1D03               	btfss	3,2
  2406     0286  2A89               	goto	u104_20
  2407     0287  3001               	movlw	1
  2408     0288  2A8A               	goto	u105_20
  2409     0289                     u104_20:
  2410     0289  3000               	movlw	0
  2411     028A                     u105_20:
  2412     028A  00C1               	movwf	_DispenserOn
  2413     028B                     i1l188:	
  2414                           ;main.c: 100:                       break;}
  2415                           
  2416                           
  2417                           ;main.c: 104:         INTCONbits.GPIF = 0;
  2418     028B  100B               	bcf	11,0	;volatile
  2419     028C                     i1l189:
  2420     028C  1283               	bcf	3,5	;RP0=0, select bank0
  2421     028D  0824               	movf	??_ISR+2,w
  2422     028E  008A               	movwf	10
  2423     028F  0E23               	swapf	??_ISR+1,w
  2424     0290  0083               	movwf	3
  2425     0291  0EDE               	swapf	94,f
  2426     0292  0E5E               	swapf	94,w
  2427     0293  0009               	retfie
  2428     0294                     __end_of_ISR:
  2429                           
  2430                           	psect	intentry
  2431     0004                     __pintentry:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2434                           
  2435     0004                     interrupt_function:
  2436     005E                     saved_w         set	btemp
  2437     0004  00DE               	movwf	btemp
  2438     0005  0E03               	swapf	3,w
  2439     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2440     0007  00A3               	movwf	??_ISR+1
  2441     0008  080A               	movf	10,w
  2442     0009  00A4               	movwf	??_ISR+2
  2443     000A  2A68               	ljmp	_ISR
  2444                           
  2445                           	psect	text17
  2446     0349                     __ptext17:	
  2447 ;; *************** function _Dio_Pin_Read *****************
  2448 ;; Defined at:
  2449 ;;		line 19 in file "MCAL/scr/Dio.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  pinNumber       1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  pinNumber       1    1[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      unsigned char 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0
  2463 ;;      Params:         0       0
  2464 ;;      Locals:         0       1
  2465 ;;      Temps:          0       1
  2466 ;;      Totals:         0       2
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_ISR
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     0349                     _Dio_Pin_Read:	
  2477                           ;psect for function _Dio_Pin_Read
  2478                           
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _Dio_Pin_Read: [wreg+status,2+status,0]
  2482                           ;Dio_Pin_Read@pinNumber stored from wreg
  2483     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2484     034A  00A1               	movwf	Dio_Pin_Read@pinNumber
  2485                           
  2486                           ;MCAL/scr/Dio.c: 20:         if (GPIO & (1 << pinNumber)) {
  2487     034B  3001               	movlw	1
  2488     034C  00A0               	movwf	??_Dio_Pin_Read
  2489     034D  0A21               	incf	Dio_Pin_Read@pinNumber,w
  2490     034E  2B51               	goto	u75_24
  2491     034F                     u75_25:
  2492     034F  1003               	clrc
  2493     0350  0DA0               	rlf	??_Dio_Pin_Read,f
  2494     0351                     u75_24:
  2495     0351  3EFF               	addlw	-1
  2496     0352  1D03               	skipz
  2497     0353  2B4F               	goto	u75_25
  2498     0354  0820               	movf	??_Dio_Pin_Read,w
  2499     0355  0505               	andwf	5,w	;volatile
  2500     0356  1903               	btfsc	3,2
  2501     0357  2B5A               	goto	i1l1147
  2502                           
  2503                           ;MCAL/scr/Dio.c: 21:             return 1;
  2504     0358  3001               	movlw	1
  2505     0359  0008               	return
  2506     035A                     i1l1147:
  2507                           
  2508                           ;MCAL/scr/Dio.c: 23:             return 0;
  2509     035A  3000               	movlw	0
  2510     035B  0008               	return
  2511     035C                     __end_of_Dio_Pin_Read:
  2512     0000                     ___latbits      equ	0
  2513     005E                     btemp           set	94	;btemp
  2514     005E                     wtemp0          set	94
  2515                           
  2516                           	psect	config
  2517                           
  2518                           ;Config register CONFIG @ 0x2007
  2519                           ;	Oscillator Selection bits
  2520                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2521                           ;	Watchdog Timer Enable bit
  2522                           ;	WDTE = OFF, WDT disabled
  2523                           ;	Power-Up Timer Enable bit
  2524                           ;	PWRTE = OFF, PWRT disabled
  2525                           ;	GP3/MCLR pin function select
  2526                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2527                           ;	Brown-out Detect Enable bit
  2528                           ;	BOREN = OFF, BOD disabled
  2529                           ;	Code Protection bit
  2530                           ;	CP = OFF, Program Memory code protection is disabled
  2531                           ;	Data Code Protection bit
  2532                           ;	CPD = OFF, Data memory code protection is disabled
  2533     2007                     	org	8199
  2534     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     31      36

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MAX7219_DisplayData
    ___wmul->_Adc_ReadResult
    ___lwmod->___lwdiv
    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _MAX7219_DisplayData->_SPI_Send_16bit
    _MAX7219_DisplayData->___lwmod
    _MAX7219_ClearDisplay->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_Dio_Pin_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2025
                                             25 BANK0      6     6      0
                           _Adc_Init
                     _Adc_ReadResult
                _Adc_StartConversion
                      _Dio_Pin_Write
                           _Dio_init
                          _Gpio_Init
               _MAX7219_ClearDisplay
                _MAX7219_DisplayData
                       _MAX7219_Init
                           _SPI_Init
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                             16 BANK0      6     2      4
                     _Adc_ReadResult (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                             14 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     168
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     186
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (1) _MAX7219_DisplayData                                  6     5      1     246
                                             19 BANK0      6     5      1
                     _SPI_Send_16bit
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _MAX7219_ClearDisplay                                 3     3      0     254
                                             19 BANK0      3     3      0
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     186
                                             10 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      88
                                              7 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              7 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_StartConversion                                  2     2      0      29
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Adc_ReadResult                                       9     7      2       0
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0      53
                                              2 BANK0      5     5      0
                       _Dio_Pin_Read
 ---------------------------------------------------------------------------------
 (5) _Dio_Pin_Read                                         2     2      0      29
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_ReadResult
   _Adc_StartConversion
   _Dio_Pin_Write
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_ClearDisplay
     _SPI_Send_16bit
       _Dio_Pin_Write
   _MAX7219_DisplayData
     _SPI_Send_16bit
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   _MAX7219_Init
     _SPI_Send_16bit
   _SPI_Init
     _Dio_Config
   ___lwdiv
   ___lwmod
   ___wmul
     _Adc_ReadResult (ARG)

 _ISR (ROOT)
   _Dio_Pin_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     31      36     58.1%
STACK                0      0       0      0.0%
DATA                 0      0      36      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 23:08:59 2024

        __end_of_Dio_Pin_Read 035C                             pc 0002                            l61 023B  
                          fsr 0004           ___wmul@multiplicand 0032         __end_of_Dio_Pin_Write 02D6  
              _SPI_Send_16bit 017C                           l275 029F                           _ISR 0268  
                         u614 0111                           u615 010F                           u624 0129  
                         u625 0126                           u554 02C1                           u715 0363  
                         u555 02BF                           u564 02CD                           u565 02CB  
                         u654 0146                           u574 0190                           u655 0144  
                         u575 018D                           u664 0152                           u745 024C  
                         u665 0150                           u825 01DB                           u595 01C7  
                         u915 0223                           u684 0167                           u685 0165  
                         u845 01E5                           u925 022C                           u694 0174  
                         u695 0172                           u855 01F1                           u865 01FB  
                         u785 02A0                           u795 02A7                           u895 0214  
                         u985 005C                           _WPU 0095                           fsr0 0004  
                        ?_ISR 0020                          ISR@i 0025                          l1021 02C7  
                        l1023 02D3                          l1033 0183                          l1211 021D  
                        l1037 019F                          l1135 0247                          l1055 011F  
                        l1215 022B                          l1073 016E                          l1065 014C  
                        l1209 0211                          l1067 0158                          l1083 0310  
                        l1219 0236                          l1163 0297                          l1069 015A  
                        l1253 0041                          l1255 0032                          l1193 01FA  
                        l1185 01D8                          l1273 00EC                          l1257 0045  
                        l1187 01E4                          l1275 006B                          l1197 0205  
                        l1277 00F0                          l1289 001E                          u1107 01B0  
                        _IOCB 0096                          u1077 0039                          u1087 00DE  
                        u1097 01A5                          _GPIO 0005                          _main 0014  
                        btemp 005E                    _Dio_Config 0106                          start 000B  
                       ??_ISR 0022        __end_of_SPI_Send_16bit 01CF                         ?_main 0020  
                       _ANSEL 009F               __end_of___lwdiv 020A               __end_of___lwmod 023B  
                       i1l188 028B                         i1l189 028C                         u75_24 0351  
                       u75_25 034F              __end_of_Adc_Init 0399                         main@i 003E  
            __end_of_SPI_Init 030D                         pclath 000A          __end_of_MAX7219_Init 02F5  
                       status 0003                         wtemp0 005E  __end_of_MAX7219_ClearDisplay 0323  
            __end_of_Dio_init 038C               __initialization 000C                  __end_of_main 0106  
             ?_SPI_Send_16bit 002A                        ??_main 0039                        _ADCON0 001F  
            ??_Adc_ReadResult 0029                        _ADRESH 001E                        _ADRESL 009E  
                      i1l1147 035A                        u111_27 027A                        u104_20 0289  
                      u105_20 028A                        i1l1299 026C                        _TRISIO 0085  
                 ?_Dio_Config 0027                   _DispenserOn 0041                        ___wmul 0294  
                   ??___lwdiv 0000                     ??___lwmod 0000            SPI_Send_16bit@data 002A  
                      saved_w 005E           _MAX7219_DisplayData 0323                  _Dio_Pin_Read 0349  
     __end_of__initialization 0012      MAX7219_DisplayData@digit 0038          ?_MAX7219_DisplayData 0033  
              __pcstackCOMMON 0000                     ?_Adc_Init 0020             __end_of_Gpio_Init 0349  
                   ?_SPI_Init 0020          _MAX7219_ClearDisplay 030D                     ?_Dio_init 0020  
                  __pbssBANK0 003F         MAX7219_ClearDisplay@i 0035         ??_MAX7219_DisplayData 0034  
                  __pmaintext 0014                       ?___wmul 0030        Dio_Pin_Write@pinNumber 0029  
                  __pintentry 0004                    ??_Adc_Init 0000                    ??_SPI_Init 0000  
                _MAX7219_Init 02D6         ?_MAX7219_ClearDisplay 0020            Dio_Config@pullType 0029  
                  ??_Dio_init 0000                    __stringtab 036D                       _Counter 003F  
            ??_SPI_Send_16bit 002C                       ___lwdiv 01CF                       ___lwmod 020A  
                     __ptext1 0294                       __ptext2 020A                       __ptext3 01CF  
                     __ptext4 02F5                       __ptext5 02D6                       __ptext6 0323  
                     __ptext7 030D                       __ptext8 017C                       __ptext9 02B6  
                   _DIO_State 0042          end_of_initialization 0012                 _Dio_Config$71 002E  
                ??_Dio_Config 002A                 _Dio_Pin_Write 02B6        ??_MAX7219_ClearDisplay 0033  
          __end_of_Dio_Config 017C           _Adc_StartConversion 035C          ?_Adc_StartConversion 0020  
              __end_of___wmul 02B6                ?_Dio_Pin_Write 0027                     _Gpio_Init 0336  
         start_initialization 000C  MAX7219_DisplayData@character 0033                   __end_of_ISR 0294  
                 _BCD_Enabled 0043         ??_Adc_StartConversion 0027                      ??___wmul 0000  
           SPI_Send_16bit@bit 0031                    ?_Gpio_Init 0020                     ___latbits 0000  
               __pcstackBANK0 0020   __end_of_MAX7219_DisplayData 0336              _MAX7219_No_Table 0373  
         Dio_Config@direction 0027              ___lwdiv@dividend 0029               Dio_Config@state 0028  
             ??_Dio_Pin_Write 0028                      ?___lwdiv 0027                      ?___lwmod 002E  
                   __pstrings 036D           Dio_Config@pinNumber 0030              ___lwdiv@quotient 002B  
           interrupt_function 0004                ___wmul@product 0034                      _Adc_Init 038C  
                    _SPI_Init 02F5                   __stringbase 0372             ___wmul@multiplier 0030  
                 ??_Gpio_Init 0000                      _Dio_init 037D                 ?_Dio_Pin_Read 0020  
          Dio_Pin_Write@state 0027                _Adc_ReadResult 023B            __end_of__stringtab 0373  
                    _main$776 003C               ___lwdiv@divisor 0027                ??_Dio_Pin_Read 0020  
             ___lwdiv@counter 002D                      __ptext10 0336                      __ptext11 037D  
                    __ptext12 0106                      __ptext13 035C                      __ptext14 023B  
                    __ptext15 038C                      __ptext16 0268                      __ptext17 0349  
      __end_of_Adc_ReadResult 0268                 ?_MAX7219_Init 0020                    _INTCONbits 000B  
    __end_of_MAX7219_No_Table 037D                      intlevel1 0000              ___lwmod@dividend 0030  
 __end_of_Adc_StartConversion 036D               ?_Adc_ReadResult 0027                     stringcode 036D  
  Adc_StartConversion@channel 0028         Dio_Pin_Read@pinNumber 0021                ??_MAX7219_Init 0000  
                  _OPTION_REG 0081               ___lwmod@divisor 002E               ___lwmod@counter 0032  
                    stringdir 036D                      stringtab 036D  
