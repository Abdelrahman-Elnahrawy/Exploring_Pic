

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Sep 21 12:25:50 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x5E,2
    30     0000                     
    31                           ; Generated 17/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F675 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     GPIO            equ	5	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0019                     CMCON           equ	25	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISIO          equ	133	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008E                     PCON            equ	142	;# 
    93     0090                     OSCCAL          equ	144	;# 
    94     0095                     WPU             equ	149	;# 
    95     0096                     IOC             equ	150	;# 
    96     0096                     IOCB            equ	150	;# 
    97     0099                     VRCON           equ	153	;# 
    98     009A                     EEDATA          equ	154	;# 
    99     009A                     EEDAT           equ	154	;# 
   100     009B                     EEADR           equ	155	;# 
   101     009C                     EECON1          equ	156	;# 
   102     009D                     EECON2          equ	157	;# 
   103     009E                     ADRESL          equ	158	;# 
   104     009F                     ANSEL           equ	159	;# 
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     GPIO            equ	5	;# 
   111     000A                     PCLATH          equ	10	;# 
   112     000B                     INTCON          equ	11	;# 
   113     000C                     PIR1            equ	12	;# 
   114     000E                     TMR1            equ	14	;# 
   115     000E                     TMR1L           equ	14	;# 
   116     000F                     TMR1H           equ	15	;# 
   117     0010                     T1CON           equ	16	;# 
   118     0019                     CMCON           equ	25	;# 
   119     001E                     ADRESH          equ	30	;# 
   120     001F                     ADCON0          equ	31	;# 
   121     0081                     OPTION_REG      equ	129	;# 
   122     0085                     TRISIO          equ	133	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008E                     PCON            equ	142	;# 
   125     0090                     OSCCAL          equ	144	;# 
   126     0095                     WPU             equ	149	;# 
   127     0096                     IOC             equ	150	;# 
   128     0096                     IOCB            equ	150	;# 
   129     0099                     VRCON           equ	153	;# 
   130     009A                     EEDATA          equ	154	;# 
   131     009A                     EEDAT           equ	154	;# 
   132     009B                     EEADR           equ	155	;# 
   133     009C                     EECON1          equ	156	;# 
   134     009D                     EECON2          equ	157	;# 
   135     009E                     ADRESL          equ	158	;# 
   136     009F                     ANSEL           equ	159	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     GPIO            equ	5	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0019                     CMCON           equ	25	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISIO          equ	133	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008E                     PCON            equ	142	;# 
   157     0090                     OSCCAL          equ	144	;# 
   158     0095                     WPU             equ	149	;# 
   159     0096                     IOC             equ	150	;# 
   160     0096                     IOCB            equ	150	;# 
   161     0099                     VRCON           equ	153	;# 
   162     009A                     EEDATA          equ	154	;# 
   163     009A                     EEDAT           equ	154	;# 
   164     009B                     EEADR           equ	155	;# 
   165     009C                     EECON1          equ	156	;# 
   166     009D                     EECON2          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ANSEL           equ	159	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     GPIO            equ	5	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0019                     CMCON           equ	25	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISIO          equ	133	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008E                     PCON            equ	142	;# 
   189     0090                     OSCCAL          equ	144	;# 
   190     0095                     WPU             equ	149	;# 
   191     0096                     IOC             equ	150	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0099                     VRCON           equ	153	;# 
   194     009A                     EEDATA          equ	154	;# 
   195     009A                     EEDAT           equ	154	;# 
   196     009B                     EEADR           equ	155	;# 
   197     009C                     EECON1          equ	156	;# 
   198     009D                     EECON2          equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ANSEL           equ	159	;# 
   201     0000                     INDF            equ	0	;# 
   202     0001                     TMR0            equ	1	;# 
   203     0002                     PCL             equ	2	;# 
   204     0003                     STATUS          equ	3	;# 
   205     0004                     FSR             equ	4	;# 
   206     0005                     GPIO            equ	5	;# 
   207     000A                     PCLATH          equ	10	;# 
   208     000B                     INTCON          equ	11	;# 
   209     000C                     PIR1            equ	12	;# 
   210     000E                     TMR1            equ	14	;# 
   211     000E                     TMR1L           equ	14	;# 
   212     000F                     TMR1H           equ	15	;# 
   213     0010                     T1CON           equ	16	;# 
   214     0019                     CMCON           equ	25	;# 
   215     001E                     ADRESH          equ	30	;# 
   216     001F                     ADCON0          equ	31	;# 
   217     0081                     OPTION_REG      equ	129	;# 
   218     0085                     TRISIO          equ	133	;# 
   219     008C                     PIE1            equ	140	;# 
   220     008E                     PCON            equ	142	;# 
   221     0090                     OSCCAL          equ	144	;# 
   222     0095                     WPU             equ	149	;# 
   223     0096                     IOC             equ	150	;# 
   224     0096                     IOCB            equ	150	;# 
   225     0099                     VRCON           equ	153	;# 
   226     009A                     EEDATA          equ	154	;# 
   227     009A                     EEDAT           equ	154	;# 
   228     009B                     EEADR           equ	155	;# 
   229     009C                     EECON1          equ	156	;# 
   230     009D                     EECON2          equ	157	;# 
   231     009E                     ADRESL          equ	158	;# 
   232     009F                     ANSEL           equ	159	;# 
   233     0000                     INDF            equ	0	;# 
   234     0001                     TMR0            equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR             equ	4	;# 
   238     0005                     GPIO            equ	5	;# 
   239     000A                     PCLATH          equ	10	;# 
   240     000B                     INTCON          equ	11	;# 
   241     000C                     PIR1            equ	12	;# 
   242     000E                     TMR1            equ	14	;# 
   243     000E                     TMR1L           equ	14	;# 
   244     000F                     TMR1H           equ	15	;# 
   245     0010                     T1CON           equ	16	;# 
   246     0019                     CMCON           equ	25	;# 
   247     001E                     ADRESH          equ	30	;# 
   248     001F                     ADCON0          equ	31	;# 
   249     0081                     OPTION_REG      equ	129	;# 
   250     0085                     TRISIO          equ	133	;# 
   251     008C                     PIE1            equ	140	;# 
   252     008E                     PCON            equ	142	;# 
   253     0090                     OSCCAL          equ	144	;# 
   254     0095                     WPU             equ	149	;# 
   255     0096                     IOC             equ	150	;# 
   256     0096                     IOCB            equ	150	;# 
   257     0099                     VRCON           equ	153	;# 
   258     009A                     EEDATA          equ	154	;# 
   259     009A                     EEDAT           equ	154	;# 
   260     009B                     EEADR           equ	155	;# 
   261     009C                     EECON1          equ	156	;# 
   262     009D                     EECON2          equ	157	;# 
   263     009E                     ADRESL          equ	158	;# 
   264     009F                     ANSEL           equ	159	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     GPIO            equ	5	;# 
   271     000A                     PCLATH          equ	10	;# 
   272     000B                     INTCON          equ	11	;# 
   273     000C                     PIR1            equ	12	;# 
   274     000E                     TMR1            equ	14	;# 
   275     000E                     TMR1L           equ	14	;# 
   276     000F                     TMR1H           equ	15	;# 
   277     0010                     T1CON           equ	16	;# 
   278     0019                     CMCON           equ	25	;# 
   279     001E                     ADRESH          equ	30	;# 
   280     001F                     ADCON0          equ	31	;# 
   281     0081                     OPTION_REG      equ	129	;# 
   282     0085                     TRISIO          equ	133	;# 
   283     008C                     PIE1            equ	140	;# 
   284     008E                     PCON            equ	142	;# 
   285     0090                     OSCCAL          equ	144	;# 
   286     0095                     WPU             equ	149	;# 
   287     0096                     IOC             equ	150	;# 
   288     0096                     IOCB            equ	150	;# 
   289     0099                     VRCON           equ	153	;# 
   290     009A                     EEDATA          equ	154	;# 
   291     009A                     EEDAT           equ	154	;# 
   292     009B                     EEADR           equ	155	;# 
   293     009C                     EECON1          equ	156	;# 
   294     009D                     EECON2          equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ANSEL           equ	159	;# 
   297                           
   298                           	psect	strings
   299     03C4                     __pstrings:
   300     03C4                     stringtab:
   301     03C4                     __stringtab:
   302     03C4                     stringcode:	
   303                           ;	String table - string pointers are 1 byte each
   304                           
   305     03C4                     stringdir:
   306     03C4  3003               	movlw	high stringdir
   307     03C5  008A               	movwf	10
   308     03C6  0804               	movf	4,w
   309     03C7  0A84               	incf	4,f
   310     03C8  0782               	addwf	2,f
   311     03C9                     __stringbase:
   312     03C9  3400               	retlw	0
   313     03CA                     __end_of__stringtab:
   314     03CA                     _MAX7219_No_Table:
   315     03CA  347E               	retlw	126
   316     03CB  3430               	retlw	48
   317     03CC  346D               	retlw	109
   318     03CD  3479               	retlw	121
   319     03CE  3433               	retlw	51
   320     03CF  345B               	retlw	91
   321     03D0  345F               	retlw	95
   322     03D1  3470               	retlw	112
   323     03D2  347F               	retlw	127
   324     03D3  347B               	retlw	123
   325     03D4                     __end_of_MAX7219_No_Table:
   326     000B                     _INTCONbits     set	11
   327     0005                     _GPIO           set	5
   328     001E                     _ADRESH         set	30
   329     001F                     _ADCON0         set	31
   330     0096                     _IOCB           set	150
   331     0095                     _WPU            set	149
   332     0081                     _OPTION_REG     set	129
   333     0085                     _TRISIO         set	133
   334     009E                     _ADRESL         set	158
   335     009F                     _ANSEL          set	159
   336                           
   337                           	psect	cinit
   338     000C                     start_initialization:	
   339                           ; #config settings
   340                           
   341     000C                     __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344     000C  1283               	bcf	3,5	;RP0=0, select bank0
   345     000D  01C9               	clrf	__pbssBANK0& (0+127)
   346     000E  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   347     000F  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   348     0010  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   349     0011  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   350     0012                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353     0012                     __end_of__initialization:
   354     0012  0183               	clrf	3
   355     0013  2814               	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358     0049                     __pbssBANK0:
   359     0049                     _Counter:
   360     0049                     	ds	2
   361     004B                     _DispenserOn:
   362     004B                     	ds	1
   363     004C                     _DIO_State:
   364     004C                     	ds	1
   365     004D                     _BCD_Enabled:
   366     004D                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0000                     __pcstackCOMMON:
   370     0000                     ??_MAX7219_Init:
   371     0000                     ??_Adc_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0000                     ??_Dio_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0000                     ??_Gpio_Init:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0000                     ??_SPI_Init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0000                     ??___wmul:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0000                     ??___lwdiv:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0000                     ??___lwmod:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           	psect	cstackBANK0
   394     0020                     __pcstackBANK0:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0020                     ?_MAX7219_Init:
   398     0020                     ?_MAX7219_ClearDisplay:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0020                     ?_Adc_Init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     ?_Adc_StartConversion:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0020                     ?_Dio_Pin_Read:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0020                     ?_Dio_init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ?_Gpio_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     ?_SPI_Init:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0020                     ?_ISR:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0020                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0020                     ??_Dio_Pin_Read:	
   426                           ; 2 bytes @ 0x0
   427                           
   428                           
   429                           ; 1 bytes @ 0x0
   430     0020                     	ds	1
   431     0021                     Dio_Pin_Read@pinNumber:
   432                           
   433                           ; 1 bytes @ 0x1
   434     0021                     	ds	1
   435     0022                     ??_ISR:
   436                           
   437                           ; 1 bytes @ 0x2
   438     0022                     	ds	3
   439     0025                     ISR@i:
   440                           
   441                           ; 2 bytes @ 0x5
   442     0025                     	ds	2
   443     0027                     ?_Dio_Pin_Write:
   444     0027                     ?_Dio_Config:	
   445                           ; 1 bytes @ 0x7
   446                           
   447     0027                     ?_Adc_ReadResult:	
   448                           ; 1 bytes @ 0x7
   449                           
   450     0027                     Dio_Pin_Write@state:	
   451                           ; 2 bytes @ 0x7
   452                           
   453     0027                     Dio_Config@direction:	
   454                           ; 1 bytes @ 0x7
   455                           
   456     0027                     ??_Adc_StartConversion:	
   457                           ; 1 bytes @ 0x7
   458                           
   459                           
   460                           ; 1 bytes @ 0x7
   461     0027                     	ds	1
   462     0028                     Adc_StartConversion@channel:
   463     0028                     Dio_Config@state:	
   464                           ; 1 bytes @ 0x8
   465                           
   466     0028                     ??_Dio_Pin_Write:	
   467                           ; 1 bytes @ 0x8
   468                           
   469                           
   470                           ; 1 bytes @ 0x8
   471     0028                     	ds	1
   472     0029                     Dio_Pin_Write@pinNumber:
   473     0029                     Dio_Config@pullType:	
   474                           ; 1 bytes @ 0x9
   475                           
   476     0029                     ??_Adc_ReadResult:	
   477                           ; 1 bytes @ 0x9
   478                           
   479                           
   480                           ; 1 bytes @ 0x9
   481     0029                     	ds	1
   482     002A                     ?_SPI_Send_16bit:
   483     002A                     SPI_Send_16bit@data:	
   484                           ; 1 bytes @ 0xA
   485                           
   486     002A                     ??_Dio_Config:	
   487                           ; 2 bytes @ 0xA
   488                           
   489                           
   490                           ; 1 bytes @ 0xA
   491     002A                     	ds	2
   492     002C                     ??_SPI_Send_16bit:
   493                           
   494                           ; 1 bytes @ 0xC
   495     002C                     	ds	2
   496     002E                     _Dio_Config$75:
   497                           
   498                           ; 2 bytes @ 0xE
   499     002E                     	ds	2
   500     0030                     ?___lwdiv:
   501     0030                     Dio_Config@pinNumber:	
   502                           ; 2 bytes @ 0x10
   503                           
   504     0030                     ___lwdiv@divisor:	
   505                           ; 1 bytes @ 0x10
   506                           
   507                           
   508                           ; 2 bytes @ 0x10
   509     0030                     	ds	1
   510     0031                     SPI_Send_16bit@bit:
   511                           
   512                           ; 2 bytes @ 0x11
   513     0031                     	ds	1
   514     0032                     ___lwdiv@dividend:
   515                           
   516                           ; 2 bytes @ 0x12
   517     0032                     	ds	1
   518     0033                     ??_MAX7219_ClearDisplay:
   519                           
   520                           ; 1 bytes @ 0x13
   521     0033                     	ds	1
   522     0034                     ___lwdiv@quotient:
   523                           
   524                           ; 2 bytes @ 0x14
   525     0034                     	ds	1
   526     0035                     MAX7219_ClearDisplay@i:
   527                           
   528                           ; 1 bytes @ 0x15
   529     0035                     	ds	1
   530     0036                     ___lwdiv@counter:
   531                           
   532                           ; 1 bytes @ 0x16
   533     0036                     	ds	1
   534     0037                     ?___wmul:
   535     0037                     ?___lwmod:	
   536                           ; 2 bytes @ 0x17
   537                           
   538     0037                     ___wmul@multiplier:	
   539                           ; 2 bytes @ 0x17
   540                           
   541     0037                     ___lwmod@divisor:	
   542                           ; 2 bytes @ 0x17
   543                           
   544                           
   545                           ; 2 bytes @ 0x17
   546     0037                     	ds	2
   547     0039                     ___wmul@multiplicand:
   548     0039                     ___lwmod@dividend:	
   549                           ; 2 bytes @ 0x19
   550                           
   551                           
   552                           ; 2 bytes @ 0x19
   553     0039                     	ds	2
   554     003B                     ___lwmod@counter:
   555     003B                     ___wmul@product:	
   556                           ; 1 bytes @ 0x1B
   557                           
   558                           
   559                           ; 2 bytes @ 0x1B
   560     003B                     	ds	1
   561     003C                     ?_MAX7219_DisplayData:
   562     003C                     MAX7219_DisplayData@character:	
   563                           ; 1 bytes @ 0x1C
   564                           
   565                           
   566                           ; 1 bytes @ 0x1C
   567     003C                     	ds	1
   568     003D                     ??_MAX7219_DisplayData:
   569                           
   570                           ; 1 bytes @ 0x1D
   571     003D                     	ds	4
   572     0041                     MAX7219_DisplayData@digit:
   573                           
   574                           ; 1 bytes @ 0x21
   575     0041                     	ds	1
   576     0042                     ??_main:
   577                           
   578                           ; 1 bytes @ 0x22
   579     0042                     	ds	2
   580     0044                     _main$782:
   581                           
   582                           ; 2 bytes @ 0x24
   583     0044                     	ds	2
   584     0046                     _main$783:
   585                           
   586                           ; 2 bytes @ 0x26
   587     0046                     	ds	2
   588     0048                     main@i:
   589                           
   590                           ; 1 bytes @ 0x28
   591     0048                     	ds	1
   592                           
   593                           	psect	maintext
   594     0014                     __pmaintext:	
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 31 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  i               1   40[BANK0 ] unsigned char 
   605 ;; Return value:  Size  Location     Type
   606 ;;                  2  167[None  ] int 
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : B00/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0
   614 ;;      Params:         0       0
   615 ;;      Locals:         0       5
   616 ;;      Temps:          0       2
   617 ;;      Totals:         0       7
   618 ;;Total ram usage:        7 bytes
   619 ;; Hardware stack levels required when called: 5
   620 ;; This function calls:
   621 ;;		_Adc_Init
   622 ;;		_Adc_ReadResult
   623 ;;		_Adc_StartConversion
   624 ;;		_Dio_Pin_Write
   625 ;;		_Dio_init
   626 ;;		_Gpio_Init
   627 ;;		_MAX7219_ClearDisplay
   628 ;;		_MAX7219_DisplayData
   629 ;;		_MAX7219_Init
   630 ;;		_SPI_Init
   631 ;;		___lwdiv
   632 ;;		___lwmod
   633 ;;		___wmul
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639     0014                     _main:	
   640                           ;psect for function _main
   641                           
   642     0014                     l1256:	
   643                           ;incstack = 0
   644                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   645                           
   646                           
   647                           ;main.c: 33:         Gpio_Init();
   648     0014  23A0               	fcall	_Gpio_Init
   649     0015                     l1258:
   650                           
   651                           ;main.c: 34:         Dio_init();
   652     0015  23D4               	fcall	_Dio_init
   653     0016                     l1260:
   654                           
   655                           ;main.c: 35:         Adc_Init();
   656     0016  23E3               	fcall	_Adc_Init
   657                           
   658                           ;main.c: 36:         SPI_Init();
   659     0017  2348               	fcall	_SPI_Init
   660                           
   661                           ;main.c: 37:       MAX7219_Init();
   662     0018  2329               	fcall	_MAX7219_Init
   663     0019                     l1262:
   664                           
   665                           ;main.c: 38:    IOCB |= (1 << 3);
   666     0019  1683               	bsf	3,5	;RP0=1, select bank1
   667     001A  1596               	bsf	22,3	;volatile
   668     001B                     l1264:
   669                           
   670                           ;main.c: 40:     INTCONbits.GIE = 1;
   671     001B  178B               	bsf	11,7	;volatile
   672     001C                     l1266:
   673                           
   674                           ;main.c: 41:     INTCONbits.PEIE = 1;
   675     001C  170B               	bsf	11,6	;volatile
   676     001D                     l1268:
   677                           
   678                           ;main.c: 42:     INTCONbits.GPIE = 1;
   679     001D  158B               	bsf	11,3	;volatile
   680     001E  291F               	goto	l1322
   681     001F                     l1270:
   682                           
   683                           ;main.c: 47:             Adc_StartConversion(ADC_CHANNEL_AN0);
   684     001F  3000               	movlw	0
   685     0020  23B3               	fcall	_Adc_StartConversion
   686     0021                     l1272:
   687                           
   688                           ;main.c: 49:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x04,0x1D); MAX7219
      +                          _DisplayData(0x03,0x15);;
   689     0021  2360               	fcall	_MAX7219_ClearDisplay
   690     0022                     l1274:
   691     0022  301D               	movlw	29
   692     0023  1283               	bcf	3,5	;RP0=0, select bank0
   693     0024  00BC               	movwf	MAX7219_DisplayData@character
   694     0025  3004               	movlw	4
   695     0026  238D               	fcall	_MAX7219_DisplayData
   696     0027                     l1276:
   697     0027  3015               	movlw	21
   698     0028  1283               	bcf	3,5	;RP0=0, select bank0
   699     0029  00BC               	movwf	MAX7219_DisplayData@character
   700     002A  3003               	movlw	3
   701     002B  238D               	fcall	_MAX7219_DisplayData
   702     002C                     l1278:
   703                           
   704                           ;main.c: 52:             for(uint8 i=0; (i<100)&&DispenserOn;i++ )
   705     002C  1283               	bcf	3,5	;RP0=0, select bank0
   706     002D  01C8               	clrf	main@i
   707     002E  283B               	goto	l1284
   708     002F                     l1280:
   709                           
   710                           ;main.c: 53:                 {_delay((unsigned long)((10)*(4000000/4000.0)));}
   711     002F  300D               	movlw	13
   712     0030  00C3               	movwf	??_main+1
   713     0031  30FB               	movlw	251
   714     0032  00C2               	movwf	??_main
   715     0033                     u1077:
   716     0033  0BC2               	decfsz	??_main,f
   717     0034  2833               	goto	u1077
   718     0035  0BC3               	decfsz	??_main+1,f
   719     0036  2833               	goto	u1077
   720     0037  2838               	nop2
   721     0038                     l1282:
   722     0038  3001               	movlw	1
   723     0039  1283               	bcf	3,5	;RP0=0, select bank0
   724     003A  07C8               	addwf	main@i,f
   725     003B                     l1284:
   726     003B  3064               	movlw	100
   727     003C  0248               	subwf	main@i,w
   728     003D  1803               	skipnc
   729     003E  2840               	goto	u971
   730     003F  2841               	goto	u970
   731     0040                     u971:
   732     0040  2846               	goto	l1288
   733     0041                     u970:
   734     0041                     l1286:
   735     0041  084B               	movf	_DispenserOn,w
   736     0042  1D03               	btfss	3,2
   737     0043  2845               	goto	u981
   738     0044  2846               	goto	u980
   739     0045                     u981:
   740     0045  282F               	goto	l1280
   741     0046                     u980:
   742     0046                     l1288:
   743                           
   744                           ;main.c: 55:             MAX7219_ClearDisplay();
   745     0046  2360               	fcall	_MAX7219_ClearDisplay
   746     0047                     l1290:
   747                           
   748                           ;main.c: 58:             Dio_Pin_Write (4,1);
   749     0047  1283               	bcf	3,5	;RP0=0, select bank0
   750     0048  01A7               	clrf	Dio_Pin_Write@state
   751     0049  0AA7               	incf	Dio_Pin_Write@state,f
   752     004A  3004               	movlw	4
   753     004B  2307               	fcall	_Dio_Pin_Write
   754     004C                     l1292:
   755                           
   756                           ;main.c: 66:             Counter = 10*(5 + (2*Adc_ReadResult()/1020));
   757     004C  30FC               	movlw	252
   758     004D  1283               	bcf	3,5	;RP0=0, select bank0
   759     004E  00B0               	movwf	___lwdiv@divisor
   760     004F  3003               	movlw	3
   761     0050  00B1               	movwf	___lwdiv@divisor+1
   762     0051  22B0               	fcall	_Adc_ReadResult
   763     0052  1003               	clrc
   764     0053  1283               	bcf	3,5	;RP0=0, select bank0
   765     0054  0D27               	rlf	?_Adc_ReadResult,w
   766     0055  00B2               	movwf	___lwdiv@dividend
   767     0056  0D28               	rlf	?_Adc_ReadResult+1,w
   768     0057  00B3               	movwf	___lwdiv@dividend+1
   769     0058  21FF               	fcall	___lwdiv
   770     0059  1283               	bcf	3,5	;RP0=0, select bank0
   771     005A  0830               	movf	?___lwdiv,w
   772     005B  3E05               	addlw	5
   773     005C  00B7               	movwf	___wmul@multiplier
   774     005D  0831               	movf	?___lwdiv+1,w
   775     005E  1803               	skipnc
   776     005F  3E01               	addlw	1
   777     0060  3E00               	addlw	0
   778     0061  00B8               	movwf	___wmul@multiplier+1
   779     0062  300A               	movlw	10
   780     0063  00B9               	movwf	___wmul@multiplicand
   781     0064  3000               	movlw	0
   782     0065  00BA               	movwf	___wmul@multiplicand+1
   783     0066  22E1               	fcall	___wmul
   784     0067  1283               	bcf	3,5	;RP0=0, select bank0
   785     0068  0838               	movf	?___wmul+1,w
   786     0069  00CA               	movwf	_Counter+1
   787     006A  0837               	movf	?___wmul,w
   788     006B  00C9               	movwf	_Counter
   789                           
   790                           ;main.c: 68:             for(;(Counter>0)&&DispenserOn;Counter--){
   791     006C  28FF               	goto	l1306
   792     006D                     l1294:
   793                           
   794                           ;main.c: 69:                 MAX7219_DisplayData(0x04, MAX7219_No_Table[Counter/6000]);
   795     006D  3070               	movlw	112
   796     006E  00B0               	movwf	___lwdiv@divisor
   797     006F  3017               	movlw	23
   798     0070  00B1               	movwf	___lwdiv@divisor+1
   799     0071  084A               	movf	_Counter+1,w
   800     0072  00B3               	movwf	___lwdiv@dividend+1
   801     0073  0849               	movf	_Counter,w
   802     0074  00B2               	movwf	___lwdiv@dividend
   803     0075  21FF               	fcall	___lwdiv
   804     0076  1283               	bcf	3,5	;RP0=0, select bank0
   805     0077  0830               	movf	?___lwdiv,w
   806     0078  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   807     0079  0084               	movwf	4
   808     007A  23C4               	fcall	stringdir
   809     007B  00BC               	movwf	MAX7219_DisplayData@character
   810     007C  3004               	movlw	4
   811     007D  238D               	fcall	_MAX7219_DisplayData
   812                           
   813                           ;main.c: 70:                 MAX7219_DisplayData(0x03, MAX7219_No_Table[(Counter/600)%10
      +                          ]);
   814     007E  300A               	movlw	10
   815     007F  1283               	bcf	3,5	;RP0=0, select bank0
   816     0080  00B7               	movwf	___lwmod@divisor
   817     0081  3000               	movlw	0
   818     0082  00B8               	movwf	___lwmod@divisor+1
   819     0083  3058               	movlw	88
   820     0084  00B0               	movwf	___lwdiv@divisor
   821     0085  3002               	movlw	2
   822     0086  00B1               	movwf	___lwdiv@divisor+1
   823     0087  084A               	movf	_Counter+1,w
   824     0088  00B3               	movwf	___lwdiv@dividend+1
   825     0089  0849               	movf	_Counter,w
   826     008A  00B2               	movwf	___lwdiv@dividend
   827     008B  21FF               	fcall	___lwdiv
   828     008C  1283               	bcf	3,5	;RP0=0, select bank0
   829     008D  0831               	movf	?___lwdiv+1,w
   830     008E  00BA               	movwf	___lwmod@dividend+1
   831     008F  0830               	movf	?___lwdiv,w
   832     0090  00B9               	movwf	___lwmod@dividend
   833     0091  2242               	fcall	___lwmod
   834     0092  1283               	bcf	3,5	;RP0=0, select bank0
   835     0093  0837               	movf	?___lwmod,w
   836     0094  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   837     0095  0084               	movwf	4
   838     0096  23C4               	fcall	stringdir
   839     0097  00BC               	movwf	MAX7219_DisplayData@character
   840     0098  3003               	movlw	3
   841     0099  238D               	fcall	_MAX7219_DisplayData
   842     009A                     l1296:
   843                           
   844                           ;main.c: 71:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[((Counter/10)%60
      +                          )/10]);
   845     009A  300A               	movlw	10
   846     009B  1283               	bcf	3,5	;RP0=0, select bank0
   847     009C  00B0               	movwf	___lwdiv@divisor
   848     009D  3000               	movlw	0
   849     009E  00B1               	movwf	___lwdiv@divisor+1
   850     009F  084A               	movf	_Counter+1,w
   851     00A0  00B3               	movwf	___lwdiv@dividend+1
   852     00A1  0849               	movf	_Counter,w
   853     00A2  00B2               	movwf	___lwdiv@dividend
   854     00A3  21FF               	fcall	___lwdiv
   855     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   856     00A5  0831               	movf	?___lwdiv+1,w
   857     00A6  00BA               	movwf	___lwmod@dividend+1
   858     00A7  0830               	movf	?___lwdiv,w
   859     00A8  00B9               	movwf	___lwmod@dividend
   860     00A9  303C               	movlw	60
   861     00AA  00B7               	movwf	___lwmod@divisor
   862     00AB  3000               	movlw	0
   863     00AC  00B8               	movwf	___lwmod@divisor+1
   864     00AD  2242               	fcall	___lwmod
   865     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   866     00AF  0838               	movf	?___lwmod+1,w
   867     00B0  00C5               	movwf	_main$782+1
   868     00B1  0837               	movf	?___lwmod,w
   869     00B2  00C4               	movwf	_main$782
   870     00B3                     l1298:
   871                           
   872                           ;main.c: 71:                 MAX7219_DisplayData(0x02, MAX7219_No_Table[((Counter/10)%60
      +                          )/10]);
   873     00B3  300A               	movlw	10
   874     00B4  00B0               	movwf	___lwdiv@divisor
   875     00B5  3000               	movlw	0
   876     00B6  00B1               	movwf	___lwdiv@divisor+1
   877     00B7  0845               	movf	_main$782+1,w
   878     00B8  00B3               	movwf	___lwdiv@dividend+1
   879     00B9  0844               	movf	_main$782,w
   880     00BA  00B2               	movwf	___lwdiv@dividend
   881     00BB  21FF               	fcall	___lwdiv
   882     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   883     00BD  0830               	movf	?___lwdiv,w
   884     00BE  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   885     00BF  0084               	movwf	4
   886     00C0  23C4               	fcall	stringdir
   887     00C1  00BC               	movwf	MAX7219_DisplayData@character
   888     00C2  3002               	movlw	2
   889     00C3  238D               	fcall	_MAX7219_DisplayData
   890                           
   891                           ;main.c: 72:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[((Counter/10)%60
      +                          )%10]);
   892     00C4  300A               	movlw	10
   893     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   894     00C6  00B0               	movwf	___lwdiv@divisor
   895     00C7  3000               	movlw	0
   896     00C8  00B1               	movwf	___lwdiv@divisor+1
   897     00C9  084A               	movf	_Counter+1,w
   898     00CA  00B3               	movwf	___lwdiv@dividend+1
   899     00CB  0849               	movf	_Counter,w
   900     00CC  00B2               	movwf	___lwdiv@dividend
   901     00CD  21FF               	fcall	___lwdiv
   902     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   903     00CF  0831               	movf	?___lwdiv+1,w
   904     00D0  00BA               	movwf	___lwmod@dividend+1
   905     00D1  0830               	movf	?___lwdiv,w
   906     00D2  00B9               	movwf	___lwmod@dividend
   907     00D3  303C               	movlw	60
   908     00D4  00B7               	movwf	___lwmod@divisor
   909     00D5  3000               	movlw	0
   910     00D6  00B8               	movwf	___lwmod@divisor+1
   911     00D7  2242               	fcall	___lwmod
   912     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   913     00D9  0838               	movf	?___lwmod+1,w
   914     00DA  00C7               	movwf	_main$783+1
   915     00DB  0837               	movf	?___lwmod,w
   916     00DC  00C6               	movwf	_main$783
   917     00DD                     l1300:
   918                           
   919                           ;main.c: 72:                 MAX7219_DisplayData(0x01, MAX7219_No_Table[((Counter/10)%60
      +                          )%10]);
   920     00DD  300A               	movlw	10
   921     00DE  00B7               	movwf	___lwmod@divisor
   922     00DF  3000               	movlw	0
   923     00E0  00B8               	movwf	___lwmod@divisor+1
   924     00E1  0847               	movf	_main$783+1,w
   925     00E2  00BA               	movwf	___lwmod@dividend+1
   926     00E3  0846               	movf	_main$783,w
   927     00E4  00B9               	movwf	___lwmod@dividend
   928     00E5  2242               	fcall	___lwmod
   929     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   930     00E7  0837               	movf	?___lwmod,w
   931     00E8  3E01               	addlw	low ((_MAX7219_No_Table-__stringbase)| (0+32768))
   932     00E9  0084               	movwf	4
   933     00EA  23C4               	fcall	stringdir
   934     00EB  00BC               	movwf	MAX7219_DisplayData@character
   935     00EC  3001               	movlw	1
   936     00ED  238D               	fcall	_MAX7219_DisplayData
   937     00EE                     l1302:
   938                           
   939                           ;main.c: 73:                 _delay((unsigned long)((98)*(4000000/4000.0)));
   940     00EE  3080               	movlw	128
   941     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   942     00F0  00C3               	movwf	??_main+1
   943     00F1  3044               	movlw	68
   944     00F2  00C2               	movwf	??_main
   945     00F3                     u1087:
   946     00F3  0BC2               	decfsz	??_main,f
   947     00F4  28F3               	goto	u1087
   948     00F5  0BC3               	decfsz	??_main+1,f
   949     00F6  28F3               	goto	u1087
   950     00F7  0000               	nop
   951     00F8                     l1304:
   952                           
   953                           ;main.c: 74:             }
   954     00F8  3001               	movlw	1
   955     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   956     00FA  02C9               	subwf	_Counter,f
   957     00FB  3000               	movlw	0
   958     00FC  1C03               	skipc
   959     00FD  03CA               	decf	_Counter+1,f
   960     00FE  02CA               	subwf	_Counter+1,f
   961     00FF                     l1306:
   962     00FF  0849               	movf	_Counter,w
   963     0100  044A               	iorwf	_Counter+1,w
   964     0101  1903               	btfsc	3,2
   965     0102  2904               	goto	u991
   966     0103  2905               	goto	u990
   967     0104                     u991:
   968     0104  290A               	goto	l1310
   969     0105                     u990:
   970     0105                     l1308:
   971     0105  084B               	movf	_DispenserOn,w
   972     0106  1D03               	btfss	3,2
   973     0107  2909               	goto	u1001
   974     0108  290A               	goto	u1000
   975     0109                     u1001:
   976     0109  286D               	goto	l1294
   977     010A                     u1000:
   978     010A                     l1310:
   979                           
   980                           ;main.c: 75:             Dio_Pin_Write (4, 0);
   981     010A  01A7               	clrf	Dio_Pin_Write@state
   982     010B  3004               	movlw	4
   983     010C  2307               	fcall	_Dio_Pin_Write
   984     010D                     l1312:
   985                           
   986                           ;main.c: 76:             DispenserOn=0;
   987     010D  1283               	bcf	3,5	;RP0=0, select bank0
   988     010E  01CB               	clrf	_DispenserOn
   989     010F                     l1314:
   990                           
   991                           ;main.c: 77:             MAX7219_ClearDisplay(); MAX7219_DisplayData(0x05,0x1D); MAX7219
      +                          _DisplayData(0x04,0x47); MAX7219_DisplayData(0x03,0x47);;
   992     010F  2360               	fcall	_MAX7219_ClearDisplay
   993     0110                     l1316:
   994     0110  301D               	movlw	29
   995     0111  1283               	bcf	3,5	;RP0=0, select bank0
   996     0112  00BC               	movwf	MAX7219_DisplayData@character
   997     0113  3005               	movlw	5
   998     0114  238D               	fcall	_MAX7219_DisplayData
   999     0115                     l1318:
  1000     0115  3047               	movlw	71
  1001     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1002     0117  00BC               	movwf	MAX7219_DisplayData@character
  1003     0118  3004               	movlw	4
  1004     0119  238D               	fcall	_MAX7219_DisplayData
  1005     011A                     l1320:
  1006     011A  3047               	movlw	71
  1007     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1008     011C  00BC               	movwf	MAX7219_DisplayData@character
  1009     011D  3003               	movlw	3
  1010     011E  238D               	fcall	_MAX7219_DisplayData
  1011     011F                     l1322:
  1012                           
  1013                           ;main.c: 46:         while(DispenserOn){
  1014     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0120  084B               	movf	_DispenserOn,w
  1016     0121  1D03               	btfss	3,2
  1017     0122  2924               	goto	u1011
  1018     0123  2925               	goto	u1010
  1019     0124                     u1011:
  1020     0124  281F               	goto	l1270
  1021     0125                     u1010:
  1022     0125  291F               	goto	l1322
  1023     0126  280B               	ljmp	start
  1024     0127                     __end_of_main:
  1025                           
  1026                           	psect	text1
  1027     02E1                     __ptext1:	
  1028 ;; *************** function ___wmul *****************
  1029 ;; Defined at:
  1030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  multiplier      2   23[BANK0 ] unsigned int 
  1033 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  product         2   27[BANK0 ] unsigned int 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   23[BANK0 ] unsigned int 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0
  1045 ;;      Params:         0       4
  1046 ;;      Locals:         0       2
  1047 ;;      Temps:          0       0
  1048 ;;      Totals:         0       6
  1049 ;;Total ram usage:        6 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059     02E1                     ___wmul:	
  1060                           ;psect for function ___wmul
  1061                           
  1062     02E1                     l1180:	
  1063                           ;incstack = 0
  1064                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1065                           
  1066     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1067     02E2  01BB               	clrf	___wmul@product
  1068     02E3  01BC               	clrf	___wmul@product+1
  1069     02E4                     l1182:
  1070     02E4  1C37               	btfss	___wmul@multiplier,0
  1071     02E5  2AE7               	goto	u771
  1072     02E6  2AE8               	goto	u770
  1073     02E7                     u771:
  1074     02E7  2AEE               	goto	l280
  1075     02E8                     u770:
  1076     02E8                     l1184:
  1077     02E8  0839               	movf	___wmul@multiplicand,w
  1078     02E9  07BB               	addwf	___wmul@product,f
  1079     02EA  1803               	skipnc
  1080     02EB  0ABC               	incf	___wmul@product+1,f
  1081     02EC  083A               	movf	___wmul@multiplicand+1,w
  1082     02ED  07BC               	addwf	___wmul@product+1,f
  1083     02EE                     l280:
  1084     02EE  3001               	movlw	1
  1085     02EF                     u785:
  1086     02EF  1003               	clrc
  1087     02F0  0DB9               	rlf	___wmul@multiplicand,f
  1088     02F1  0DBA               	rlf	___wmul@multiplicand+1,f
  1089     02F2  3EFF               	addlw	-1
  1090     02F3  1D03               	skipz
  1091     02F4  2AEF               	goto	u785
  1092     02F5                     l1186:
  1093     02F5  3001               	movlw	1
  1094     02F6                     u795:
  1095     02F6  1003               	clrc
  1096     02F7  0CB8               	rrf	___wmul@multiplier+1,f
  1097     02F8  0CB7               	rrf	___wmul@multiplier,f
  1098     02F9  3EFF               	addlw	-1
  1099     02FA  1D03               	skipz
  1100     02FB  2AF6               	goto	u795
  1101     02FC                     l1188:
  1102     02FC  0837               	movf	___wmul@multiplier,w
  1103     02FD  0438               	iorwf	___wmul@multiplier+1,w
  1104     02FE  1D03               	btfss	3,2
  1105     02FF  2B01               	goto	u801
  1106     0300  2B02               	goto	u800
  1107     0301                     u801:
  1108     0301  2AE4               	goto	l1182
  1109     0302                     u800:
  1110     0302                     l1190:
  1111     0302  083C               	movf	___wmul@product+1,w
  1112     0303  00B8               	movwf	?___wmul+1
  1113     0304  083B               	movf	___wmul@product,w
  1114     0305  00B7               	movwf	?___wmul
  1115     0306                     l282:
  1116     0306  0008               	return
  1117     0307                     __end_of___wmul:
  1118                           
  1119                           	psect	text2
  1120     0242                     __ptext2:	
  1121 ;; *************** function ___lwmod *****************
  1122 ;; Defined at:
  1123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  divisor         2   23[BANK0 ] unsigned int 
  1126 ;;  dividend        2   25[BANK0 ] unsigned int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  counter         1   27[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2   23[BANK0 ] unsigned int 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0
  1138 ;;      Params:         0       4
  1139 ;;      Locals:         0       1
  1140 ;;      Temps:          0       0
  1141 ;;      Totals:         0       5
  1142 ;;Total ram usage:        5 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 2
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152     0242                     ___lwmod:	
  1153                           ;psect for function ___lwmod
  1154                           
  1155     0242                     l1220:	
  1156                           ;incstack = 0
  1157                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1158                           
  1159     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1160     0243  0837               	movf	___lwmod@divisor,w
  1161     0244  0438               	iorwf	___lwmod@divisor+1,w
  1162     0245  1903               	btfsc	3,2
  1163     0246  2A48               	goto	u881
  1164     0247  2A49               	goto	u880
  1165     0248                     u881:
  1166     0248  2A76               	goto	l1238
  1167     0249                     u880:
  1168     0249                     l1222:
  1169     0249  3001               	movlw	1
  1170     024A  00BB               	movwf	___lwmod@counter
  1171     024B  2A55               	goto	l1228
  1172     024C                     l1224:
  1173     024C  3001               	movlw	1
  1174     024D                     u895:
  1175     024D  1003               	clrc
  1176     024E  0DB7               	rlf	___lwmod@divisor,f
  1177     024F  0DB8               	rlf	___lwmod@divisor+1,f
  1178     0250  3EFF               	addlw	-1
  1179     0251  1D03               	skipz
  1180     0252  2A4D               	goto	u895
  1181     0253                     l1226:
  1182     0253  3001               	movlw	1
  1183     0254  07BB               	addwf	___lwmod@counter,f
  1184     0255                     l1228:
  1185     0255  1FB8               	btfss	___lwmod@divisor+1,7
  1186     0256  2A58               	goto	u901
  1187     0257  2A59               	goto	u900
  1188     0258                     u901:
  1189     0258  2A4C               	goto	l1224
  1190     0259                     u900:
  1191     0259                     l1230:
  1192     0259  0838               	movf	___lwmod@divisor+1,w
  1193     025A  023A               	subwf	___lwmod@dividend+1,w
  1194     025B  1D03               	skipz
  1195     025C  2A5F               	goto	u915
  1196     025D  0837               	movf	___lwmod@divisor,w
  1197     025E  0239               	subwf	___lwmod@dividend,w
  1198     025F                     u915:
  1199     025F  1C03               	skipc
  1200     0260  2A62               	goto	u911
  1201     0261  2A63               	goto	u910
  1202     0262                     u911:
  1203     0262  2A69               	goto	l1234
  1204     0263                     u910:
  1205     0263                     l1232:
  1206     0263  0837               	movf	___lwmod@divisor,w
  1207     0264  02B9               	subwf	___lwmod@dividend,f
  1208     0265  0838               	movf	___lwmod@divisor+1,w
  1209     0266  1C03               	skipc
  1210     0267  03BA               	decf	___lwmod@dividend+1,f
  1211     0268  02BA               	subwf	___lwmod@dividend+1,f
  1212     0269                     l1234:
  1213     0269  3001               	movlw	1
  1214     026A                     u925:
  1215     026A  1003               	clrc
  1216     026B  0CB8               	rrf	___lwmod@divisor+1,f
  1217     026C  0CB7               	rrf	___lwmod@divisor,f
  1218     026D  3EFF               	addlw	-1
  1219     026E  1D03               	skipz
  1220     026F  2A6A               	goto	u925
  1221     0270                     l1236:
  1222     0270  3001               	movlw	1
  1223     0271  02BB               	subwf	___lwmod@counter,f
  1224     0272  1D03               	btfss	3,2
  1225     0273  2A75               	goto	u931
  1226     0274  2A76               	goto	u930
  1227     0275                     u931:
  1228     0275  2A59               	goto	l1230
  1229     0276                     u930:
  1230     0276                     l1238:
  1231     0276  083A               	movf	___lwmod@dividend+1,w
  1232     0277  00B8               	movwf	?___lwmod+1
  1233     0278  0839               	movf	___lwmod@dividend,w
  1234     0279  00B7               	movwf	?___lwmod
  1235     027A                     l570:
  1236     027A  0008               	return
  1237     027B                     __end_of___lwmod:
  1238                           
  1239                           	psect	text3
  1240     01FF                     __ptext3:	
  1241 ;; *************** function ___lwdiv *****************
  1242 ;; Defined at:
  1243 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  divisor         2   16[BANK0 ] unsigned int 
  1246 ;;  dividend        2   18[BANK0 ] unsigned int 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  quotient        2   20[BANK0 ] unsigned int 
  1249 ;;  counter         1   22[BANK0 ] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2   16[BANK0 ] unsigned int 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0
  1259 ;;      Params:         0       4
  1260 ;;      Locals:         0       3
  1261 ;;      Temps:          0       0
  1262 ;;      Totals:         0       7
  1263 ;;Total ram usage:        7 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 2
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     01FF                     ___lwdiv:	
  1274                           ;psect for function ___lwdiv
  1275                           
  1276     01FF                     l1194:	
  1277                           ;incstack = 0
  1278                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1279                           
  1280     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1281     0200  01B4               	clrf	___lwdiv@quotient
  1282     0201  01B5               	clrf	___lwdiv@quotient+1
  1283     0202                     l1196:
  1284     0202  0830               	movf	___lwdiv@divisor,w
  1285     0203  0431               	iorwf	___lwdiv@divisor+1,w
  1286     0204  1903               	btfsc	3,2
  1287     0205  2A07               	goto	u811
  1288     0206  2A08               	goto	u810
  1289     0207                     u811:
  1290     0207  2A3D               	goto	l1216
  1291     0208                     u810:
  1292     0208                     l1198:
  1293     0208  3001               	movlw	1
  1294     0209  00B6               	movwf	___lwdiv@counter
  1295     020A  2A14               	goto	l1204
  1296     020B                     l1200:
  1297     020B  3001               	movlw	1
  1298     020C                     u825:
  1299     020C  1003               	clrc
  1300     020D  0DB0               	rlf	___lwdiv@divisor,f
  1301     020E  0DB1               	rlf	___lwdiv@divisor+1,f
  1302     020F  3EFF               	addlw	-1
  1303     0210  1D03               	skipz
  1304     0211  2A0C               	goto	u825
  1305     0212                     l1202:
  1306     0212  3001               	movlw	1
  1307     0213  07B6               	addwf	___lwdiv@counter,f
  1308     0214                     l1204:
  1309     0214  1FB1               	btfss	___lwdiv@divisor+1,7
  1310     0215  2A17               	goto	u831
  1311     0216  2A18               	goto	u830
  1312     0217                     u831:
  1313     0217  2A0B               	goto	l1200
  1314     0218                     u830:
  1315     0218                     l1206:
  1316     0218  3001               	movlw	1
  1317     0219                     u845:
  1318     0219  1003               	clrc
  1319     021A  0DB4               	rlf	___lwdiv@quotient,f
  1320     021B  0DB5               	rlf	___lwdiv@quotient+1,f
  1321     021C  3EFF               	addlw	-1
  1322     021D  1D03               	skipz
  1323     021E  2A19               	goto	u845
  1324     021F  0831               	movf	___lwdiv@divisor+1,w
  1325     0220  0233               	subwf	___lwdiv@dividend+1,w
  1326     0221  1D03               	skipz
  1327     0222  2A25               	goto	u855
  1328     0223  0830               	movf	___lwdiv@divisor,w
  1329     0224  0232               	subwf	___lwdiv@dividend,w
  1330     0225                     u855:
  1331     0225  1C03               	skipc
  1332     0226  2A28               	goto	u851
  1333     0227  2A29               	goto	u850
  1334     0228                     u851:
  1335     0228  2A30               	goto	l1212
  1336     0229                     u850:
  1337     0229                     l1208:
  1338     0229  0830               	movf	___lwdiv@divisor,w
  1339     022A  02B2               	subwf	___lwdiv@dividend,f
  1340     022B  0831               	movf	___lwdiv@divisor+1,w
  1341     022C  1C03               	skipc
  1342     022D  03B3               	decf	___lwdiv@dividend+1,f
  1343     022E  02B3               	subwf	___lwdiv@dividend+1,f
  1344     022F                     l1210:
  1345     022F  1434               	bsf	___lwdiv@quotient,0
  1346     0230                     l1212:
  1347     0230  3001               	movlw	1
  1348     0231                     u865:
  1349     0231  1003               	clrc
  1350     0232  0CB1               	rrf	___lwdiv@divisor+1,f
  1351     0233  0CB0               	rrf	___lwdiv@divisor,f
  1352     0234  3EFF               	addlw	-1
  1353     0235  1D03               	skipz
  1354     0236  2A31               	goto	u865
  1355     0237                     l1214:
  1356     0237  3001               	movlw	1
  1357     0238  02B6               	subwf	___lwdiv@counter,f
  1358     0239  1D03               	btfss	3,2
  1359     023A  2A3C               	goto	u871
  1360     023B  2A3D               	goto	u870
  1361     023C                     u871:
  1362     023C  2A18               	goto	l1206
  1363     023D                     u870:
  1364     023D                     l1216:
  1365     023D  0835               	movf	___lwdiv@quotient+1,w
  1366     023E  00B1               	movwf	?___lwdiv+1
  1367     023F  0834               	movf	___lwdiv@quotient,w
  1368     0240  00B0               	movwf	?___lwdiv
  1369     0241                     l560:
  1370     0241  0008               	return
  1371     0242                     __end_of___lwdiv:
  1372                           
  1373                           	psect	text4
  1374     0348                     __ptext4:	
  1375 ;; *************** function _SPI_Init *****************
  1376 ;; Defined at:
  1377 ;;		line 12 in file "SERVICE/scr/Spi.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0
  1391 ;;      Params:         0       0
  1392 ;;      Locals:         0       0
  1393 ;;      Temps:          0       0
  1394 ;;      Totals:         0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 3
  1398 ;; This function calls:
  1399 ;;		_Dio_Config
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405     0348                     _SPI_Init:	
  1406                           ;psect for function _SPI_Init
  1407                           
  1408     0348                     l1178:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1411                           
  1412                           
  1413                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
  1414     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0349  01A7               	clrf	Dio_Config@direction
  1416     034A  0AA7               	incf	Dio_Config@direction,f
  1417     034B  01A8               	clrf	Dio_Config@state
  1418     034C  0AA8               	incf	Dio_Config@state,f
  1419     034D  01A9               	clrf	Dio_Config@pullType
  1420     034E  3001               	movlw	1
  1421     034F  2127               	fcall	_Dio_Config
  1422                           
  1423                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
  1424     0350  1283               	bcf	3,5	;RP0=0, select bank0
  1425     0351  01A7               	clrf	Dio_Config@direction
  1426     0352  0AA7               	incf	Dio_Config@direction,f
  1427     0353  01A8               	clrf	Dio_Config@state
  1428     0354  01A9               	clrf	Dio_Config@pullType
  1429     0355  3002               	movlw	2
  1430     0356  2127               	fcall	_Dio_Config
  1431                           
  1432                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
  1433     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1434     0358  01A7               	clrf	Dio_Config@direction
  1435     0359  0AA7               	incf	Dio_Config@direction,f
  1436     035A  01A8               	clrf	Dio_Config@state
  1437     035B  0AA8               	incf	Dio_Config@state,f
  1438     035C  01A9               	clrf	Dio_Config@pullType
  1439     035D  3005               	movlw	5
  1440     035E  2127               	fcall	_Dio_Config
  1441     035F                     l122:
  1442     035F  0008               	return
  1443     0360                     __end_of_SPI_Init:
  1444                           
  1445                           	psect	text5
  1446     0329                     __ptext5:	
  1447 ;; *************** function _MAX7219_Init *****************
  1448 ;; Defined at:
  1449 ;;		line 8 in file "HAL/scr/max7219.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0
  1463 ;;      Params:         0       0
  1464 ;;      Locals:         0       0
  1465 ;;      Temps:          0       0
  1466 ;;      Totals:         0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 4
  1470 ;; This function calls:
  1471 ;;		_SPI_Send_16bit
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477     0329                     _MAX7219_Init:	
  1478                           ;psect for function _MAX7219_Init
  1479                           
  1480     0329                     l1094:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1483                           
  1484                           
  1485                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
  1486     0329  3000               	movlw	0
  1487     032A  1283               	bcf	3,5	;RP0=0, select bank0
  1488     032B  00AA               	movwf	SPI_Send_16bit@data
  1489     032C  3009               	movlw	9
  1490     032D  00AB               	movwf	SPI_Send_16bit@data+1
  1491     032E  21A6               	fcall	_SPI_Send_16bit
  1492                           
  1493                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
  1494     032F  300F               	movlw	15
  1495     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0331  00AA               	movwf	SPI_Send_16bit@data
  1497     0332  300A               	movlw	10
  1498     0333  00AB               	movwf	SPI_Send_16bit@data+1
  1499     0334  21A6               	fcall	_SPI_Send_16bit
  1500                           
  1501                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
  1502     0335  30F7               	movlw	247
  1503     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0337  00AA               	movwf	SPI_Send_16bit@data
  1505     0338  30FB               	movlw	251
  1506     0339  00AB               	movwf	SPI_Send_16bit@data+1
  1507     033A  21A6               	fcall	_SPI_Send_16bit
  1508                           
  1509                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
  1510     033B  3001               	movlw	1
  1511     033C  1283               	bcf	3,5	;RP0=0, select bank0
  1512     033D  00AA               	movwf	SPI_Send_16bit@data
  1513     033E  300C               	movlw	12
  1514     033F  00AB               	movwf	SPI_Send_16bit@data+1
  1515     0340  21A6               	fcall	_SPI_Send_16bit
  1516                           
  1517                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
  1518     0341  3000               	movlw	0
  1519     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1520     0343  00AA               	movwf	SPI_Send_16bit@data
  1521     0344  300F               	movlw	15
  1522     0345  00AB               	movwf	SPI_Send_16bit@data+1
  1523     0346  21A6               	fcall	_SPI_Send_16bit
  1524     0347                     l9:
  1525     0347  0008               	return
  1526     0348                     __end_of_MAX7219_Init:
  1527                           
  1528                           	psect	text6
  1529     038D                     __ptext6:	
  1530 ;; *************** function _MAX7219_DisplayData *****************
  1531 ;; Defined at:
  1532 ;;		line 26 in file "HAL/scr/max7219.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  digit           1    wreg     unsigned char 
  1535 ;;  character       1   28[BANK0 ] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  digit           1   33[BANK0 ] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0
  1547 ;;      Params:         0       1
  1548 ;;      Locals:         0       1
  1549 ;;      Temps:          0       4
  1550 ;;      Totals:         0       6
  1551 ;;Total ram usage:        6 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 4
  1554 ;; This function calls:
  1555 ;;		_SPI_Send_16bit
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;;		_MAX7219_DisplayNumber
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562     038D                     _MAX7219_DisplayData:	
  1563                           ;psect for function _MAX7219_DisplayData
  1564                           
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _MAX7219_DisplayData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1568                           ;MAX7219_DisplayData@digit stored from wreg
  1569     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1570     038E  00C1               	movwf	MAX7219_DisplayData@digit
  1571     038F                     l1108:
  1572                           
  1573                           ;HAL/scr/max7219.c: 27:     SPI_Send_16bit((digit) << 8 | character);
  1574     038F  083C               	movf	MAX7219_DisplayData@character,w
  1575     0390  00BD               	movwf	??_MAX7219_DisplayData
  1576     0391  01BE               	clrf	??_MAX7219_DisplayData+1
  1577     0392  0841               	movf	MAX7219_DisplayData@digit,w
  1578     0393  00BF               	movwf	??_MAX7219_DisplayData+2
  1579     0394  01C0               	clrf	??_MAX7219_DisplayData+3
  1580     0395  083F               	movf	??_MAX7219_DisplayData+2,w
  1581     0396  00C0               	movwf	??_MAX7219_DisplayData+3
  1582     0397  01BF               	clrf	??_MAX7219_DisplayData+2
  1583     0398  083D               	movf	??_MAX7219_DisplayData,w
  1584     0399  043F               	iorwf	??_MAX7219_DisplayData+2,w
  1585     039A  00AA               	movwf	SPI_Send_16bit@data
  1586     039B  083E               	movf	??_MAX7219_DisplayData+1,w
  1587     039C  0440               	iorwf	??_MAX7219_DisplayData+3,w
  1588     039D  00AB               	movwf	SPI_Send_16bit@data+1
  1589     039E  21A6               	fcall	_SPI_Send_16bit
  1590     039F                     l17:
  1591     039F  0008               	return
  1592     03A0                     __end_of_MAX7219_DisplayData:
  1593                           
  1594                           	psect	text7
  1595     0360                     __ptext7:	
  1596 ;; *************** function _MAX7219_ClearDisplay *****************
  1597 ;; Defined at:
  1598 ;;		line 19 in file "HAL/scr/max7219.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  i               1   21[BANK0 ] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0
  1612 ;;      Params:         0       0
  1613 ;;      Locals:         0       1
  1614 ;;      Temps:          0       2
  1615 ;;      Totals:         0       3
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 4
  1619 ;; This function calls:
  1620 ;;		_SPI_Send_16bit
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626     0360                     _MAX7219_ClearDisplay:	
  1627                           ;psect for function _MAX7219_ClearDisplay
  1628                           
  1629     0360                     l1096:	
  1630                           ;incstack = 0
  1631                           ; Regs used in _MAX7219_ClearDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1632                           
  1633                           
  1634                           ;HAL/scr/max7219.c: 20:     for (uint8_t i = 0x01; i <= 0x08; i++) {
  1635     0360  3001               	movlw	1
  1636     0361  1283               	bcf	3,5	;RP0=0, select bank0
  1637     0362  00B5               	movwf	MAX7219_ClearDisplay@i
  1638     0363                     l1102:
  1639                           
  1640                           ;HAL/scr/max7219.c: 21:         SPI_Send_16bit((i << 8) );
  1641     0363  0835               	movf	MAX7219_ClearDisplay@i,w
  1642     0364  00B3               	movwf	??_MAX7219_ClearDisplay
  1643     0365  01B4               	clrf	??_MAX7219_ClearDisplay+1
  1644     0366  0833               	movf	??_MAX7219_ClearDisplay,w
  1645     0367  00B4               	movwf	??_MAX7219_ClearDisplay+1
  1646     0368  01B3               	clrf	??_MAX7219_ClearDisplay
  1647     0369  0833               	movf	??_MAX7219_ClearDisplay,w
  1648     036A  00AA               	movwf	SPI_Send_16bit@data
  1649     036B  0834               	movf	??_MAX7219_ClearDisplay+1,w
  1650     036C  00AB               	movwf	SPI_Send_16bit@data+1
  1651     036D  21A6               	fcall	_SPI_Send_16bit
  1652     036E                     l1104:
  1653                           
  1654                           ;HAL/scr/max7219.c: 22:     }
  1655     036E  3001               	movlw	1
  1656     036F  1283               	bcf	3,5	;RP0=0, select bank0
  1657     0370  07B5               	addwf	MAX7219_ClearDisplay@i,f
  1658     0371                     l1106:
  1659     0371  3009               	movlw	9
  1660     0372  0235               	subwf	MAX7219_ClearDisplay@i,w
  1661     0373  1C03               	skipc
  1662     0374  2B76               	goto	u701
  1663     0375  2B77               	goto	u700
  1664     0376                     u701:
  1665     0376  2B63               	goto	l1102
  1666     0377                     u700:
  1667     0377                     l14:
  1668     0377  0008               	return
  1669     0378                     __end_of_MAX7219_ClearDisplay:
  1670                           
  1671                           	psect	text8
  1672     01A6                     __ptext8:	
  1673 ;; *************** function _SPI_Send_16bit *****************
  1674 ;; Defined at:
  1675 ;;		line 39 in file "SERVICE/scr/Spi.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  data            2   10[BANK0 ] unsigned short 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  bit             2   17[BANK0 ] int 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0
  1689 ;;      Params:         0       2
  1690 ;;      Locals:         0       2
  1691 ;;      Temps:          0       5
  1692 ;;      Totals:         0       9
  1693 ;;Total ram usage:        9 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 3
  1696 ;; This function calls:
  1697 ;;		_Dio_Pin_Write
  1698 ;; This function is called by:
  1699 ;;		_MAX7219_Init
  1700 ;;		_MAX7219_ClearDisplay
  1701 ;;		_MAX7219_DisplayData
  1702 ;;		_MAX7219_Shutdown
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     01A6                     _SPI_Send_16bit:	
  1707                           ;psect for function _SPI_Send_16bit
  1708                           
  1709     01A6                     l1044:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1712                           
  1713                           
  1714                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
  1715     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1716     01A7  01A7               	clrf	Dio_Pin_Write@state
  1717     01A8  3005               	movlw	5
  1718     01A9  2307               	fcall	_Dio_Pin_Write
  1719     01AA                     l1046:
  1720                           
  1721                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
  1722     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1723     01AB  01B1               	clrf	SPI_Send_16bit@bit
  1724     01AC  01B2               	clrf	SPI_Send_16bit@bit+1
  1725     01AD                     l1052:
  1726                           
  1727                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
  1728     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1729     01AE  0831               	movf	SPI_Send_16bit@bit,w
  1730     01AF  3C0F               	sublw	15
  1731     01B0  00AC               	movwf	??_SPI_Send_16bit
  1732     01B1  0AAC               	incf	??_SPI_Send_16bit,f
  1733     01B2  3001               	movlw	1
  1734     01B3  00AD               	movwf	??_SPI_Send_16bit+1
  1735     01B4  3000               	movlw	0
  1736     01B5  00AE               	movwf	??_SPI_Send_16bit+2
  1737     01B6  29BA               	goto	u574
  1738     01B7                     u575:
  1739     01B7  1003               	clrc
  1740     01B8  0DAD               	rlf	??_SPI_Send_16bit+1,f
  1741     01B9  0DAE               	rlf	??_SPI_Send_16bit+2,f
  1742     01BA                     u574:
  1743     01BA  0BAC               	decfsz	??_SPI_Send_16bit,f
  1744     01BB  29B7               	goto	u575
  1745     01BC  082A               	movf	SPI_Send_16bit@data,w
  1746     01BD  052D               	andwf	??_SPI_Send_16bit+1,w
  1747     01BE  00AF               	movwf	??_SPI_Send_16bit+3
  1748     01BF  082B               	movf	SPI_Send_16bit@data+1,w
  1749     01C0  052E               	andwf	??_SPI_Send_16bit+2,w
  1750     01C1  00B0               	movwf	??_SPI_Send_16bit+4
  1751     01C2  082F               	movf	??_SPI_Send_16bit+3,w
  1752     01C3  0430               	iorwf	??_SPI_Send_16bit+4,w
  1753     01C4  1903               	btfsc	3,2
  1754     01C5  29C7               	goto	u581
  1755     01C6  29C8               	goto	u580
  1756     01C7                     u581:
  1757     01C7  29CD               	goto	l1056
  1758     01C8                     u580:
  1759     01C8                     l1054:
  1760                           
  1761                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
  1762     01C8  01A7               	clrf	Dio_Pin_Write@state
  1763     01C9  0AA7               	incf	Dio_Pin_Write@state,f
  1764     01CA  3001               	movlw	1
  1765     01CB  2307               	fcall	_Dio_Pin_Write
  1766                           
  1767                           ;SERVICE/scr/Spi.c: 45:         } else {
  1768     01CC  29D0               	goto	l1058
  1769     01CD                     l1056:
  1770                           
  1771                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
  1772     01CD  01A7               	clrf	Dio_Pin_Write@state
  1773     01CE  3001               	movlw	1
  1774     01CF  2307               	fcall	_Dio_Pin_Write
  1775     01D0                     l1058:
  1776                           
  1777                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
  1778     01D0  3010               	movlw	16
  1779     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1780     01D2  00AC               	movwf	??_SPI_Send_16bit
  1781     01D3                     u1097:
  1782     01D3  0BAC               	decfsz	??_SPI_Send_16bit,f
  1783     01D4  29D3               	goto	u1097
  1784     01D5  0000               	nop
  1785     01D6                     l1060:
  1786     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1787     01D7  01A7               	clrf	Dio_Pin_Write@state
  1788     01D8  0AA7               	incf	Dio_Pin_Write@state,f
  1789     01D9  3002               	movlw	2
  1790     01DA  2307               	fcall	_Dio_Pin_Write
  1791     01DB  3010               	movlw	16
  1792     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1793     01DD  00AC               	movwf	??_SPI_Send_16bit
  1794     01DE                     u1107:
  1795     01DE  0BAC               	decfsz	??_SPI_Send_16bit,f
  1796     01DF  29DE               	goto	u1107
  1797     01E0  0000               	nop
  1798     01E1                     l1062:
  1799     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1800     01E2  01A7               	clrf	Dio_Pin_Write@state
  1801     01E3  3002               	movlw	2
  1802     01E4  2307               	fcall	_Dio_Pin_Write
  1803     01E5                     l1064:
  1804                           
  1805                           ;SERVICE/scr/Spi.c: 50:     }
  1806     01E5  3001               	movlw	1
  1807     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1808     01E7  07B1               	addwf	SPI_Send_16bit@bit,f
  1809     01E8  1803               	skipnc
  1810     01E9  0AB2               	incf	SPI_Send_16bit@bit+1,f
  1811     01EA  3000               	movlw	0
  1812     01EB  07B2               	addwf	SPI_Send_16bit@bit+1,f
  1813     01EC                     l1066:
  1814     01EC  0832               	movf	SPI_Send_16bit@bit+1,w
  1815     01ED  3A80               	xorlw	128
  1816     01EE  00DF               	movwf	btemp+1
  1817     01EF  3080               	movlw	128
  1818     01F0  025F               	subwf	btemp+1,w
  1819     01F1  1D03               	skipz
  1820     01F2  29F5               	goto	u595
  1821     01F3  3010               	movlw	16
  1822     01F4  0231               	subwf	SPI_Send_16bit@bit,w
  1823     01F5                     u595:
  1824     01F5  1C03               	skipc
  1825     01F6  29F8               	goto	u591
  1826     01F7  29F9               	goto	u590
  1827     01F8                     u591:
  1828     01F8  29AD               	goto	l1052
  1829     01F9                     u590:
  1830     01F9                     l1068:
  1831                           
  1832                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
  1833     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1834     01FA  01A7               	clrf	Dio_Pin_Write@state
  1835     01FB  0AA7               	incf	Dio_Pin_Write@state,f
  1836     01FC  3005               	movlw	5
  1837     01FD  2307               	fcall	_Dio_Pin_Write
  1838     01FE                     l129:
  1839     01FE  0008               	return
  1840     01FF                     __end_of_SPI_Send_16bit:
  1841                           
  1842                           	psect	text9
  1843     0307                     __ptext9:	
  1844 ;; *************** function _Dio_Pin_Write *****************
  1845 ;; Defined at:
  1846 ;;		line 30 in file "MCAL/scr/Dio.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  pinNumber       1    wreg     unsigned char 
  1849 ;;  state           1    7[BANK0 ] unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  pinNumber       1    9[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0
  1861 ;;      Params:         0       1
  1862 ;;      Locals:         0       1
  1863 ;;      Temps:          0       1
  1864 ;;      Totals:         0       3
  1865 ;;Total ram usage:        3 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_SPI_Send_16bit
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876     0307                     _Dio_Pin_Write:	
  1877                           ;psect for function _Dio_Pin_Write
  1878                           
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
  1882                           ;Dio_Pin_Write@pinNumber stored from wreg
  1883     0307  1283               	bcf	3,5	;RP0=0, select bank0
  1884     0308  00A9               	movwf	Dio_Pin_Write@pinNumber
  1885     0309                     l1036:
  1886                           
  1887                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1888     0309  0327               	decf	Dio_Pin_Write@state,w
  1889     030A  1D03               	btfss	3,2
  1890     030B  2B0D               	goto	u541
  1891     030C  2B0E               	goto	u540
  1892     030D                     u541:
  1893     030D  2B1A               	goto	l1040
  1894     030E                     u540:
  1895     030E                     l1038:
  1896                           
  1897                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1898     030E  3001               	movlw	1
  1899     030F  00A8               	movwf	??_Dio_Pin_Write
  1900     0310  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1901     0311  2B14               	goto	u554
  1902     0312                     u555:
  1903     0312  1003               	clrc
  1904     0313  0DA8               	rlf	??_Dio_Pin_Write,f
  1905     0314                     u554:
  1906     0314  3EFF               	addlw	-1
  1907     0315  1D03               	skipz
  1908     0316  2B12               	goto	u555
  1909     0317  0828               	movf	??_Dio_Pin_Write,w
  1910     0318  04CC               	iorwf	_DIO_State,f
  1911                           
  1912                           ;MCAL/scr/Dio.c: 34:     }
  1913     0319  2B26               	goto	l1042
  1914     031A                     l1040:
  1915                           
  1916                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1917     031A  3001               	movlw	1
  1918     031B  00A8               	movwf	??_Dio_Pin_Write
  1919     031C  0A29               	incf	Dio_Pin_Write@pinNumber,w
  1920     031D  2B20               	goto	u564
  1921     031E                     u565:
  1922     031E  1003               	clrc
  1923     031F  0DA8               	rlf	??_Dio_Pin_Write,f
  1924     0320                     u564:
  1925     0320  3EFF               	addlw	-1
  1926     0321  1D03               	skipz
  1927     0322  2B1E               	goto	u565
  1928     0323  0828               	movf	??_Dio_Pin_Write,w
  1929     0324  3AFF               	xorlw	255
  1930     0325  05CC               	andwf	_DIO_State,f
  1931     0326                     l1042:
  1932                           
  1933                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1934     0326  084C               	movf	_DIO_State,w
  1935     0327  0085               	movwf	5	;volatile
  1936     0328                     l91:
  1937     0328  0008               	return
  1938     0329                     __end_of_Dio_Pin_Write:
  1939                           
  1940                           	psect	text10
  1941     03A0                     __ptext10:	
  1942 ;; *************** function _Gpio_Init *****************
  1943 ;; Defined at:
  1944 ;;		line 23 in file "MCAL/scr/gpio.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0
  1958 ;;      Params:         0       0
  1959 ;;      Locals:         0       0
  1960 ;;      Temps:          0       0
  1961 ;;      Totals:         0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 2
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     03A0                     _Gpio_Init:	
  1973                           ;psect for function _Gpio_Init
  1974                           
  1975     03A0                     l1172:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  1978                           
  1979                           
  1980                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  1981     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1982     03A1  141F               	bsf	31,0	;volatile
  1983                           
  1984                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  1985     03A2  1405               	bsf	5,0	;volatile
  1986     03A3                     l1174:
  1987                           
  1988                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  1989     03A3  30FD               	movlw	253
  1990     03A4  059F               	andwf	31,f	;volatile
  1991                           
  1992                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  1993     03A5  30FD               	movlw	253
  1994     03A6  0585               	andwf	5,f	;volatile
  1995                           
  1996                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  1997     03A7  30FB               	movlw	251
  1998     03A8  059F               	andwf	31,f	;volatile
  1999                           
  2000                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  2001     03A9  30FB               	movlw	251
  2002     03AA  0585               	andwf	5,f	;volatile
  2003     03AB                     l1176:
  2004                           
  2005                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  2006     03AB  1585               	bsf	5,3	;volatile
  2007                           
  2008                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  2009     03AC  30F7               	movlw	247
  2010     03AD  059F               	andwf	31,f	;volatile
  2011                           
  2012                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  2013     03AE  30EF               	movlw	239
  2014     03AF  0585               	andwf	5,f	;volatile
  2015                           
  2016                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  2017     03B0  30DF               	movlw	223
  2018     03B1  0585               	andwf	5,f	;volatile
  2019     03B2                     l113:
  2020     03B2  0008               	return
  2021     03B3                     __end_of_Gpio_Init:
  2022                           
  2023                           	psect	text11
  2024     03D4                     __ptext11:	
  2025 ;; *************** function _Dio_init *****************
  2026 ;; Defined at:
  2027 ;;		line 60 in file "MCAL/scr/Dio.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0
  2041 ;;      Params:         0       0
  2042 ;;      Locals:         0       0
  2043 ;;      Temps:          0       0
  2044 ;;      Totals:         0       0
  2045 ;;Total ram usage:        0 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 3
  2048 ;; This function calls:
  2049 ;;		_Dio_Config
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055     03D4                     _Dio_init:	
  2056                           ;psect for function _Dio_init
  2057                           
  2058     03D4                     l1170:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2061                           
  2062                           
  2063                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  2064     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2065     03D5  01A7               	clrf	Dio_Config@direction
  2066     03D6  01A8               	clrf	Dio_Config@state
  2067     03D7  01A9               	clrf	Dio_Config@pullType
  2068     03D8  0AA9               	incf	Dio_Config@pullType,f
  2069     03D9  3003               	movlw	3
  2070     03DA  2127               	fcall	_Dio_Config
  2071                           
  2072                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  2073     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2074     03DC  01A7               	clrf	Dio_Config@direction
  2075     03DD  0AA7               	incf	Dio_Config@direction,f
  2076     03DE  01A8               	clrf	Dio_Config@state
  2077     03DF  01A9               	clrf	Dio_Config@pullType
  2078     03E0  3004               	movlw	4
  2079     03E1  2127               	fcall	_Dio_Config
  2080     03E2                     l106:
  2081     03E2  0008               	return
  2082     03E3                     __end_of_Dio_init:
  2083                           
  2084                           	psect	text12
  2085     0127                     __ptext12:	
  2086 ;; *************** function _Dio_Config *****************
  2087 ;; Defined at:
  2088 ;;		line 41 in file "MCAL/scr/Dio.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  pinNumber       1    wreg     unsigned char 
  2091 ;;  direction       1    7[BANK0 ] unsigned char 
  2092 ;;  state           1    8[BANK0 ] unsigned char 
  2093 ;;  pullType        1    9[BANK0 ] unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  pinNumber       1   16[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, btemp+1
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0
  2105 ;;      Params:         0       3
  2106 ;;      Locals:         0       3
  2107 ;;      Temps:          0       4
  2108 ;;      Totals:         0      10
  2109 ;;Total ram usage:       10 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 2
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_Dio_init
  2116 ;;		_SPI_Init
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120     0127                     _Dio_Config:	
  2121                           ;psect for function _Dio_Config
  2122                           
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  2126                           ;Dio_Config@pinNumber stored from wreg
  2127     0127  1283               	bcf	3,5	;RP0=0, select bank0
  2128     0128  00B0               	movwf	Dio_Config@pinNumber
  2129     0129                     l1070:
  2130                           
  2131                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  2132     0129  0827               	movf	Dio_Config@direction,w
  2133     012A  1903               	btfsc	3,2
  2134     012B  292D               	goto	u601
  2135     012C  292E               	goto	u600
  2136     012D                     u601:
  2137     012D  2943               	goto	l1074
  2138     012E                     u600:
  2139     012E                     l1072:
  2140     012E  3001               	movlw	1
  2141     012F  00AA               	movwf	??_Dio_Config
  2142     0130  0A30               	incf	Dio_Config@pinNumber,w
  2143     0131  2934               	goto	u614
  2144     0132                     u615:
  2145     0132  1003               	clrc
  2146     0133  0DAA               	rlf	??_Dio_Config,f
  2147     0134                     u614:
  2148     0134  3EFF               	addlw	-1
  2149     0135  1D03               	skipz
  2150     0136  2932               	goto	u615
  2151     0137  082A               	movf	??_Dio_Config,w
  2152     0138  3AFF               	xorlw	255
  2153     0139  1683               	bsf	3,5	;RP0=1, select bank1
  2154     013A  0505               	andwf	5,w	;volatile
  2155     013B  1283               	bcf	3,5	;RP0=0, select bank0
  2156     013C  00AB               	movwf	??_Dio_Config+1
  2157     013D  01AC               	clrf	??_Dio_Config+2
  2158     013E  082B               	movf	??_Dio_Config+1,w
  2159     013F  00AE               	movwf	_Dio_Config$75
  2160     0140  082C               	movf	??_Dio_Config+2,w
  2161     0141  00AF               	movwf	_Dio_Config$75+1
  2162     0142  295A               	goto	l1076
  2163     0143                     l1074:
  2164     0143  0A30               	incf	Dio_Config@pinNumber,w
  2165     0144  00DF               	movwf	btemp+1
  2166     0145  3001               	movlw	1
  2167     0146  00AA               	movwf	??_Dio_Config
  2168     0147  3000               	movlw	0
  2169     0148  00AB               	movwf	??_Dio_Config+1
  2170     0149  294D               	goto	u624
  2171     014A                     u625:
  2172     014A  1003               	clrc
  2173     014B  0DAA               	rlf	??_Dio_Config,f
  2174     014C  0DAB               	rlf	??_Dio_Config+1,f
  2175     014D                     u624:
  2176     014D  0BDF               	decfsz	btemp+1,f
  2177     014E  294A               	goto	u625
  2178     014F  082A               	movf	??_Dio_Config,w
  2179     0150  1683               	bsf	3,5	;RP0=1, select bank1
  2180     0151  0405               	iorwf	5,w	;volatile
  2181     0152  1283               	bcf	3,5	;RP0=0, select bank0
  2182     0153  00AC               	movwf	??_Dio_Config+2
  2183     0154  082B               	movf	??_Dio_Config+1,w
  2184     0155  00AD               	movwf	??_Dio_Config+3
  2185     0156  082C               	movf	??_Dio_Config+2,w
  2186     0157  00AE               	movwf	_Dio_Config$75
  2187     0158  082D               	movf	??_Dio_Config+3,w
  2188     0159  00AF               	movwf	_Dio_Config$75+1
  2189     015A                     l1076:
  2190     015A  082E               	movf	_Dio_Config$75,w
  2191     015B  1683               	bsf	3,5	;RP0=1, select bank1
  2192     015C  0085               	movwf	5	;volatile
  2193     015D                     l1078:
  2194                           
  2195                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  2196     015D  1283               	bcf	3,5	;RP0=0, select bank0
  2197     015E  0327               	decf	Dio_Config@direction,w
  2198     015F  1D03               	btfss	3,2
  2199     0160  2962               	goto	u631
  2200     0161  2963               	goto	u630
  2201     0162                     u631:
  2202     0162  2982               	goto	l1088
  2203     0163                     u630:
  2204     0163                     l1080:
  2205                           
  2206                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  2207     0163  0328               	decf	Dio_Config@state,w
  2208     0164  1D03               	btfss	3,2
  2209     0165  2967               	goto	u641
  2210     0166  2968               	goto	u640
  2211     0167                     u641:
  2212     0167  2974               	goto	l1084
  2213     0168                     u640:
  2214     0168                     l1082:
  2215                           
  2216                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  2217     0168  3001               	movlw	1
  2218     0169  00AA               	movwf	??_Dio_Config
  2219     016A  0A30               	incf	Dio_Config@pinNumber,w
  2220     016B  296E               	goto	u654
  2221     016C                     u655:
  2222     016C  1003               	clrc
  2223     016D  0DAA               	rlf	??_Dio_Config,f
  2224     016E                     u654:
  2225     016E  3EFF               	addlw	-1
  2226     016F  1D03               	skipz
  2227     0170  296C               	goto	u655
  2228     0171  082A               	movf	??_Dio_Config,w
  2229     0172  04CC               	iorwf	_DIO_State,f
  2230                           
  2231                           ;MCAL/scr/Dio.c: 48:         } else {
  2232     0173  2980               	goto	l1086
  2233     0174                     l1084:
  2234                           
  2235                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  2236     0174  3001               	movlw	1
  2237     0175  00AA               	movwf	??_Dio_Config
  2238     0176  0A30               	incf	Dio_Config@pinNumber,w
  2239     0177  297A               	goto	u664
  2240     0178                     u665:
  2241     0178  1003               	clrc
  2242     0179  0DAA               	rlf	??_Dio_Config,f
  2243     017A                     u664:
  2244     017A  3EFF               	addlw	-1
  2245     017B  1D03               	skipz
  2246     017C  2978               	goto	u665
  2247     017D  082A               	movf	??_Dio_Config,w
  2248     017E  3AFF               	xorlw	255
  2249     017F  05CC               	andwf	_DIO_State,f
  2250     0180                     l1086:
  2251                           
  2252                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  2253     0180  084C               	movf	_DIO_State,w
  2254     0181  0085               	movwf	5	;volatile
  2255     0182                     l1088:
  2256                           
  2257                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  2258     0182  0329               	decf	Dio_Config@pullType,w
  2259     0183  1D03               	btfss	3,2
  2260     0184  2986               	goto	u671
  2261     0185  2987               	goto	u670
  2262     0186                     u671:
  2263     0186  2998               	goto	l1092
  2264     0187                     u670:
  2265     0187                     l1090:
  2266                           
  2267                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  2268     0187  307F               	movlw	127
  2269     0188  1683               	bsf	3,5	;RP0=1, select bank1
  2270     0189  0581               	andwf	1,f	;volatile
  2271                           
  2272                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  2273     018A  3001               	movlw	1
  2274     018B  1283               	bcf	3,5	;RP0=0, select bank0
  2275     018C  00AA               	movwf	??_Dio_Config
  2276     018D  0A30               	incf	Dio_Config@pinNumber,w
  2277     018E  2991               	goto	u684
  2278     018F                     u685:
  2279     018F  1003               	clrc
  2280     0190  0DAA               	rlf	??_Dio_Config,f
  2281     0191                     u684:
  2282     0191  3EFF               	addlw	-1
  2283     0192  1D03               	skipz
  2284     0193  298F               	goto	u685
  2285     0194  082A               	movf	??_Dio_Config,w
  2286     0195  1683               	bsf	3,5	;RP0=1, select bank1
  2287     0196  0495               	iorwf	21,f	;volatile
  2288                           
  2289                           ;MCAL/scr/Dio.c: 56:     } else {
  2290     0197  29A5               	goto	l103
  2291     0198                     l1092:
  2292                           
  2293                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  2294     0198  3001               	movlw	1
  2295     0199  00AA               	movwf	??_Dio_Config
  2296     019A  0A30               	incf	Dio_Config@pinNumber,w
  2297     019B  299E               	goto	u694
  2298     019C                     u695:
  2299     019C  1003               	clrc
  2300     019D  0DAA               	rlf	??_Dio_Config,f
  2301     019E                     u694:
  2302     019E  3EFF               	addlw	-1
  2303     019F  1D03               	skipz
  2304     01A0  299C               	goto	u695
  2305     01A1  082A               	movf	??_Dio_Config,w
  2306     01A2  3AFF               	xorlw	255
  2307     01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2308     01A4  0595               	andwf	21,f	;volatile
  2309     01A5                     l103:
  2310     01A5  0008               	return
  2311     01A6                     __end_of_Dio_Config:
  2312                           
  2313                           	psect	text13
  2314     03B3                     __ptext13:	
  2315 ;; *************** function _Adc_StartConversion *****************
  2316 ;; Defined at:
  2317 ;;		line 87 in file "MCAL/scr/Adc.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  channel         1    wreg     enum E11
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  channel         1    8[BANK0 ] enum E11
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0
  2331 ;;      Params:         0       0
  2332 ;;      Locals:         0       1
  2333 ;;      Temps:          0       1
  2334 ;;      Totals:         0       2
  2335 ;;Total ram usage:        2 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 2
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345     03B3                     _Adc_StartConversion:	
  2346                           ;psect for function _Adc_StartConversion
  2347                           
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _Adc_StartConversion: [wreg+status,2+status,0]
  2351                           ;Adc_StartConversion@channel stored from wreg
  2352     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2353     03B4  00A8               	movwf	Adc_StartConversion@channel
  2354     03B5                     l1142:
  2355                           
  2356                           ;MCAL/scr/Adc.c: 90:     ADCON0 &= ~( 0b11 << 2);
  2357     03B5  30F3               	movlw	243
  2358     03B6  059F               	andwf	31,f	;volatile
  2359                           
  2360                           ;MCAL/scr/Adc.c: 91:     ADCON0 |= (channel << 2);
  2361     03B7  0828               	movf	Adc_StartConversion@channel,w	;volatile
  2362     03B8  00A7               	movwf	??_Adc_StartConversion
  2363     03B9  3001               	movlw	1
  2364     03BA                     u715:
  2365     03BA  1003               	clrc
  2366     03BB  0DA7               	rlf	??_Adc_StartConversion,f
  2367     03BC  3EFF               	addlw	-1
  2368     03BD  1D03               	skipz
  2369     03BE  2BBA               	goto	u715
  2370     03BF  1003               	clrc
  2371     03C0  0D27               	rlf	??_Adc_StartConversion,w
  2372     03C1  049F               	iorwf	31,f	;volatile
  2373     03C2                     l1144:
  2374                           
  2375                           ;MCAL/scr/Adc.c: 92:     ADCON0 |= (1 << 1);
  2376     03C2  149F               	bsf	31,1	;volatile
  2377     03C3                     l63:
  2378     03C3  0008               	return
  2379     03C4                     __end_of_Adc_StartConversion:
  2380                           
  2381                           	psect	text14
  2382     02B0                     __ptext14:	
  2383 ;; *************** function _Adc_ReadResult *****************
  2384 ;; Defined at:
  2385 ;;		line 96 in file "MCAL/scr/Adc.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    7[BANK0 ] unsigned short 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0
  2399 ;;      Params:         0       2
  2400 ;;      Locals:         0       0
  2401 ;;      Temps:          0       7
  2402 ;;      Totals:         0       9
  2403 ;;Total ram usage:        9 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 2
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     02B0                     _Adc_ReadResult:	
  2414                           ;psect for function _Adc_ReadResult
  2415                           
  2416     02B0                     l1146:	
  2417                           ;incstack = 0
  2418                           ; Regs used in _Adc_ReadResult: [wreg+status,2+status,0]
  2419                           
  2420     02B0                     l66:	
  2421                           ;MCAL/scr/Adc.c: 97:     while (ADCON0 & (1 << 1));
  2422                           
  2423     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2424     02B1  189F               	btfsc	31,1	;volatile
  2425     02B2  2AB4               	goto	u721
  2426     02B3  2AB5               	goto	u720
  2427     02B4                     u721:
  2428     02B4  2AB0               	goto	l66
  2429     02B5                     u720:
  2430     02B5                     l68:
  2431                           
  2432                           ;MCAL/scr/Adc.c: 100:     if (ADCON0 & (1 << 7)) {
  2433     02B5  1F9F               	btfss	31,7	;volatile
  2434     02B6  2AB8               	goto	u731
  2435     02B7  2AB9               	goto	u730
  2436     02B8                     u731:
  2437     02B8  2AC0               	goto	l1154
  2438     02B9                     u730:
  2439     02B9                     l1148:
  2440                           
  2441                           ;MCAL/scr/Adc.c: 102:         return (uint16)((ADRESH << 8) | ADRESL);
  2442     02B9  081E               	movf	30,w	;volatile
  2443     02BA  00A8               	movwf	?_Adc_ReadResult+1
  2444     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2445     02BC  081E               	movf	30,w	;volatile
  2446     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2447     02BE  00A7               	movwf	?_Adc_ReadResult
  2448     02BF  2AE0               	goto	l70
  2449     02C0                     l1154:
  2450                           
  2451                           ;MCAL/scr/Adc.c: 105:         return (uint16)((ADRESH << 2) | (ADRESL >> 6));
  2452     02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2453     02C1  081E               	movf	30,w	;volatile
  2454     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2455     02C3  00A9               	movwf	??_Adc_ReadResult
  2456     02C4  3006               	movlw	6
  2457     02C5                     u745:
  2458     02C5  1003               	clrc
  2459     02C6  0CA9               	rrf	??_Adc_ReadResult,f
  2460     02C7  3EFF               	addlw	-1
  2461     02C8  1D03               	skipz
  2462     02C9  2AC5               	goto	u745
  2463     02CA  0829               	movf	??_Adc_ReadResult,w
  2464     02CB  00AA               	movwf	??_Adc_ReadResult+1
  2465     02CC  01AB               	clrf	??_Adc_ReadResult+2
  2466     02CD  081E               	movf	30,w	;volatile
  2467     02CE  00AC               	movwf	??_Adc_ReadResult+3
  2468     02CF  01AD               	clrf	??_Adc_ReadResult+4
  2469     02D0  1003               	clrc
  2470     02D1  0DAC               	rlf	??_Adc_ReadResult+3,f
  2471     02D2  0DAD               	rlf	??_Adc_ReadResult+4,f
  2472     02D3  1003               	clrc
  2473     02D4  0DAC               	rlf	??_Adc_ReadResult+3,f
  2474     02D5  0DAD               	rlf	??_Adc_ReadResult+4,f
  2475     02D6  082A               	movf	??_Adc_ReadResult+1,w
  2476     02D7  042C               	iorwf	??_Adc_ReadResult+3,w
  2477     02D8  00AE               	movwf	??_Adc_ReadResult+5
  2478     02D9  082B               	movf	??_Adc_ReadResult+2,w
  2479     02DA  042D               	iorwf	??_Adc_ReadResult+4,w
  2480     02DB  00AF               	movwf	??_Adc_ReadResult+6
  2481     02DC  082E               	movf	??_Adc_ReadResult+5,w
  2482     02DD  00A7               	movwf	?_Adc_ReadResult
  2483     02DE  082F               	movf	??_Adc_ReadResult+6,w
  2484     02DF  00A8               	movwf	?_Adc_ReadResult+1
  2485     02E0                     l70:
  2486     02E0  0008               	return
  2487     02E1                     __end_of_Adc_ReadResult:
  2488                           
  2489                           	psect	text15
  2490     03E3                     __ptext15:	
  2491 ;; *************** function _Adc_Init *****************
  2492 ;; Defined at:
  2493 ;;		line 53 in file "MCAL/scr/Adc.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0
  2507 ;;      Params:         0       0
  2508 ;;      Locals:         0       0
  2509 ;;      Temps:          0       0
  2510 ;;      Totals:         0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521     03E3                     _Adc_Init:	
  2522                           ;psect for function _Adc_Init
  2523                           
  2524     03E3                     l1110:	
  2525                           ;incstack = 0
  2526                           ; Regs used in _Adc_Init: [wreg+status,2+status,0]
  2527                           
  2528                           
  2529                           ;MCAL/scr/Adc.c: 54: ADCON0 |= (1 << 0);
  2530     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2531     03E4  141F               	bsf	31,0	;volatile
  2532     03E5                     l1112:
  2533                           
  2534                           ;MCAL/scr/Adc.c: 59:     (ADCON0 &= ~(0b1 << 6)); (ADCON0 |=(0 << 6));
  2535     03E5  30BF               	movlw	191
  2536     03E6  059F               	andwf	31,f	;volatile
  2537     03E7                     l1114:
  2538     03E7  081F               	movf	31,w	;volatile
  2539     03E8                     l1116:
  2540                           
  2541                           ;MCAL/scr/Adc.c: 62:     (ANSEL &= ~(0b111 << 4) ); (ANSEL |= (( ((2000000 / ((4000000)/
      +                          1000 )) >= 1600) ? 0b000 : ((4000000 / ((4000000)/1000 )) >= 1600) ? 0b100 : ((8000000 /
      +                           ((4000000)/1000 )) >= 1600) ? 0b001 : ((16000000 / ((4000000)/1000 )) >= 1600) ? 0b101 
      +                          : ((32000000 / ((4000000)/1000 )) >= 1600) ? 0b010 : ((64000000 / ((4000000)/1000 )) >= 
      +                          1600) ? 0b110 : 0b110) << 4) );
  2542     03E8  308F               	movlw	143
  2543     03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2544     03EA  059F               	andwf	31,f	;volatile
  2545     03EB                     l1132:
  2546     03EB                     l47:
  2547     03EB                     l43:
  2548     03EB                     l1138:
  2549     03EB  161F               	bsf	31,4	;volatile
  2550     03EC                     l1140:
  2551                           
  2552                           ;MCAL/scr/Adc.c: 82:         ADCON0 &= ~(1 << 7);
  2553     03EC  307F               	movlw	127
  2554     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2555     03EE  059F               	andwf	31,f	;volatile
  2556     03EF                     l60:
  2557     03EF  0008               	return
  2558     03F0                     __end_of_Adc_Init:
  2559                           
  2560                           	psect	text16
  2561     027B                     __ptext16:	
  2562 ;; *************** function _ISR *****************
  2563 ;; Defined at:
  2564 ;;		line 83 in file "main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  i               2    5[BANK0 ] unsigned short 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0
  2578 ;;      Params:         0       0
  2579 ;;      Locals:         0       2
  2580 ;;      Temps:          0       3
  2581 ;;      Totals:         0       5
  2582 ;;Total ram usage:        5 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 1
  2585 ;; This function calls:
  2586 ;;		_Dio_Pin_Read
  2587 ;; This function is called by:
  2588 ;;		Interrupt level 1
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     027B                     _ISR:	
  2593                           ;psect for function _ISR
  2594                           
  2595     027B                     i1l1324:
  2596                           
  2597                           ;main.c: 85:     if (INTCONbits.GPIF) {
  2598     027B  1C0B               	btfss	11,0	;volatile
  2599     027C  2A7E               	goto	u102_21
  2600     027D  2A7F               	goto	u102_20
  2601     027E                     u102_21:
  2602     027E  2AA8               	goto	i1l194
  2603     027F                     u102_20:
  2604     027F                     i1l1326:
  2605                           
  2606                           ;main.c: 87:         uint16 i = 0 ;
  2607     027F  01A5               	clrf	ISR@i
  2608     0280  01A6               	clrf	ISR@i+1
  2609                           
  2610                           ;main.c: 88:               while(!Dio_Pin_Read(3)){
  2611     0281  2AA0               	goto	i1l1332
  2612     0282                     i1l1328:
  2613                           
  2614                           ;main.c: 89:                   i++;
  2615     0282  3001               	movlw	1
  2616     0283  1283               	bcf	3,5	;RP0=0, select bank0
  2617     0284  07A5               	addwf	ISR@i,f
  2618     0285  1803               	skipnc
  2619     0286  0AA6               	incf	ISR@i+1,f
  2620     0287  3000               	movlw	0
  2621     0288  07A6               	addwf	ISR@i+1,f
  2622                           
  2623                           ;main.c: 90:                   _delay((unsigned long)(((100))*(4000000/4000000.0)));
  2624     0289  3021               	movlw	33
  2625     028A  00A2               	movwf	??_ISR
  2626     028B                     u111_27:
  2627     028B  0BA2               	decfsz	??_ISR,f
  2628     028C  2A8B               	goto	u111_27
  2629                           
  2630                           ;main.c: 91:                   if(i>3000){
  2631     028D  300B               	movlw	11
  2632     028E  1283               	bcf	3,5	;RP0=0, select bank0
  2633     028F  0226               	subwf	ISR@i+1,w
  2634     0290  30B9               	movlw	185
  2635     0291  1903               	skipnz
  2636     0292  0225               	subwf	ISR@i,w
  2637     0293  1C03               	skipc
  2638     0294  2A96               	goto	u103_21
  2639     0295  2A97               	goto	u103_20
  2640     0296                     u103_21:
  2641     0296  2AA0               	goto	i1l1332
  2642     0297                     u103_20:
  2643     0297                     i1l1330:
  2644                           
  2645                           ;main.c: 92:                       DispenserOn = !DispenserOn;
  2646     0297  084B               	movf	_DispenserOn,w
  2647     0298  1903               	btfsc	3,2
  2648     0299  2A9B               	goto	u104_21
  2649     029A  2A9D               	goto	u104_20
  2650     029B                     u104_21:
  2651     029B  3001               	movlw	1
  2652     029C  2A9E               	goto	u105_20
  2653     029D                     u104_20:
  2654     029D  3000               	movlw	0
  2655     029E                     u105_20:
  2656     029E  00CB               	movwf	_DispenserOn
  2657                           
  2658                           ;main.c: 93:                       break;}
  2659     029F  2AA7               	goto	i1l193
  2660     02A0                     i1l1332:
  2661                           
  2662                           ;main.c: 88:               while(!Dio_Pin_Read(3)){
  2663     02A0  3003               	movlw	3
  2664     02A1  2378               	fcall	_Dio_Pin_Read
  2665     02A2  3A00               	xorlw	0
  2666     02A3  1903               	skipnz
  2667     02A4  2AA6               	goto	u106_21
  2668     02A5  2AA7               	goto	u106_20
  2669     02A6                     u106_21:
  2670     02A6  2A82               	goto	i1l1328
  2671     02A7                     u106_20:
  2672     02A7                     i1l193:
  2673                           
  2674                           ;main.c: 97:         INTCONbits.GPIF = 0;
  2675     02A7  100B               	bcf	11,0	;volatile
  2676     02A8                     i1l194:
  2677     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2678     02A9  0824               	movf	??_ISR+2,w
  2679     02AA  008A               	movwf	10
  2680     02AB  0E23               	swapf	??_ISR+1,w
  2681     02AC  0083               	movwf	3
  2682     02AD  0EDE               	swapf	btemp,f
  2683     02AE  0E5E               	swapf	btemp,w
  2684     02AF  0009               	retfie
  2685     02B0                     __end_of_ISR:
  2686                           
  2687                           	psect	intentry
  2688     0004                     __pintentry:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2691                           
  2692     0004                     interrupt_function:
  2693     005E                     saved_w         set	btemp
  2694     0004  00DE               	movwf	btemp
  2695     0005  0E03               	swapf	3,w
  2696     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0007  00A3               	movwf	??_ISR+1
  2698     0008  080A               	movf	10,w
  2699     0009  00A4               	movwf	??_ISR+2
  2700     000A  2A7B               	ljmp	_ISR
  2701                           
  2702                           	psect	text17
  2703     0378                     __ptext17:	
  2704 ;; *************** function _Dio_Pin_Read *****************
  2705 ;; Defined at:
  2706 ;;		line 19 in file "MCAL/scr/Dio.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  pinNumber       1    wreg     unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  pinNumber       1    1[BANK0 ] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      unsigned char 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0
  2720 ;;      Params:         0       0
  2721 ;;      Locals:         0       1
  2722 ;;      Temps:          0       1
  2723 ;;      Totals:         0       2
  2724 ;;Total ram usage:        2 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_ISR
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     0378                     _Dio_Pin_Read:	
  2734                           ;psect for function _Dio_Pin_Read
  2735                           
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _Dio_Pin_Read: [wreg+status,2+status,0]
  2739                           ;Dio_Pin_Read@pinNumber stored from wreg
  2740     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2741     0379  00A1               	movwf	Dio_Pin_Read@pinNumber
  2742     037A                     i1l1158:
  2743                           
  2744                           ;MCAL/scr/Dio.c: 20:         if (GPIO & (1 << pinNumber)) {
  2745     037A  3001               	movlw	1
  2746     037B  00A0               	movwf	??_Dio_Pin_Read
  2747     037C  0A21               	incf	Dio_Pin_Read@pinNumber,w
  2748     037D  2B80               	goto	u75_24
  2749     037E                     u75_25:
  2750     037E  1003               	clrc
  2751     037F  0DA0               	rlf	??_Dio_Pin_Read,f
  2752     0380                     u75_24:
  2753     0380  3EFF               	addlw	-1
  2754     0381  1D03               	skipz
  2755     0382  2B7E               	goto	u75_25
  2756     0383  0820               	movf	??_Dio_Pin_Read,w
  2757     0384  0505               	andwf	5,w	;volatile
  2758     0385  1903               	btfsc	3,2
  2759     0386  2B88               	goto	u76_21
  2760     0387  2B89               	goto	u76_20
  2761     0388                     u76_21:
  2762     0388  2B8B               	goto	i1l1166
  2763     0389                     u76_20:
  2764     0389                     i1l1160:
  2765                           
  2766                           ;MCAL/scr/Dio.c: 21:             return 1;
  2767     0389  3001               	movlw	1
  2768     038A  2B8C               	goto	i1l85
  2769     038B                     i1l1166:
  2770                           
  2771                           ;MCAL/scr/Dio.c: 23:             return 0;
  2772     038B  3000               	movlw	0
  2773     038C                     i1l85:
  2774     038C  0008               	return
  2775     038D                     __end_of_Dio_Pin_Read:
  2776     0000                     ___latbits      equ	0
  2777     005E                     btemp           set	94	;btemp
  2778     005E                     wtemp0          set	94
  2779                           
  2780                           	psect	config
  2781                           
  2782                           ;Config register CONFIG @ 0x2007
  2783                           ;	Oscillator Selection bits
  2784                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2785                           ;	Watchdog Timer Enable bit
  2786                           ;	WDTE = OFF, WDT disabled
  2787                           ;	Power-Up Timer Enable bit
  2788                           ;	PWRTE = OFF, PWRT disabled
  2789                           ;	GP3/MCLR pin function select
  2790                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2791                           ;	Brown-out Detect Enable bit
  2792                           ;	BOREN = OFF, BOD disabled
  2793                           ;	Code Protection bit
  2794                           ;	CP = OFF, Program Memory code protection is disabled
  2795                           ;	Data Code Protection bit
  2796                           ;	CPD = OFF, Data memory code protection is disabled
  2797     2007                     	org	8199
  2798     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     41      46

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MAX7219_DisplayData
    ___wmul->___lwdiv
    ___lwmod->___lwdiv
    ___lwdiv->_Adc_ReadResult
    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _MAX7219_DisplayData->___lwmod
    _MAX7219_ClearDisplay->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->_Dio_Pin_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2055
                                             34 BANK0      7     7      0
                           _Adc_Init
                     _Adc_ReadResult
                _Adc_StartConversion
                      _Dio_Pin_Write
                           _Dio_init
                          _Gpio_Init
               _MAX7219_ClearDisplay
                _MAX7219_DisplayData
                       _MAX7219_Init
                           _SPI_Init
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                             23 BANK0      6     2      4
                     _Adc_ReadResult (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     167
                                             23 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     174
                                             16 BANK0      7     3      4
                     _Adc_ReadResult (ARG)
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     186
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (1) _MAX7219_DisplayData                                  6     5      1     247
                                             28 BANK0      6     5      1
                     _SPI_Send_16bit
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _MAX7219_ClearDisplay                                 3     3      0     254
                                             19 BANK0      3     3      0
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     186
                                             10 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      88
                                              7 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              7 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (1) _Adc_StartConversion                                  2     2      0      29
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Adc_ReadResult                                       9     7      2       0
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                            12    12      0     144
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0      53
                                              2 BANK0      5     5      0
                       _Dio_Pin_Read
 ---------------------------------------------------------------------------------
 (5) _Dio_Pin_Read                                         2     2      0      29
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_ReadResult
   _Adc_StartConversion
   _Dio_Pin_Write
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_ClearDisplay
     _SPI_Send_16bit
       _Dio_Pin_Write
   _MAX7219_DisplayData
     _SPI_Send_16bit
     ___lwdiv (ARG)
       _Adc_ReadResult (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
   _MAX7219_Init
     _SPI_Send_16bit
   _SPI_Init
     _Dio_Config
   ___lwdiv
   ___lwmod
   ___wmul
     _Adc_ReadResult (ARG)
     ___lwdiv (ARG)

 _ISR (ROOT)
   _Dio_Pin_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     41      46     74.2%
STACK                0      0       0      0.0%
DATA                 0      0      46      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Sep 21 12:25:50 2024

        __end_of_Dio_Pin_Read 038D                             l9 0347                             pc 0002  
                          l14 0377                            l17 039F                            l43 03EB  
                          l60 03EF                            l70 02E0                            l47 03EB  
                          l63 03C3                            l66 02B0                            l91 0328  
                          l68 02B5                            fsr 0004           ___wmul@multiplicand 0039  
       __end_of_Dio_Pin_Write 0329                _SPI_Send_16bit 01A6                           l103 01A5  
                         l113 03B2                           l106 03E2                           l122 035F  
                         l129 01FE                           l280 02EE                           l282 0306  
                         l560 0241                           l570 027A                           u600 012E  
                         u601 012D                           u540 030E                           u700 0377  
                         _ISR 027B                           u541 030D                           u701 0376  
                         u630 0163                           u614 0134                           u631 0162  
                         u615 0132                           u720 02B5                           u640 0168  
                         u624 014D                           u800 0302                           u721 02B4  
                         u641 0167                           u625 014A                           u801 0301  
                         u730 02B9                           u554 0314                           u810 0208  
                         u731 02B8                           u715 03BA                           u555 0312  
                         u811 0207                           u564 0320                           u580 01C8  
                         u900 0259                           u565 031E                           u581 01C7  
                         u901 0258                           u670 0187                           u654 016E  
                         u590 01F9                           u574 01BA                           u830 0218  
                         u910 0263                           u671 0186                           u655 016C  
                         u591 01F8                           u575 01B7                           u831 0217  
                         u911 0262                           u664 017A                           u745 02C5  
                         u665 0178                           u825 020C                           u850 0229  
                         u930 0276                           u770 02E8                           u595 01F5  
                         u851 0228                           u931 0275                           u915 025F  
                         u771 02E7                           u684 0191                           u685 018F  
                         u845 0219                           u925 026A                           u694 019E  
                         u870 023D                           u695 019C                           u871 023C  
                         u855 0225                           u880 0249                           u865 0231  
                         u881 0248                           u785 02EF                           u970 0041  
                         u795 02F6                           u971 0040                           u980 0046  
                         u981 0045                           u990 0105                           u895 024D  
                         u991 0104                           _WPU 0095                           fsr0 0004  
                        ?_ISR 0020                          ISR@i 0025                          l1110 03E3  
                        l1102 0363                          l1112 03E5                          l1040 031A  
                        l1104 036E                          l1200 020B                          l1114 03E7  
                        l1042 0326                          l1106 0371                          l1210 022F  
                        l1202 0212                          l1140 03EC                          l1132 03EB  
                        l1116 03E8                          l1036 0309                          l1060 01D6  
                        l1052 01AD                          l1044 01A6                          l1108 038F  
                        l1212 0230                          l1204 0214                          l1220 0242  
                        l1300 00DD                          l1142 03B5                          l1070 0129  
                        l1038 030E                          l1062 01E1                          l1054 01C8  
                        l1046 01AA                          l1214 0237                          l1206 0218  
                        l1230 0259                          l1222 0249                          l1310 010A  
                        l1302 00EE                          l1144 03C2                          l1080 0163  
                        l1072 012E                          l1064 01E5                          l1056 01CD  
                        l1208 0229                          l1216 023D                          l1232 0263  
                        l1224 024C                          l1320 011A                          l1312 010D  
                        l1304 00F8                          l1138 03EB                          l1154 02C0  
                        l1146 02B0                          l1090 0187                          l1082 0168  
                        l1074 0143                          l1170 03D4                          l1066 01EC  
                        l1058 01D0                          l1234 0269                          l1226 0253  
                        l1314 010F                          l1306 00FF                          l1322 011F  
                        l1148 02B9                          l1092 0198                          l1084 0174  
                        l1076 015A                          l1172 03A0                          l1068 01F9  
                        l1236 0270                          l1228 0255                          l1180 02E1  
                        l1316 0110                          l1308 0105                          l1260 0016  
                        l1086 0180                          l1078 015D                          l1174 03A3  
                        l1094 0329                          l1238 0276                          l1190 0302  
                        l1182 02E4                          l1318 0115                          l1270 001F  
                        l1262 0019                          l1088 0182                          l1176 03AB  
                        l1096 0360                          l1184 02E8                          l1280 002F  
                        l1272 0021                          l1264 001B                          l1256 0014  
                        l1178 0348                          l1194 01FF                          l1186 02F5  
                        l1290 0047                          l1282 0038                          l1274 0022  
                        l1266 001C                          l1258 0015                          l1196 0202  
                        l1188 02FC                          l1292 004C                          l1284 003B  
                        l1276 0027                          l1268 001D                          l1198 0208  
                        l1294 006D                          l1286 0041                          l1278 002C  
                        l1296 009A                          l1288 0046                          l1298 00B3  
                        u1000 010A                          u1001 0109                          u1010 0125  
                        u1011 0124                          u1107 01DE                          _IOCB 0096  
                        u1077 0033                          u1087 00F3                          u1097 01D3  
                        _GPIO 0005                          i1l85 038C                          _main 0014  
                        btemp 005E                    _Dio_Config 0127                          start 000B  
                       ??_ISR 0022        __end_of_SPI_Send_16bit 01FF                         ?_main 0020  
                       _ANSEL 009F               __end_of___lwdiv 0242                         i1l193 02A7  
             __end_of___lwmod 027B                         i1l194 02A8                         u75_24 0380  
                       u75_25 037E                         u76_20 0389                         u76_21 0388  
            __end_of_Adc_Init 03F0                         main@i 0048              __end_of_SPI_Init 0360  
                       pclath 000A          __end_of_MAX7219_Init 0348                         status 0003  
                       wtemp0 005E  __end_of_MAX7219_ClearDisplay 0378              __end_of_Dio_init 03E3  
             __initialization 000C                  __end_of_main 0127               ?_SPI_Send_16bit 002A  
                      ??_main 0042                        _ADCON0 001F              ??_Adc_ReadResult 0029  
                      _ADRESH 001E                        _ADRESL 009E                        u102_20 027F  
                      u102_21 027E                        i1l1160 0389                        u103_20 0297  
                      u103_21 0296                        i1l1330 0297                        i1l1332 02A0  
                      i1l1324 027B                        i1l1166 038B                        i1l1158 037A  
                      i1l1326 027F                        u111_27 028B                        u104_20 029D  
                      i1l1328 0282                        u104_21 029B                        u105_20 029E  
                      u106_20 02A7                        u106_21 02A6                        _TRISIO 0085  
                 ?_Dio_Config 0027                   _DispenserOn 004B                        ___wmul 02E1  
                   ??___lwdiv 0000                     ??___lwmod 0000            SPI_Send_16bit@data 002A  
                      saved_w 005E           _MAX7219_DisplayData 038D                  _Dio_Pin_Read 0378  
     __end_of__initialization 0012      MAX7219_DisplayData@digit 0041          ?_MAX7219_DisplayData 003C  
              __pcstackCOMMON 0000                     ?_Adc_Init 0020             __end_of_Gpio_Init 03B3  
                   ?_SPI_Init 0020          _MAX7219_ClearDisplay 0360                     ?_Dio_init 0020  
                  __pbssBANK0 0049         MAX7219_ClearDisplay@i 0035         ??_MAX7219_DisplayData 003D  
                  __pmaintext 0014                       ?___wmul 0037        Dio_Pin_Write@pinNumber 0029  
                  __pintentry 0004                    ??_Adc_Init 0000                    ??_SPI_Init 0000  
                _MAX7219_Init 0329         ?_MAX7219_ClearDisplay 0020            Dio_Config@pullType 0029  
                  ??_Dio_init 0000                    __stringtab 03C4                       _Counter 0049  
            ??_SPI_Send_16bit 002C                       ___lwdiv 01FF                       ___lwmod 0242  
                     __ptext1 02E1                       __ptext2 0242                       __ptext3 01FF  
                     __ptext4 0348                       __ptext5 0329                       __ptext6 038D  
                     __ptext7 0360                       __ptext8 01A6                       __ptext9 0307  
                   _DIO_State 004C          end_of_initialization 0012                 _Dio_Config$75 002E  
                ??_Dio_Config 002A                 _Dio_Pin_Write 0307        ??_MAX7219_ClearDisplay 0033  
          __end_of_Dio_Config 01A6           _Adc_StartConversion 03B3          ?_Adc_StartConversion 0020  
              __end_of___wmul 0307                ?_Dio_Pin_Write 0027                     _Gpio_Init 03A0  
         start_initialization 000C  MAX7219_DisplayData@character 003C                   __end_of_ISR 02B0  
                 _BCD_Enabled 004D         ??_Adc_StartConversion 0027                      ??___wmul 0000  
           SPI_Send_16bit@bit 0031                    ?_Gpio_Init 0020                     ___latbits 0000  
               __pcstackBANK0 0020   __end_of_MAX7219_DisplayData 03A0              _MAX7219_No_Table 03CA  
         Dio_Config@direction 0027              ___lwdiv@dividend 0032               Dio_Config@state 0028  
             ??_Dio_Pin_Write 0028                      ?___lwdiv 0030                      ?___lwmod 0037  
                   __pstrings 03C4           Dio_Config@pinNumber 0030              ___lwdiv@quotient 0034  
           interrupt_function 0004                ___wmul@product 003B                      _Adc_Init 03E3  
                    _SPI_Init 0348                   __stringbase 03C9             ___wmul@multiplier 0037  
                 ??_Gpio_Init 0000                      _Dio_init 03D4                 ?_Dio_Pin_Read 0020  
          Dio_Pin_Write@state 0027                _Adc_ReadResult 02B0            __end_of__stringtab 03CA  
                    _main$782 0044                      _main$783 0046               ___lwdiv@divisor 0030  
              ??_Dio_Pin_Read 0020               ___lwdiv@counter 0036                      __ptext10 03A0  
                    __ptext11 03D4                      __ptext12 0127                      __ptext13 03B3  
                    __ptext14 02B0                      __ptext15 03E3                      __ptext16 027B  
                    __ptext17 0378        __end_of_Adc_ReadResult 02E1                 ?_MAX7219_Init 0020  
                  _INTCONbits 000B      __end_of_MAX7219_No_Table 03D4                      intlevel1 0000  
            ___lwmod@dividend 0039   __end_of_Adc_StartConversion 03C4               ?_Adc_ReadResult 0027  
                   stringcode 03C4    Adc_StartConversion@channel 0028         Dio_Pin_Read@pinNumber 0021  
              ??_MAX7219_Init 0000                    _OPTION_REG 0081               ___lwmod@divisor 0037  
             ___lwmod@counter 003B                      stringdir 03C4                      stringtab 03C4  
