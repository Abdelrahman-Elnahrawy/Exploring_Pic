

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 17:46:24 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,space=0,delta=2
    19                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x5E,2
    22     0000                     
    23                           ; Generated 17/08/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F675 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     GPIO            equ	5	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0019                     CMCON           equ	25	;# 
    79     001E                     ADRESH          equ	30	;# 
    80     001F                     ADCON0          equ	31	;# 
    81     0081                     OPTION_REG      equ	129	;# 
    82     0085                     TRISIO          equ	133	;# 
    83     008C                     PIE1            equ	140	;# 
    84     008E                     PCON            equ	142	;# 
    85     0090                     OSCCAL          equ	144	;# 
    86     0095                     WPU             equ	149	;# 
    87     0096                     IOC             equ	150	;# 
    88     0096                     IOCB            equ	150	;# 
    89     0099                     VRCON           equ	153	;# 
    90     009A                     EEDATA          equ	154	;# 
    91     009A                     EEDAT           equ	154	;# 
    92     009B                     EEADR           equ	155	;# 
    93     009C                     EECON1          equ	156	;# 
    94     009D                     EECON2          equ	157	;# 
    95     009E                     ADRESL          equ	158	;# 
    96     009F                     ANSEL           equ	159	;# 
    97     0000                     INDF            equ	0	;# 
    98     0001                     TMR0            equ	1	;# 
    99     0002                     PCL             equ	2	;# 
   100     0003                     STATUS          equ	3	;# 
   101     0004                     FSR             equ	4	;# 
   102     0005                     GPIO            equ	5	;# 
   103     000A                     PCLATH          equ	10	;# 
   104     000B                     INTCON          equ	11	;# 
   105     000C                     PIR1            equ	12	;# 
   106     000E                     TMR1            equ	14	;# 
   107     000E                     TMR1L           equ	14	;# 
   108     000F                     TMR1H           equ	15	;# 
   109     0010                     T1CON           equ	16	;# 
   110     0019                     CMCON           equ	25	;# 
   111     001E                     ADRESH          equ	30	;# 
   112     001F                     ADCON0          equ	31	;# 
   113     0081                     OPTION_REG      equ	129	;# 
   114     0085                     TRISIO          equ	133	;# 
   115     008C                     PIE1            equ	140	;# 
   116     008E                     PCON            equ	142	;# 
   117     0090                     OSCCAL          equ	144	;# 
   118     0095                     WPU             equ	149	;# 
   119     0096                     IOC             equ	150	;# 
   120     0096                     IOCB            equ	150	;# 
   121     0099                     VRCON           equ	153	;# 
   122     009A                     EEDATA          equ	154	;# 
   123     009A                     EEDAT           equ	154	;# 
   124     009B                     EEADR           equ	155	;# 
   125     009C                     EECON1          equ	156	;# 
   126     009D                     EECON2          equ	157	;# 
   127     009E                     ADRESL          equ	158	;# 
   128     009F                     ANSEL           equ	159	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     GPIO            equ	5	;# 
   135     000A                     PCLATH          equ	10	;# 
   136     000B                     INTCON          equ	11	;# 
   137     000C                     PIR1            equ	12	;# 
   138     000E                     TMR1            equ	14	;# 
   139     000E                     TMR1L           equ	14	;# 
   140     000F                     TMR1H           equ	15	;# 
   141     0010                     T1CON           equ	16	;# 
   142     0019                     CMCON           equ	25	;# 
   143     001E                     ADRESH          equ	30	;# 
   144     001F                     ADCON0          equ	31	;# 
   145     0081                     OPTION_REG      equ	129	;# 
   146     0085                     TRISIO          equ	133	;# 
   147     008C                     PIE1            equ	140	;# 
   148     008E                     PCON            equ	142	;# 
   149     0090                     OSCCAL          equ	144	;# 
   150     0095                     WPU             equ	149	;# 
   151     0096                     IOC             equ	150	;# 
   152     0096                     IOCB            equ	150	;# 
   153     0099                     VRCON           equ	153	;# 
   154     009A                     EEDATA          equ	154	;# 
   155     009A                     EEDAT           equ	154	;# 
   156     009B                     EEADR           equ	155	;# 
   157     009C                     EECON1          equ	156	;# 
   158     009D                     EECON2          equ	157	;# 
   159     009E                     ADRESL          equ	158	;# 
   160     009F                     ANSEL           equ	159	;# 
   161     0000                     INDF            equ	0	;# 
   162     0001                     TMR0            equ	1	;# 
   163     0002                     PCL             equ	2	;# 
   164     0003                     STATUS          equ	3	;# 
   165     0004                     FSR             equ	4	;# 
   166     0005                     GPIO            equ	5	;# 
   167     000A                     PCLATH          equ	10	;# 
   168     000B                     INTCON          equ	11	;# 
   169     000C                     PIR1            equ	12	;# 
   170     000E                     TMR1            equ	14	;# 
   171     000E                     TMR1L           equ	14	;# 
   172     000F                     TMR1H           equ	15	;# 
   173     0010                     T1CON           equ	16	;# 
   174     0019                     CMCON           equ	25	;# 
   175     001E                     ADRESH          equ	30	;# 
   176     001F                     ADCON0          equ	31	;# 
   177     0081                     OPTION_REG      equ	129	;# 
   178     0085                     TRISIO          equ	133	;# 
   179     008C                     PIE1            equ	140	;# 
   180     008E                     PCON            equ	142	;# 
   181     0090                     OSCCAL          equ	144	;# 
   182     0095                     WPU             equ	149	;# 
   183     0096                     IOC             equ	150	;# 
   184     0096                     IOCB            equ	150	;# 
   185     0099                     VRCON           equ	153	;# 
   186     009A                     EEDATA          equ	154	;# 
   187     009A                     EEDAT           equ	154	;# 
   188     009B                     EEADR           equ	155	;# 
   189     009C                     EECON1          equ	156	;# 
   190     009D                     EECON2          equ	157	;# 
   191     009E                     ADRESL          equ	158	;# 
   192     009F                     ANSEL           equ	159	;# 
   193     0000                     INDF            equ	0	;# 
   194     0001                     TMR0            equ	1	;# 
   195     0002                     PCL             equ	2	;# 
   196     0003                     STATUS          equ	3	;# 
   197     0004                     FSR             equ	4	;# 
   198     0005                     GPIO            equ	5	;# 
   199     000A                     PCLATH          equ	10	;# 
   200     000B                     INTCON          equ	11	;# 
   201     000C                     PIR1            equ	12	;# 
   202     000E                     TMR1            equ	14	;# 
   203     000E                     TMR1L           equ	14	;# 
   204     000F                     TMR1H           equ	15	;# 
   205     0010                     T1CON           equ	16	;# 
   206     0019                     CMCON           equ	25	;# 
   207     001E                     ADRESH          equ	30	;# 
   208     001F                     ADCON0          equ	31	;# 
   209     0081                     OPTION_REG      equ	129	;# 
   210     0085                     TRISIO          equ	133	;# 
   211     008C                     PIE1            equ	140	;# 
   212     008E                     PCON            equ	142	;# 
   213     0090                     OSCCAL          equ	144	;# 
   214     0095                     WPU             equ	149	;# 
   215     0096                     IOC             equ	150	;# 
   216     0096                     IOCB            equ	150	;# 
   217     0099                     VRCON           equ	153	;# 
   218     009A                     EEDATA          equ	154	;# 
   219     009A                     EEDAT           equ	154	;# 
   220     009B                     EEADR           equ	155	;# 
   221     009C                     EECON1          equ	156	;# 
   222     009D                     EECON2          equ	157	;# 
   223     009E                     ADRESL          equ	158	;# 
   224     009F                     ANSEL           equ	159	;# 
   225     0000                     INDF            equ	0	;# 
   226     0001                     TMR0            equ	1	;# 
   227     0002                     PCL             equ	2	;# 
   228     0003                     STATUS          equ	3	;# 
   229     0004                     FSR             equ	4	;# 
   230     0005                     GPIO            equ	5	;# 
   231     000A                     PCLATH          equ	10	;# 
   232     000B                     INTCON          equ	11	;# 
   233     000C                     PIR1            equ	12	;# 
   234     000E                     TMR1            equ	14	;# 
   235     000E                     TMR1L           equ	14	;# 
   236     000F                     TMR1H           equ	15	;# 
   237     0010                     T1CON           equ	16	;# 
   238     0019                     CMCON           equ	25	;# 
   239     001E                     ADRESH          equ	30	;# 
   240     001F                     ADCON0          equ	31	;# 
   241     0081                     OPTION_REG      equ	129	;# 
   242     0085                     TRISIO          equ	133	;# 
   243     008C                     PIE1            equ	140	;# 
   244     008E                     PCON            equ	142	;# 
   245     0090                     OSCCAL          equ	144	;# 
   246     0095                     WPU             equ	149	;# 
   247     0096                     IOC             equ	150	;# 
   248     0096                     IOCB            equ	150	;# 
   249     0099                     VRCON           equ	153	;# 
   250     009A                     EEDATA          equ	154	;# 
   251     009A                     EEDAT           equ	154	;# 
   252     009B                     EEADR           equ	155	;# 
   253     009C                     EECON1          equ	156	;# 
   254     009D                     EECON2          equ	157	;# 
   255     009E                     ADRESL          equ	158	;# 
   256     009F                     ANSEL           equ	159	;# 
   257     0000                     INDF            equ	0	;# 
   258     0001                     TMR0            equ	1	;# 
   259     0002                     PCL             equ	2	;# 
   260     0003                     STATUS          equ	3	;# 
   261     0004                     FSR             equ	4	;# 
   262     0005                     GPIO            equ	5	;# 
   263     000A                     PCLATH          equ	10	;# 
   264     000B                     INTCON          equ	11	;# 
   265     000C                     PIR1            equ	12	;# 
   266     000E                     TMR1            equ	14	;# 
   267     000E                     TMR1L           equ	14	;# 
   268     000F                     TMR1H           equ	15	;# 
   269     0010                     T1CON           equ	16	;# 
   270     0019                     CMCON           equ	25	;# 
   271     001E                     ADRESH          equ	30	;# 
   272     001F                     ADCON0          equ	31	;# 
   273     0081                     OPTION_REG      equ	129	;# 
   274     0085                     TRISIO          equ	133	;# 
   275     008C                     PIE1            equ	140	;# 
   276     008E                     PCON            equ	142	;# 
   277     0090                     OSCCAL          equ	144	;# 
   278     0095                     WPU             equ	149	;# 
   279     0096                     IOC             equ	150	;# 
   280     0096                     IOCB            equ	150	;# 
   281     0099                     VRCON           equ	153	;# 
   282     009A                     EEDATA          equ	154	;# 
   283     009A                     EEDAT           equ	154	;# 
   284     009B                     EEADR           equ	155	;# 
   285     009C                     EECON1          equ	156	;# 
   286     009D                     EECON2          equ	157	;# 
   287     009E                     ADRESL          equ	158	;# 
   288     009F                     ANSEL           equ	159	;# 
   289                           
   290                           	psect	strings
   291     01A3                     __pstrings:
   292     01A3                     stringtab:
   293     01A3                     __stringtab:
   294     01A3                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297     01A3                     stringdir:
   298     01A3  3001               	movlw	high stringdir
   299     01A4  008A               	movwf	10
   300     01A5  0804               	movf	4,w
   301     01A6  0A84               	incf	4,f
   302     01A7  0782               	addwf	2,f
   303     01A8                     __stringbase:
   304     01A8  3400               	retlw	0
   305     01A9                     __end_of__stringtab:
   306     01A9                     _MAX7219_No_Table:
   307     01A9  347E               	retlw	126
   308     01AA  3430               	retlw	48
   309     01AB  346D               	retlw	109
   310     01AC  3479               	retlw	121
   311     01AD  3433               	retlw	51
   312     01AE  345B               	retlw	91
   313     01AF  345F               	retlw	95
   314     01B0  3470               	retlw	112
   315     01B1  347F               	retlw	127
   316     01B2  347B               	retlw	123
   317     01B3                     __end_of_MAX7219_No_Table:
   318     000B                     _INTCONbits     set	11
   319     0005                     _GPIO           set	5
   320     001E                     _ADRESH         set	30
   321     001F                     _ADCON0         set	31
   322     0096                     _IOCB           set	150
   323     0095                     _WPU            set	149
   324     0081                     _OPTION_REG     set	129
   325     0085                     _TRISIO         set	133
   326     009E                     _ADRESL         set	158
   327     009F                     _ANSEL          set	159
   328                           
   329                           	psect	cinit
   330     000C                     start_initialization:	
   331                           ; #config settings
   332                           
   333     000C                     __initialization:
   334                           
   335                           ; Clear objects allocated to BANK0
   336     000C  1283               	bcf	3,5	;RP0=0, select bank0
   337     000D  01B1               	clrf	__pbssBANK0& (0+127)
   338     000E  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   339     000F  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   340     0010  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   341     0011                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344     0011                     __end_of__initialization:
   345     0011  0183               	clrf	3
   346     0012  29C2               	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssBANK0
   349     0031                     __pbssBANK0:
   350     0031                     _BCD_Enabled:
   351     0031                     	ds	1
   352     0032                     _nosa:
   353     0032                     	ds	1
   354     0033                     _previous_gp3_state:
   355     0033                     	ds	1
   356     0034                     _DIO_State:
   357     0034                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360     0000                     __pcstackCOMMON:
   361     0000                     ??_MAX7219_Init:
   362     0000                     ??_Dio_init:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0000                     ??_Gpio_Init:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0000                     ??_SPI_Init:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0000                     ??_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           	psect	cstackBANK0
   376     0020                     __pcstackBANK0:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0020                     ?_MAX7219_Init:
   380     0020                     ?_Dio_init:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0020                     ?_Gpio_Init:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0020                     ?_SPI_Init:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0020                     ?_ISR:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0020                     ?i1_Dio_Pin_Write:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0020                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0020                     i1Dio_Pin_Write@state:	
   399                           ; 2 bytes @ 0x0
   400                           
   401                           
   402                           ; 1 bytes @ 0x0
   403     0020                     	ds	1
   404     0021                     ??i1_Dio_Pin_Write:
   405                           
   406                           ; 1 bytes @ 0x1
   407     0021                     	ds	1
   408     0022                     i1Dio_Pin_Write@pinNumber:
   409                           
   410                           ; 1 bytes @ 0x2
   411     0022                     	ds	1
   412     0023                     ??_ISR:
   413                           
   414                           ; 1 bytes @ 0x3
   415     0023                     	ds	2
   416     0025                     ?_Dio_Pin_Write:
   417     0025                     ?_Dio_Config:	
   418                           ; 1 bytes @ 0x5
   419                           
   420     0025                     Dio_Pin_Write@state:	
   421                           ; 1 bytes @ 0x5
   422                           
   423     0025                     Dio_Config@direction:	
   424                           ; 1 bytes @ 0x5
   425                           
   426                           
   427                           ; 1 bytes @ 0x5
   428     0025                     	ds	1
   429     0026                     Dio_Config@state:
   430     0026                     ??_Dio_Pin_Write:	
   431                           ; 1 bytes @ 0x6
   432                           
   433                           
   434                           ; 1 bytes @ 0x6
   435     0026                     	ds	1
   436     0027                     Dio_Pin_Write@pinNumber:
   437     0027                     Dio_Config@pullType:	
   438                           ; 1 bytes @ 0x7
   439                           
   440                           
   441                           ; 1 bytes @ 0x7
   442     0027                     	ds	1
   443     0028                     ?_SPI_Send_16bit:
   444     0028                     SPI_Send_16bit@data:	
   445                           ; 1 bytes @ 0x8
   446                           
   447     0028                     ??_Dio_Config:	
   448                           ; 2 bytes @ 0x8
   449                           
   450                           
   451                           ; 1 bytes @ 0x8
   452     0028                     	ds	2
   453     002A                     ??_SPI_Send_16bit:
   454                           
   455                           ; 1 bytes @ 0xA
   456     002A                     	ds	2
   457     002C                     _Dio_Config$56:
   458                           
   459                           ; 2 bytes @ 0xC
   460     002C                     	ds	2
   461     002E                     Dio_Config@pinNumber:
   462                           
   463                           ; 1 bytes @ 0xE
   464     002E                     	ds	1
   465     002F                     SPI_Send_16bit@bit:
   466                           
   467                           ; 2 bytes @ 0xF
   468     002F                     	ds	2
   469                           
   470                           	psect	maintext
   471     01C2                     __pmaintext:	
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 30 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  2  130[None  ] int 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0
   491 ;;      Params:         0       0
   492 ;;      Locals:         0       0
   493 ;;      Temps:          0       0
   494 ;;      Totals:         0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels required when called: 5
   497 ;; This function calls:
   498 ;;		_Dio_init
   499 ;;		_Gpio_Init
   500 ;;		_MAX7219_Init
   501 ;;		_SPI_Init
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507     01C2                     _main:	
   508                           ;psect for function _main
   509                           
   510     01C2                     l984:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   513                           
   514                           
   515                           ;main.c: 31:         Gpio_Init();
   516     01C2  2190               	fcall	_Gpio_Init
   517     01C3                     l986:
   518                           
   519                           ;main.c: 32:         Dio_init();
   520     01C3  21B3               	fcall	_Dio_init
   521     01C4                     l988:
   522                           
   523                           ;main.c: 34:         SPI_Init();
   524     01C4  2178               	fcall	_SPI_Init
   525     01C5                     l990:
   526                           
   527                           ;main.c: 35:       MAX7219_Init();
   528     01C5  2159               	fcall	_MAX7219_Init
   529     01C6                     l992:
   530                           
   531                           ;main.c: 37:    IOCB |= (1 << 3);
   532     01C6  1683               	bsf	3,5	;RP0=1, select bank1
   533     01C7  1596               	bsf	22,3	;volatile
   534     01C8                     l994:
   535                           
   536                           ;main.c: 40:     INTCONbits.GIE = 1;
   537     01C8  178B               	bsf	11,7	;volatile
   538     01C9                     l996:
   539                           
   540                           ;main.c: 41:     INTCONbits.PEIE = 1;
   541     01C9  170B               	bsf	11,6	;volatile
   542     01CA                     l998:
   543                           
   544                           ;main.c: 42:     INTCONbits.GPIE = 1;
   545     01CA  158B               	bsf	11,3	;volatile
   546     01CB                     l131:	
   547                           ;main.c: 44:     while (1){
   548                           
   549     01CB                     l132:	
   550                           ;main.c: 46:     }
   551                           
   552     01CB  29CB               	goto	l131
   553     01CC  280B               	ljmp	start
   554     01CD                     __end_of_main:
   555                           
   556                           	psect	text1
   557     0178                     __ptext1:	
   558 ;; *************** function _SPI_Init *****************
   559 ;; Defined at:
   560 ;;		line 12 in file "SERVICE/scr/Spi.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0
   574 ;;      Params:         0       0
   575 ;;      Locals:         0       0
   576 ;;      Temps:          0       0
   577 ;;      Totals:         0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 3
   581 ;; This function calls:
   582 ;;		_Dio_Config
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     0178                     _SPI_Init:	
   589                           ;psect for function _SPI_Init
   590                           
   591     0178                     l970:	
   592                           ;incstack = 0
   593                           ; Regs used in _SPI_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   594                           
   595                           
   596                           ;SERVICE/scr/Spi.c: 13:  Dio_Config (1, 1, 1 , 0);
   597     0178  1283               	bcf	3,5	;RP0=0, select bank0
   598     0179  01A5               	clrf	Dio_Config@direction
   599     017A  0AA5               	incf	Dio_Config@direction,f
   600     017B  01A6               	clrf	Dio_Config@state
   601     017C  0AA6               	incf	Dio_Config@state,f
   602     017D  01A7               	clrf	Dio_Config@pullType
   603     017E  3001               	movlw	1
   604     017F  2013               	fcall	_Dio_Config
   605                           
   606                           ;SERVICE/scr/Spi.c: 14:  Dio_Config (2, 1, 0 , 0);
   607     0180  1283               	bcf	3,5	;RP0=0, select bank0
   608     0181  01A5               	clrf	Dio_Config@direction
   609     0182  0AA5               	incf	Dio_Config@direction,f
   610     0183  01A6               	clrf	Dio_Config@state
   611     0184  01A7               	clrf	Dio_Config@pullType
   612     0185  3002               	movlw	2
   613     0186  2013               	fcall	_Dio_Config
   614                           
   615                           ;SERVICE/scr/Spi.c: 15:  Dio_Config (5, 1, 1 , 0);
   616     0187  1283               	bcf	3,5	;RP0=0, select bank0
   617     0188  01A5               	clrf	Dio_Config@direction
   618     0189  0AA5               	incf	Dio_Config@direction,f
   619     018A  01A6               	clrf	Dio_Config@state
   620     018B  0AA6               	incf	Dio_Config@state,f
   621     018C  01A7               	clrf	Dio_Config@pullType
   622     018D  3005               	movlw	5
   623     018E  2013               	fcall	_Dio_Config
   624     018F                     l97:
   625     018F  0008               	return
   626     0190                     __end_of_SPI_Init:
   627                           
   628                           	psect	text2
   629     0159                     __ptext2:	
   630 ;; *************** function _MAX7219_Init *****************
   631 ;; Defined at:
   632 ;;		line 8 in file "HAL/scr/max7219.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0
   646 ;;      Params:         0       0
   647 ;;      Locals:         0       0
   648 ;;      Temps:          0       0
   649 ;;      Totals:         0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 4
   653 ;; This function calls:
   654 ;;		_SPI_Send_16bit
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     0159                     _MAX7219_Init:	
   661                           ;psect for function _MAX7219_Init
   662                           
   663     0159                     l972:	
   664                           ;incstack = 0
   665                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;HAL/scr/max7219.c: 9:     SPI_Send_16bit(0x0900);
   669     0159  3000               	movlw	0
   670     015A  1283               	bcf	3,5	;RP0=0, select bank0
   671     015B  00A8               	movwf	SPI_Send_16bit@data
   672     015C  3009               	movlw	9
   673     015D  00A9               	movwf	SPI_Send_16bit@data+1
   674     015E  2092               	fcall	_SPI_Send_16bit
   675                           
   676                           ;HAL/scr/max7219.c: 10:     SPI_Send_16bit(0x0A0F);
   677     015F  300F               	movlw	15
   678     0160  1283               	bcf	3,5	;RP0=0, select bank0
   679     0161  00A8               	movwf	SPI_Send_16bit@data
   680     0162  300A               	movlw	10
   681     0163  00A9               	movwf	SPI_Send_16bit@data+1
   682     0164  2092               	fcall	_SPI_Send_16bit
   683                           
   684                           ;HAL/scr/max7219.c: 11:     SPI_Send_16bit(0xFBF7);
   685     0165  30F7               	movlw	247
   686     0166  1283               	bcf	3,5	;RP0=0, select bank0
   687     0167  00A8               	movwf	SPI_Send_16bit@data
   688     0168  30FB               	movlw	251
   689     0169  00A9               	movwf	SPI_Send_16bit@data+1
   690     016A  2092               	fcall	_SPI_Send_16bit
   691                           
   692                           ;HAL/scr/max7219.c: 12:     SPI_Send_16bit(0x0C01);
   693     016B  3001               	movlw	1
   694     016C  1283               	bcf	3,5	;RP0=0, select bank0
   695     016D  00A8               	movwf	SPI_Send_16bit@data
   696     016E  300C               	movlw	12
   697     016F  00A9               	movwf	SPI_Send_16bit@data+1
   698     0170  2092               	fcall	_SPI_Send_16bit
   699                           
   700                           ;HAL/scr/max7219.c: 13:     SPI_Send_16bit(0x0F00);
   701     0171  3000               	movlw	0
   702     0172  1283               	bcf	3,5	;RP0=0, select bank0
   703     0173  00A8               	movwf	SPI_Send_16bit@data
   704     0174  300F               	movlw	15
   705     0175  00A9               	movwf	SPI_Send_16bit@data+1
   706     0176  2092               	fcall	_SPI_Send_16bit
   707     0177                     l152:
   708     0177  0008               	return
   709     0178                     __end_of_MAX7219_Init:
   710                           
   711                           	psect	text3
   712     0092                     __ptext3:	
   713 ;; *************** function _SPI_Send_16bit *****************
   714 ;; Defined at:
   715 ;;		line 39 in file "SERVICE/scr/Spi.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  data            2    8[BANK0 ] unsigned short 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  bit             2   15[BANK0 ] int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0
   729 ;;      Params:         0       2
   730 ;;      Locals:         0       2
   731 ;;      Temps:          0       5
   732 ;;      Totals:         0       9
   733 ;;Total ram usage:        9 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 3
   736 ;; This function calls:
   737 ;;		_Dio_Pin_Write
   738 ;; This function is called by:
   739 ;;		_MAX7219_Init
   740 ;;		_MAX7219_ClearDisplay
   741 ;;		_MAX7219_DisplayData
   742 ;;		_MAX7219_Shutdown
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746     0092                     _SPI_Send_16bit:	
   747                           ;psect for function _SPI_Send_16bit
   748                           
   749     0092                     l936:	
   750                           ;incstack = 0
   751                           ; Regs used in _SPI_Send_16bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   752                           
   753                           
   754                           ;SERVICE/scr/Spi.c: 40:     Dio_Pin_Write(5, 0);
   755     0092  1283               	bcf	3,5	;RP0=0, select bank0
   756     0093  01A5               	clrf	Dio_Pin_Write@state
   757     0094  3005               	movlw	5
   758     0095  2115               	fcall	_Dio_Pin_Write
   759     0096                     l938:
   760                           
   761                           ;SERVICE/scr/Spi.c: 41:     for (int bit =0 ; bit <16 ; bit ++ ) {
   762     0096  1283               	bcf	3,5	;RP0=0, select bank0
   763     0097  01AF               	clrf	SPI_Send_16bit@bit
   764     0098  01B0               	clrf	SPI_Send_16bit@bit+1
   765     0099                     l944:
   766                           
   767                           ;SERVICE/scr/Spi.c: 43:         if (data & (1 << (15 - bit))) {
   768     0099  1283               	bcf	3,5	;RP0=0, select bank0
   769     009A  082F               	movf	SPI_Send_16bit@bit,w
   770     009B  3C0F               	sublw	15
   771     009C  00AA               	movwf	??_SPI_Send_16bit
   772     009D  0AAA               	incf	??_SPI_Send_16bit,f
   773     009E  3001               	movlw	1
   774     009F  00AB               	movwf	??_SPI_Send_16bit+1
   775     00A0  3000               	movlw	0
   776     00A1  00AC               	movwf	??_SPI_Send_16bit+2
   777     00A2  28A6               	goto	u454
   778     00A3                     u455:
   779     00A3  1003               	clrc
   780     00A4  0DAB               	rlf	??_SPI_Send_16bit+1,f
   781     00A5  0DAC               	rlf	??_SPI_Send_16bit+2,f
   782     00A6                     u454:
   783     00A6  0BAA               	decfsz	??_SPI_Send_16bit,f
   784     00A7  28A3               	goto	u455
   785     00A8  0828               	movf	SPI_Send_16bit@data,w
   786     00A9  052B               	andwf	??_SPI_Send_16bit+1,w
   787     00AA  00AD               	movwf	??_SPI_Send_16bit+3
   788     00AB  0829               	movf	SPI_Send_16bit@data+1,w
   789     00AC  052C               	andwf	??_SPI_Send_16bit+2,w
   790     00AD  00AE               	movwf	??_SPI_Send_16bit+4
   791     00AE  082D               	movf	??_SPI_Send_16bit+3,w
   792     00AF  042E               	iorwf	??_SPI_Send_16bit+4,w
   793     00B0  1903               	btfsc	3,2
   794     00B1  28B3               	goto	u461
   795     00B2  28B4               	goto	u460
   796     00B3                     u461:
   797     00B3  28B9               	goto	l948
   798     00B4                     u460:
   799     00B4                     l946:
   800                           
   801                           ;SERVICE/scr/Spi.c: 44:             Dio_Pin_Write(1, 1);
   802     00B4  01A5               	clrf	Dio_Pin_Write@state
   803     00B5  0AA5               	incf	Dio_Pin_Write@state,f
   804     00B6  3001               	movlw	1
   805     00B7  2115               	fcall	_Dio_Pin_Write
   806                           
   807                           ;SERVICE/scr/Spi.c: 45:         } else {
   808     00B8  28BC               	goto	l950
   809     00B9                     l948:
   810                           
   811                           ;SERVICE/scr/Spi.c: 46:            Dio_Pin_Write(1, 0) ;
   812     00B9  01A5               	clrf	Dio_Pin_Write@state
   813     00BA  3001               	movlw	1
   814     00BB  2115               	fcall	_Dio_Pin_Write
   815     00BC                     l950:
   816                           
   817                           ;SERVICE/scr/Spi.c: 49:   _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Wr
      +                          ite(2, 1); _delay((unsigned long)((50)*(4000000/4000000.0)));; Dio_Pin_Write(2, 0);;
   818     00BC  3010               	movlw	16
   819     00BD  1283               	bcf	3,5	;RP0=0, select bank0
   820     00BE  00AA               	movwf	??_SPI_Send_16bit
   821     00BF                     u617:
   822     00BF  0BAA               	decfsz	??_SPI_Send_16bit,f
   823     00C0  28BF               	goto	u617
   824     00C1  0000               	nop
   825     00C2                     l952:
   826     00C2  1283               	bcf	3,5	;RP0=0, select bank0
   827     00C3  01A5               	clrf	Dio_Pin_Write@state
   828     00C4  0AA5               	incf	Dio_Pin_Write@state,f
   829     00C5  3002               	movlw	2
   830     00C6  2115               	fcall	_Dio_Pin_Write
   831     00C7  3010               	movlw	16
   832     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   833     00C9  00AA               	movwf	??_SPI_Send_16bit
   834     00CA                     u627:
   835     00CA  0BAA               	decfsz	??_SPI_Send_16bit,f
   836     00CB  28CA               	goto	u627
   837     00CC  0000               	nop
   838     00CD                     l954:
   839     00CD  1283               	bcf	3,5	;RP0=0, select bank0
   840     00CE  01A5               	clrf	Dio_Pin_Write@state
   841     00CF  3002               	movlw	2
   842     00D0  2115               	fcall	_Dio_Pin_Write
   843     00D1                     l956:
   844                           
   845                           ;SERVICE/scr/Spi.c: 50:     }
   846     00D1  3001               	movlw	1
   847     00D2  1283               	bcf	3,5	;RP0=0, select bank0
   848     00D3  07AF               	addwf	SPI_Send_16bit@bit,f
   849     00D4  1803               	skipnc
   850     00D5  0AB0               	incf	SPI_Send_16bit@bit+1,f
   851     00D6  3000               	movlw	0
   852     00D7  07B0               	addwf	SPI_Send_16bit@bit+1,f
   853     00D8                     l958:
   854     00D8  0830               	movf	SPI_Send_16bit@bit+1,w
   855     00D9  3A80               	xorlw	128
   856     00DA  00DF               	movwf	btemp+1
   857     00DB  3080               	movlw	128
   858     00DC  025F               	subwf	btemp+1,w
   859     00DD  1D03               	skipz
   860     00DE  28E1               	goto	u475
   861     00DF  3010               	movlw	16
   862     00E0  022F               	subwf	SPI_Send_16bit@bit,w
   863     00E1                     u475:
   864     00E1  1C03               	skipc
   865     00E2  28E4               	goto	u471
   866     00E3  28E5               	goto	u470
   867     00E4                     u471:
   868     00E4  2899               	goto	l944
   869     00E5                     u470:
   870     00E5                     l960:
   871                           
   872                           ;SERVICE/scr/Spi.c: 51:     Dio_Pin_Write(5, 1);
   873     00E5  1283               	bcf	3,5	;RP0=0, select bank0
   874     00E6  01A5               	clrf	Dio_Pin_Write@state
   875     00E7  0AA5               	incf	Dio_Pin_Write@state,f
   876     00E8  3005               	movlw	5
   877     00E9  2115               	fcall	_Dio_Pin_Write
   878     00EA                     l104:
   879     00EA  0008               	return
   880     00EB                     __end_of_SPI_Send_16bit:
   881                           
   882                           	psect	text4
   883     0115                     __ptext4:	
   884 ;; *************** function _Dio_Pin_Write *****************
   885 ;; Defined at:
   886 ;;		line 30 in file "MCAL/scr/Dio.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  pinNumber       1    wreg     unsigned char 
   889 ;;  state           1    5[BANK0 ] unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  pinNumber       1    7[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0
   901 ;;      Params:         0       1
   902 ;;      Locals:         0       1
   903 ;;      Temps:          0       1
   904 ;;      Totals:         0       3
   905 ;;Total ram usage:        3 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 2
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_SPI_Send_16bit
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915     0115                     _Dio_Pin_Write:	
   916                           ;psect for function _Dio_Pin_Write
   917                           
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _Dio_Pin_Write: [wreg+status,2+status,0]
   921                           ;Dio_Pin_Write@pinNumber stored from wreg
   922     0115  1283               	bcf	3,5	;RP0=0, select bank0
   923     0116  00A7               	movwf	Dio_Pin_Write@pinNumber
   924     0117                     l904:
   925                           
   926                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
   927     0117  0325               	decf	Dio_Pin_Write@state,w
   928     0118  1D03               	btfss	3,2
   929     0119  291B               	goto	u321
   930     011A  291C               	goto	u320
   931     011B                     u321:
   932     011B  2928               	goto	l908
   933     011C                     u320:
   934     011C                     l906:
   935                           
   936                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
   937     011C  3001               	movlw	1
   938     011D  00A6               	movwf	??_Dio_Pin_Write
   939     011E  0A27               	incf	Dio_Pin_Write@pinNumber,w
   940     011F  2922               	goto	u334
   941     0120                     u335:
   942     0120  1003               	clrc
   943     0121  0DA6               	rlf	??_Dio_Pin_Write,f
   944     0122                     u334:
   945     0122  3EFF               	addlw	-1
   946     0123  1D03               	skipz
   947     0124  2920               	goto	u335
   948     0125  0826               	movf	??_Dio_Pin_Write,w
   949     0126  04B4               	iorwf	_DIO_State,f
   950                           
   951                           ;MCAL/scr/Dio.c: 34:     }
   952     0127  2934               	goto	l910
   953     0128                     l908:
   954                           
   955                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
   956     0128  3001               	movlw	1
   957     0129  00A6               	movwf	??_Dio_Pin_Write
   958     012A  0A27               	incf	Dio_Pin_Write@pinNumber,w
   959     012B  292E               	goto	u344
   960     012C                     u345:
   961     012C  1003               	clrc
   962     012D  0DA6               	rlf	??_Dio_Pin_Write,f
   963     012E                     u344:
   964     012E  3EFF               	addlw	-1
   965     012F  1D03               	skipz
   966     0130  292C               	goto	u345
   967     0131  0826               	movf	??_Dio_Pin_Write,w
   968     0132  3AFF               	xorlw	255
   969     0133  05B4               	andwf	_DIO_State,f
   970     0134                     l910:
   971                           
   972                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
   973     0134  0834               	movf	_DIO_State,w
   974     0135  0085               	movwf	5	;volatile
   975     0136                     l66:
   976     0136  0008               	return
   977     0137                     __end_of_Dio_Pin_Write:
   978                           
   979                           	psect	text5
   980     0190                     __ptext5:	
   981 ;; *************** function _Gpio_Init *****************
   982 ;; Defined at:
   983 ;;		line 23 in file "MCAL/scr/gpio.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0
   997 ;;      Params:         0       0
   998 ;;      Locals:         0       0
   999 ;;      Temps:          0       0
  1000 ;;      Totals:         0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 2
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     0190                     _Gpio_Init:	
  1012                           ;psect for function _Gpio_Init
  1013                           
  1014     0190                     l964:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _Gpio_Init: [wreg+status,2+status,0]
  1017                           
  1018                           
  1019                           ;MCAL/scr/gpio.c: 30:         ANSEL |= (1 << 0);
  1020     0190  1683               	bsf	3,5	;RP0=1, select bank1
  1021     0191  141F               	bsf	31,0	;volatile
  1022                           
  1023                           ;MCAL/scr/gpio.c: 31:         TRISIO |= (1 << 0);
  1024     0192  1405               	bsf	5,0	;volatile
  1025     0193                     l966:
  1026                           
  1027                           ;MCAL/scr/gpio.c: 52:         ANSEL &= ~(1 << 1);
  1028     0193  30FD               	movlw	253
  1029     0194  059F               	andwf	31,f	;volatile
  1030                           
  1031                           ;MCAL/scr/gpio.c: 53:         TRISIO &= ~(1 << 1);
  1032     0195  30FD               	movlw	253
  1033     0196  0585               	andwf	5,f	;volatile
  1034                           
  1035                           ;MCAL/scr/gpio.c: 70:         ANSEL &= ~(1 << 2);
  1036     0197  30FB               	movlw	251
  1037     0198  059F               	andwf	31,f	;volatile
  1038                           
  1039                           ;MCAL/scr/gpio.c: 71:         TRISIO &= ~(1 << 2);
  1040     0199  30FB               	movlw	251
  1041     019A  0585               	andwf	5,f	;volatile
  1042     019B                     l968:
  1043                           
  1044                           ;MCAL/scr/gpio.c: 76:         TRISIO |= (1 << 3);
  1045     019B  1585               	bsf	5,3	;volatile
  1046                           
  1047                           ;MCAL/scr/gpio.c: 83:         ANSEL &= ~(1 << 3);
  1048     019C  30F7               	movlw	247
  1049     019D  059F               	andwf	31,f	;volatile
  1050                           
  1051                           ;MCAL/scr/gpio.c: 84:         TRISIO &= ~(1 << 4);
  1052     019E  30EF               	movlw	239
  1053     019F  0585               	andwf	5,f	;volatile
  1054                           
  1055                           ;MCAL/scr/gpio.c: 102:         TRISIO &= ~(1 << 5);
  1056     01A0  30DF               	movlw	223
  1057     01A1  0585               	andwf	5,f	;volatile
  1058     01A2                     l88:
  1059     01A2  0008               	return
  1060     01A3                     __end_of_Gpio_Init:
  1061                           
  1062                           	psect	text6
  1063     01B3                     __ptext6:	
  1064 ;; *************** function _Dio_init *****************
  1065 ;; Defined at:
  1066 ;;		line 60 in file "MCAL/scr/Dio.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0
  1080 ;;      Params:         0       0
  1081 ;;      Locals:         0       0
  1082 ;;      Temps:          0       0
  1083 ;;      Totals:         0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 3
  1087 ;; This function calls:
  1088 ;;		_Dio_Config
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094     01B3                     _Dio_init:	
  1095                           ;psect for function _Dio_init
  1096                           
  1097     01B3                     l962:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _Dio_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1100                           
  1101                           
  1102                           ;MCAL/scr/Dio.c: 72:        Dio_Config (3, 0, 0, 1);
  1103     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1104     01B4  01A5               	clrf	Dio_Config@direction
  1105     01B5  01A6               	clrf	Dio_Config@state
  1106     01B6  01A7               	clrf	Dio_Config@pullType
  1107     01B7  0AA7               	incf	Dio_Config@pullType,f
  1108     01B8  3003               	movlw	3
  1109     01B9  2013               	fcall	_Dio_Config
  1110                           
  1111                           ;MCAL/scr/Dio.c: 75:        Dio_Config (4, 1, 0, 0);
  1112     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1113     01BB  01A5               	clrf	Dio_Config@direction
  1114     01BC  0AA5               	incf	Dio_Config@direction,f
  1115     01BD  01A6               	clrf	Dio_Config@state
  1116     01BE  01A7               	clrf	Dio_Config@pullType
  1117     01BF  3004               	movlw	4
  1118     01C0  2013               	fcall	_Dio_Config
  1119     01C1                     l81:
  1120     01C1  0008               	return
  1121     01C2                     __end_of_Dio_init:
  1122                           
  1123                           	psect	text7
  1124     0013                     __ptext7:	
  1125 ;; *************** function _Dio_Config *****************
  1126 ;; Defined at:
  1127 ;;		line 41 in file "MCAL/scr/Dio.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  pinNumber       1    wreg     unsigned char 
  1130 ;;  direction       1    5[BANK0 ] unsigned char 
  1131 ;;  state           1    6[BANK0 ] unsigned char 
  1132 ;;  pullType        1    7[BANK0 ] unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  pinNumber       1   14[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, btemp+1
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0
  1144 ;;      Params:         0       3
  1145 ;;      Locals:         0       3
  1146 ;;      Temps:          0       4
  1147 ;;      Totals:         0      10
  1148 ;;Total ram usage:       10 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_Dio_init
  1155 ;;		_SPI_Init
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0013                     _Dio_Config:	
  1160                           ;psect for function _Dio_Config
  1161                           
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _Dio_Config: [wreg+status,2+status,0+btemp+1]
  1165                           ;Dio_Config@pinNumber stored from wreg
  1166     0013  1283               	bcf	3,5	;RP0=0, select bank0
  1167     0014  00AE               	movwf	Dio_Config@pinNumber
  1168     0015                     l912:
  1169                           
  1170                           ;MCAL/scr/Dio.c: 43:     TRISIO = (unsigned char)((direction == 0) ? (TRISIO | (1U << pi
      +                          nNumber)) : (TRISIO & ~(1U << pinNumber)));
  1171     0015  0825               	movf	Dio_Config@direction,w
  1172     0016  1903               	btfsc	3,2
  1173     0017  2819               	goto	u351
  1174     0018  281A               	goto	u350
  1175     0019                     u351:
  1176     0019  282F               	goto	l916
  1177     001A                     u350:
  1178     001A                     l914:
  1179     001A  3001               	movlw	1
  1180     001B  00A8               	movwf	??_Dio_Config
  1181     001C  0A2E               	incf	Dio_Config@pinNumber,w
  1182     001D  2820               	goto	u364
  1183     001E                     u365:
  1184     001E  1003               	clrc
  1185     001F  0DA8               	rlf	??_Dio_Config,f
  1186     0020                     u364:
  1187     0020  3EFF               	addlw	-1
  1188     0021  1D03               	skipz
  1189     0022  281E               	goto	u365
  1190     0023  0828               	movf	??_Dio_Config,w
  1191     0024  3AFF               	xorlw	255
  1192     0025  1683               	bsf	3,5	;RP0=1, select bank1
  1193     0026  0505               	andwf	5,w	;volatile
  1194     0027  1283               	bcf	3,5	;RP0=0, select bank0
  1195     0028  00A9               	movwf	??_Dio_Config+1
  1196     0029  01AA               	clrf	??_Dio_Config+2
  1197     002A  0829               	movf	??_Dio_Config+1,w
  1198     002B  00AC               	movwf	_Dio_Config$56
  1199     002C  082A               	movf	??_Dio_Config+2,w
  1200     002D  00AD               	movwf	_Dio_Config$56+1
  1201     002E  2846               	goto	l918
  1202     002F                     l916:
  1203     002F  0A2E               	incf	Dio_Config@pinNumber,w
  1204     0030  00DF               	movwf	btemp+1
  1205     0031  3001               	movlw	1
  1206     0032  00A8               	movwf	??_Dio_Config
  1207     0033  3000               	movlw	0
  1208     0034  00A9               	movwf	??_Dio_Config+1
  1209     0035  2839               	goto	u374
  1210     0036                     u375:
  1211     0036  1003               	clrc
  1212     0037  0DA8               	rlf	??_Dio_Config,f
  1213     0038  0DA9               	rlf	??_Dio_Config+1,f
  1214     0039                     u374:
  1215     0039  0BDF               	decfsz	btemp+1,f
  1216     003A  2836               	goto	u375
  1217     003B  0828               	movf	??_Dio_Config,w
  1218     003C  1683               	bsf	3,5	;RP0=1, select bank1
  1219     003D  0405               	iorwf	5,w	;volatile
  1220     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1221     003F  00AA               	movwf	??_Dio_Config+2
  1222     0040  0829               	movf	??_Dio_Config+1,w
  1223     0041  00AB               	movwf	??_Dio_Config+3
  1224     0042  082A               	movf	??_Dio_Config+2,w
  1225     0043  00AC               	movwf	_Dio_Config$56
  1226     0044  082B               	movf	??_Dio_Config+3,w
  1227     0045  00AD               	movwf	_Dio_Config$56+1
  1228     0046                     l918:
  1229     0046  082C               	movf	_Dio_Config$56,w
  1230     0047  1683               	bsf	3,5	;RP0=1, select bank1
  1231     0048  0085               	movwf	5	;volatile
  1232     0049                     l920:
  1233                           
  1234                           ;MCAL/scr/Dio.c: 45:     if (direction == 1) {
  1235     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1236     004A  0325               	decf	Dio_Config@direction,w
  1237     004B  1D03               	btfss	3,2
  1238     004C  284E               	goto	u381
  1239     004D  284F               	goto	u380
  1240     004E                     u381:
  1241     004E  286E               	goto	l930
  1242     004F                     u380:
  1243     004F                     l922:
  1244                           
  1245                           ;MCAL/scr/Dio.c: 46:         if (state == 1) {
  1246     004F  0326               	decf	Dio_Config@state,w
  1247     0050  1D03               	btfss	3,2
  1248     0051  2853               	goto	u391
  1249     0052  2854               	goto	u390
  1250     0053                     u391:
  1251     0053  2860               	goto	l926
  1252     0054                     u390:
  1253     0054                     l924:
  1254                           
  1255                           ;MCAL/scr/Dio.c: 47:             DIO_State |= (1 << pinNumber);
  1256     0054  3001               	movlw	1
  1257     0055  00A8               	movwf	??_Dio_Config
  1258     0056  0A2E               	incf	Dio_Config@pinNumber,w
  1259     0057  285A               	goto	u404
  1260     0058                     u405:
  1261     0058  1003               	clrc
  1262     0059  0DA8               	rlf	??_Dio_Config,f
  1263     005A                     u404:
  1264     005A  3EFF               	addlw	-1
  1265     005B  1D03               	skipz
  1266     005C  2858               	goto	u405
  1267     005D  0828               	movf	??_Dio_Config,w
  1268     005E  04B4               	iorwf	_DIO_State,f
  1269                           
  1270                           ;MCAL/scr/Dio.c: 48:         } else {
  1271     005F  286C               	goto	l928
  1272     0060                     l926:
  1273                           
  1274                           ;MCAL/scr/Dio.c: 49:             DIO_State &= ~(1 << pinNumber);
  1275     0060  3001               	movlw	1
  1276     0061  00A8               	movwf	??_Dio_Config
  1277     0062  0A2E               	incf	Dio_Config@pinNumber,w
  1278     0063  2866               	goto	u414
  1279     0064                     u415:
  1280     0064  1003               	clrc
  1281     0065  0DA8               	rlf	??_Dio_Config,f
  1282     0066                     u414:
  1283     0066  3EFF               	addlw	-1
  1284     0067  1D03               	skipz
  1285     0068  2864               	goto	u415
  1286     0069  0828               	movf	??_Dio_Config,w
  1287     006A  3AFF               	xorlw	255
  1288     006B  05B4               	andwf	_DIO_State,f
  1289     006C                     l928:
  1290                           
  1291                           ;MCAL/scr/Dio.c: 51:         GPIO = DIO_State ;
  1292     006C  0834               	movf	_DIO_State,w
  1293     006D  0085               	movwf	5	;volatile
  1294     006E                     l930:
  1295                           
  1296                           ;MCAL/scr/Dio.c: 53:     if (pullType == 1) {
  1297     006E  0327               	decf	Dio_Config@pullType,w
  1298     006F  1D03               	btfss	3,2
  1299     0070  2872               	goto	u421
  1300     0071  2873               	goto	u420
  1301     0072                     u421:
  1302     0072  2884               	goto	l934
  1303     0073                     u420:
  1304     0073                     l932:
  1305                           
  1306                           ;MCAL/scr/Dio.c: 54:         OPTION_REG &= ~(1 << 7);
  1307     0073  307F               	movlw	127
  1308     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1309     0075  0581               	andwf	1,f	;volatile
  1310                           
  1311                           ;MCAL/scr/Dio.c: 55:         WPU |= (1 << pinNumber);
  1312     0076  3001               	movlw	1
  1313     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1314     0078  00A8               	movwf	??_Dio_Config
  1315     0079  0A2E               	incf	Dio_Config@pinNumber,w
  1316     007A  287D               	goto	u434
  1317     007B                     u435:
  1318     007B  1003               	clrc
  1319     007C  0DA8               	rlf	??_Dio_Config,f
  1320     007D                     u434:
  1321     007D  3EFF               	addlw	-1
  1322     007E  1D03               	skipz
  1323     007F  287B               	goto	u435
  1324     0080  0828               	movf	??_Dio_Config,w
  1325     0081  1683               	bsf	3,5	;RP0=1, select bank1
  1326     0082  0495               	iorwf	21,f	;volatile
  1327                           
  1328                           ;MCAL/scr/Dio.c: 56:     } else {
  1329     0083  2891               	goto	l78
  1330     0084                     l934:
  1331                           
  1332                           ;MCAL/scr/Dio.c: 57:         WPU &= ~(1 << pinNumber);
  1333     0084  3001               	movlw	1
  1334     0085  00A8               	movwf	??_Dio_Config
  1335     0086  0A2E               	incf	Dio_Config@pinNumber,w
  1336     0087  288A               	goto	u444
  1337     0088                     u445:
  1338     0088  1003               	clrc
  1339     0089  0DA8               	rlf	??_Dio_Config,f
  1340     008A                     u444:
  1341     008A  3EFF               	addlw	-1
  1342     008B  1D03               	skipz
  1343     008C  2888               	goto	u445
  1344     008D  0828               	movf	??_Dio_Config,w
  1345     008E  3AFF               	xorlw	255
  1346     008F  1683               	bsf	3,5	;RP0=1, select bank1
  1347     0090  0595               	andwf	21,f	;volatile
  1348     0091                     l78:
  1349     0091  0008               	return
  1350     0092                     __end_of_Dio_Config:
  1351                           
  1352                           	psect	text8
  1353     00EB                     __ptext8:	
  1354 ;; *************** function _ISR *****************
  1355 ;; Defined at:
  1356 ;;		line 50 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0
  1370 ;;      Params:         0       0
  1371 ;;      Locals:         0       0
  1372 ;;      Temps:          0       2
  1373 ;;      Totals:         0       2
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 1
  1377 ;; This function calls:
  1378 ;;		i1_Dio_Pin_Write
  1379 ;; This function is called by:
  1380 ;;		Interrupt level 1
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     00EB                     _ISR:	
  1385                           ;psect for function _ISR
  1386                           
  1387     00EB                     i1l1000:
  1388                           
  1389                           ;main.c: 52:     if (INTCONbits.GPIF) {
  1390     00EB  1C0B               	btfss	11,0	;volatile
  1391     00EC  28EE               	goto	u51_21
  1392     00ED  28EF               	goto	u51_20
  1393     00EE                     u51_21:
  1394     00EE  290E               	goto	i1l143
  1395     00EF                     u51_20:
  1396     00EF                     i1l1002:
  1397                           
  1398                           ;main.c: 54:         if ((GPIO & (1 << 3)) && !previous_gp3_state) {
  1399     00EF  1D85               	btfss	5,3	;volatile
  1400     00F0  28F2               	goto	u52_21
  1401     00F1  28F3               	goto	u52_20
  1402     00F2                     u52_21:
  1403     00F2  2905               	goto	i1l1012
  1404     00F3                     u52_20:
  1405     00F3                     i1l1004:
  1406     00F3  0833               	movf	_previous_gp3_state,w	;volatile
  1407     00F4  1D03               	btfss	3,2
  1408     00F5  28F7               	goto	u53_21
  1409     00F6  28F8               	goto	u53_20
  1410     00F7                     u53_21:
  1411     00F7  2905               	goto	i1l1012
  1412     00F8                     u53_20:
  1413     00F8                     i1l1006:
  1414                           
  1415                           ;main.c: 57:             if(nosa){
  1416     00F8  0832               	movf	_nosa,w
  1417     00F9  1903               	btfsc	3,2
  1418     00FA  28FC               	goto	u54_21
  1419     00FB  28FD               	goto	u54_20
  1420     00FC                     u54_21:
  1421     00FC  2902               	goto	i1l1010
  1422     00FD                     u54_20:
  1423     00FD                     i1l1008:
  1424                           
  1425                           ;main.c: 58:                 Dio_Pin_Write (4, 1);
  1426     00FD  01A0               	clrf	i1Dio_Pin_Write@state
  1427     00FE  0AA0               	incf	i1Dio_Pin_Write@state,f
  1428     00FF  3004               	movlw	4
  1429     0100  2137               	fcall	i1_Dio_Pin_Write
  1430                           
  1431                           ;main.c: 59:             }else {
  1432     0101  2905               	goto	i1l1012
  1433     0102                     i1l1010:
  1434                           
  1435                           ;main.c: 60:                 Dio_Pin_Write (4, 0);
  1436     0102  01A0               	clrf	i1Dio_Pin_Write@state
  1437     0103  3004               	movlw	4
  1438     0104  2137               	fcall	i1_Dio_Pin_Write
  1439     0105                     i1l1012:
  1440                           
  1441                           ;main.c: 67:         previous_gp3_state = (GPIO & (1 << 3)) ? 1 : 0;
  1442     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0106  1985               	btfsc	5,3	;volatile
  1444     0107  2909               	goto	u55_21
  1445     0108  290B               	goto	u55_20
  1446     0109                     u55_21:
  1447     0109  3001               	movlw	1
  1448     010A  290C               	goto	u56_20
  1449     010B                     u55_20:
  1450     010B  3000               	movlw	0
  1451     010C                     u56_20:
  1452     010C  00B3               	movwf	_previous_gp3_state	;volatile
  1453     010D                     i1l1014:
  1454                           
  1455                           ;main.c: 70:         INTCONbits.GPIF = 0;
  1456     010D  100B               	bcf	11,0	;volatile
  1457     010E                     i1l143:
  1458     010E  0824               	movf	??_ISR+1,w
  1459     010F  008A               	movwf	10
  1460     0110  0E23               	swapf	??_ISR,w
  1461     0111  0083               	movwf	3
  1462     0112  0EDE               	swapf	btemp,f
  1463     0113  0E5E               	swapf	btemp,w
  1464     0114  0009               	retfie
  1465     0115                     __end_of_ISR:
  1466                           
  1467                           	psect	intentry
  1468     0004                     __pintentry:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1471                           
  1472     0004                     interrupt_function:
  1473     005E                     saved_w         set	btemp
  1474     0004  00DE               	movwf	btemp
  1475     0005  0E03               	swapf	3,w
  1476     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0007  00A3               	movwf	??_ISR
  1478     0008  080A               	movf	10,w
  1479     0009  00A4               	movwf	??_ISR+1
  1480     000A  28EB               	ljmp	_ISR
  1481                           
  1482                           	psect	text9
  1483     0137                     __ptext9:	
  1484 ;; *************** function i1_Dio_Pin_Write *****************
  1485 ;; Defined at:
  1486 ;;		line 30 in file "MCAL/scr/Dio.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  pinNumber       1    wreg     unsigned char 
  1489 ;;  state           1    0[BANK0 ] unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  pinNumber       1    2[BANK0 ] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0
  1501 ;;      Params:         0       1
  1502 ;;      Locals:         0       1
  1503 ;;      Temps:          0       1
  1504 ;;      Totals:         0       3
  1505 ;;Total ram usage:        3 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_ISR
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     0137                     i1_Dio_Pin_Write:	
  1515                           ;psect for function i1_Dio_Pin_Write
  1516                           
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in i1_Dio_Pin_Write: [wreg+status,2+status,0]
  1520                           ;i1Dio_Pin_Write@pinNumber stored from wreg
  1521     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0138  00A2               	movwf	i1Dio_Pin_Write@pinNumber
  1523     0139                     i1l976:
  1524                           
  1525                           ;MCAL/scr/Dio.c: 32:     if (state == 1) {
  1526     0139  0320               	decf	i1Dio_Pin_Write@state,w
  1527     013A  1D03               	btfss	3,2
  1528     013B  293D               	goto	u48_21
  1529     013C  293E               	goto	u48_20
  1530     013D                     u48_21:
  1531     013D  294A               	goto	i1l980
  1532     013E                     u48_20:
  1533     013E                     i1l978:
  1534                           
  1535                           ;MCAL/scr/Dio.c: 33:         DIO_State |= (1 << pinNumber);
  1536     013E  3001               	movlw	1
  1537     013F  00A1               	movwf	??i1_Dio_Pin_Write
  1538     0140  0A22               	incf	i1Dio_Pin_Write@pinNumber,w
  1539     0141  2944               	goto	u49_24
  1540     0142                     u49_25:
  1541     0142  1003               	clrc
  1542     0143  0DA1               	rlf	??i1_Dio_Pin_Write,f
  1543     0144                     u49_24:
  1544     0144  3EFF               	addlw	-1
  1545     0145  1D03               	skipz
  1546     0146  2942               	goto	u49_25
  1547     0147  0821               	movf	??i1_Dio_Pin_Write,w
  1548     0148  04B4               	iorwf	_DIO_State,f
  1549                           
  1550                           ;MCAL/scr/Dio.c: 34:     }
  1551     0149  2956               	goto	i1l982
  1552     014A                     i1l980:
  1553                           
  1554                           ;MCAL/scr/Dio.c: 36:         DIO_State &= ~(1 << pinNumber);
  1555     014A  3001               	movlw	1
  1556     014B  00A1               	movwf	??i1_Dio_Pin_Write
  1557     014C  0A22               	incf	i1Dio_Pin_Write@pinNumber,w
  1558     014D  2950               	goto	u50_24
  1559     014E                     u50_25:
  1560     014E  1003               	clrc
  1561     014F  0DA1               	rlf	??i1_Dio_Pin_Write,f
  1562     0150                     u50_24:
  1563     0150  3EFF               	addlw	-1
  1564     0151  1D03               	skipz
  1565     0152  294E               	goto	u50_25
  1566     0153  0821               	movf	??i1_Dio_Pin_Write,w
  1567     0154  3AFF               	xorlw	255
  1568     0155  05B4               	andwf	_DIO_State,f
  1569     0156                     i1l982:
  1570                           
  1571                           ;MCAL/scr/Dio.c: 38:     GPIO = DIO_State ;
  1572     0156  0834               	movf	_DIO_State,w
  1573     0157  0085               	movwf	5	;volatile
  1574     0158                     i1l66:
  1575     0158  0008               	return
  1576     0159                     __end_ofi1_Dio_Pin_Write:
  1577     0000                     ___latbits      equ	0
  1578     005E                     btemp           set	94	;btemp
  1579     005E                     wtemp0          set	94
  1580                           
  1581                           	psect	config
  1582                           
  1583                           ;Config register CONFIG @ 0x2007
  1584                           ;	Oscillator Selection bits
  1585                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1586                           ;	Watchdog Timer Enable bit
  1587                           ;	WDTE = OFF, WDT disabled
  1588                           ;	Power-Up Timer Enable bit
  1589                           ;	PWRTE = OFF, PWRT disabled
  1590                           ;	GP3/MCLR pin function select
  1591                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1592                           ;	Brown-out Detect Enable bit
  1593                           ;	BOREN = OFF, BOD disabled
  1594                           ;	Code Protection bit
  1595                           ;	CP = OFF, Program Memory code protection is disabled
  1596                           ;	Data Code Protection bit
  1597                           ;	CPD = OFF, Data memory code protection is disabled
  1598     2007                     	org	8199
  1599     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     17      21

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _SPI_Init->_Dio_Config
    _MAX7219_Init->_SPI_Send_16bit
    _SPI_Send_16bit->_Dio_Pin_Write
    _Dio_init->_Dio_Config

Critical Paths under _ISR in BANK0

    _ISR->i1_Dio_Pin_Write

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     786
                           _Dio_init
                          _Gpio_Init
                       _MAX7219_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         0     0      0     184
                     _SPI_Send_16bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Send_16bit                                       9     7      2     184
                                              8 BANK0      9     7      2
                      _Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (3) _Dio_Pin_Write                                        3     2      1      86
                                              5 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dio_init                                             0     0      0     301
                         _Dio_Config
 ---------------------------------------------------------------------------------
 (2) _Dio_Config                                          10     7      3     301
                                              5 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0      82
                                              3 BANK0      2     2      0
                    i1_Dio_Pin_Write
 ---------------------------------------------------------------------------------
 (5) i1_Dio_Pin_Write                                      3     2      1      82
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Dio_init
     _Dio_Config
   _Gpio_Init
   _MAX7219_Init
     _SPI_Send_16bit
       _Dio_Pin_Write
   _SPI_Init
     _Dio_Config

 _ISR (ROOT)
   i1_Dio_Pin_Write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     17      21     33.9%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 17:46:24 2024

                       pc 0002                        l81 01C1                        l66 0136  
                      l78 0091                        l88 01A2                        l97 018F  
                      fsr 0004     __end_of_Dio_Pin_Write 0137            _SPI_Send_16bit 0092  
                     l104 00EA                       l131 01CB                       l132 01CB  
                     l152 0177                       l910 0134                       l920 0049  
                     l912 0015                       l904 0117                       l922 004F  
                     l930 006E                       l914 001A                       l906 011C  
                     l932 0073                       l924 0054                       l916 002F  
                     l908 0128                       l934 0084                       l926 0060  
                     l918 0046                       l950 00BC                       l928 006C  
                     l960 00E5                       l952 00C2                       l944 0099  
                     l936 0092                       l962 01B3                       l954 00CD  
                     l946 00B4                       l938 0096                       l970 0178  
                     l964 0190                       l956 00D1                       l948 00B9  
                     l972 0159                       l966 0193                       l958 00D8  
                     l990 01C5                       l968 019B                       l992 01C6  
                     l984 01C2                       l994 01C8                       l986 01C3  
                     l996 01C9                       l988 01C4                       l998 01CA  
                     u320 011C                       u321 011B                       u420 0073  
                     u404 005A                       u421 0072                       u405 0058  
                     u414 0066                       u350 001A                       u334 0122  
                     u415 0064                       u351 0019                       u335 0120  
                     u344 012E                       u345 012C                       u434 007D  
                     u435 007B                       u444 008A                       u380 004F  
                     u364 0020                       u460 00B4                       _ISR 00EB  
                     u445 0088                       u381 004E                       u365 001E  
                     u461 00B3                       u390 0054                       u374 0039  
                     u470 00E5                       u454 00A6                       u391 0053  
                     u375 0036                       u471 00E4                       u455 00A3  
                     u617 00BF                       u475 00E1                       u627 00CA  
                     _WPU 0095                      ?_ISR 0020                      _IOCB 0096  
                    _GPIO 0005                      i1l66 0158                      _main 01C2  
                    _nosa 0032                      btemp 005E                _Dio_Config 0013  
i1Dio_Pin_Write@pinNumber 0022                      start 000B                     ??_ISR 0023  
  __end_of_SPI_Send_16bit 00EB                     ?_main 0020                     _ANSEL 009F  
                   i1l143 010E                     i1l980 014A                     i1l982 0156  
                   i1l976 0139                     i1l978 013E                     u50_24 0150  
                   u50_25 014E                     u51_20 00EF                     u51_21 00EE  
                   u52_20 00F3                     u52_21 00F2                     u53_20 00F8  
                   u53_21 00F7                     u54_20 00FD                     u54_21 00FC  
                   u55_20 010B                     u55_21 0109                     u48_20 013E  
                   u56_20 010C                     u48_21 013D                     u49_24 0144  
                   u49_25 0142          __end_of_SPI_Init 0190                     pclath 000A  
    __end_of_MAX7219_Init 0178                     status 0003                     wtemp0 005E  
        __end_of_Dio_init 01C2           __initialization 000C              __end_of_main 01CD  
         ?_SPI_Send_16bit 0028                    ??_main 0000                    _ADCON0 001F  
                  _ADRESH 001E                    _ADRESL 009E                    i1l1000 00EB  
                  i1l1010 0102                    i1l1002 00EF                    i1l1004 00F3  
                  i1l1012 0105                    i1l1014 010D                    i1l1006 00F8  
                  i1l1008 00FD                    _TRISIO 0085               ?_Dio_Config 0025  
      SPI_Send_16bit@data 0028                    saved_w 005E   __end_of__initialization 0011  
          __pcstackCOMMON 0000         __end_of_Gpio_Init 01A3                 ?_SPI_Init 0020  
               ?_Dio_init 0020                __pbssBANK0 0031                __pmaintext 01C2  
  Dio_Pin_Write@pinNumber 0027                __pintentry 0004                ??_SPI_Init 0000  
            _MAX7219_Init 0159        Dio_Config@pullType 0027                ??_Dio_init 0000  
              __stringtab 01A3         ??i1_Dio_Pin_Write 0021          ??_SPI_Send_16bit 002A  
                 __ptext1 0178                   __ptext2 0159                   __ptext3 0092  
                 __ptext4 0115                   __ptext5 0190                   __ptext6 01B3  
                 __ptext7 0013                   __ptext8 00EB                   __ptext9 0137  
               _DIO_State 0034      end_of_initialization 0011             _Dio_Config$56 002C  
            ??_Dio_Config 0028             _Dio_Pin_Write 0115        __end_of_Dio_Config 0092  
    i1Dio_Pin_Write@state 0020            ?_Dio_Pin_Write 0025                 _Gpio_Init 0190  
     start_initialization 000C               __end_of_ISR 0115               _BCD_Enabled 0031  
       SPI_Send_16bit@bit 002F                ?_Gpio_Init 0020                 ___latbits 0000  
           __pcstackBANK0 0020           i1_Dio_Pin_Write 0137          _MAX7219_No_Table 01A9  
     Dio_Config@direction 0025           Dio_Config@state 0026           ??_Dio_Pin_Write 0026  
               __pstrings 01A3       Dio_Config@pinNumber 002E         interrupt_function 0004  
                _SPI_Init 0178   __end_ofi1_Dio_Pin_Write 0159               __stringbase 01A8  
             ??_Gpio_Init 0000                  _Dio_init 01B3        Dio_Pin_Write@state 0025  
      _previous_gp3_state 0033        __end_of__stringtab 01A9             ?_MAX7219_Init 0020  
        ?i1_Dio_Pin_Write 0020                _INTCONbits 000B  __end_of_MAX7219_No_Table 01B3  
                intlevel1 0000                 stringcode 01A3            ??_MAX7219_Init 0000  
              _OPTION_REG 0081                  stringdir 01A3                  stringtab 01A3  
